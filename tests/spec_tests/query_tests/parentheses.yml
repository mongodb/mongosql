catalog_data:
  foo:
    ternary:
      - { "_id": 0, "a": 6, "b": 2, "c": 11 }
      - { "_id": 1, "a": 6, "b": 1, "c": 10 }

catalog_schema:
  {
    'foo': {
      'ternary': {
        'bsonType': "object",
        'required': [ '_id', 'a', 'b', 'c' ],
        'additionalProperties': false,
        'properties': {
          '_id': { 'bsonType': "int" },
          'a': { 'bsonType': "int" },
          'b': { 'bsonType': "int" },
          'c': { 'bsonType': "int" },
        }
      },
    }
  }

tests:
  - description: parentheses correctness tests
    current_db: foo
    query: "SELECT VALUE { 'a': a, 'b': b, 'c': c, 'a+b*c': a + b * c, '(a+b)*c': (a + b) * c } FROM ternary AS ternary"
    translation_target_db: foo
    translation_target_coll: ternary
    translation:
      - {'$project': {'_id': 0, 'ternary': '$$ROOT'}}
      - {'$project': {'_id': 0, 'ternary': '$ternary'}}
      - {'$project': {'_id': 0, '__bot': {'a': '$ternary.a', 'b': '$ternary.b', 'c': '$ternary.c', 'a+b*c': {'$add': ['$ternary.a', {'$multiply': ['$ternary.b', '$ternary.c']}]}, '(a+b)*c': {'$multiply': [{'$add': ['$ternary.a', '$ternary.b']}, '$ternary.c']}}}}
      - { '$replaceWith': { '$unsetField': { 'field': '__bot', 'input':
           { '$setField': { 'field': '' , 'input': '$$ROOT', 'value': '$__bot' }
        }}}}
    result:
      - {'': { "a": 6, "b": 2, "c": 11, "a+b*c": 28, "(a+b)*c": 88 }}
      - {'': { "a": 6, "b": 1, "c": 10, "a+b*c": 16, "(a+b)*c": 70 }}
  
  - description: parentheses are not allowed on any data source except a derived table
    query: "SELECT * FROM (ternary) AS ternary"
    should_compile: false
    parse_error: "unexpected <identifier> 'ternary' after '(', expected 'SELECT'"
