tests:
  - description: Undelimited identifier containing a . character is a compound identifier
    query: "SELECT VALUE {'c': a.c} FROM [{'a': {'c': 1}}, {'a': 3}] arr"
    current_db: test
    translation_target_db: test
    translation:
      - {'$documents': [{'a': {'c': {'$literal': 1}}}, {'a': {'$literal': 3}}]}
      - {'$project': {'_id': 0, 'arr': '$$ROOT'}}
      - {'$project': {'_id': 0, '__bot': {'c': '$arr.a.c'}}}
      - { '$replaceWith': { '$unsetField': { 'field': '__bot', 'input':
           { '$setField': { 'field': '' , 'input': '$$ROOT', 'value': '$__bot' }
        }}}}
    result:
      - {'': {'c': 1}}
      - {'': {}}

  - description: Delimited identifier containing a . character includes the .
    query: "SELECT VALUE {'a.c': `a.c`} FROM [{'a': {'c': 1}, 'a.c': 2}, {'a': 3, 'a.c': 4}] arr"
    skip_reason: 'SQL-683: codegen for fields with dots not supported'
    current_db: test
    translation_target_db: test
    result:
      - {'': {'a.c': 2}}
      - {'': {'a.c': 4}}

  - description: Undelimited identifier starting with digit is not parsed as an identifier
    query: "SELECT 1a FROM [{'1a': 2}] arr"
    current_db: test
    translation_target_db: test
    should_compile: false
    parse_error: "Unrecognized token `1a`"

  - description: Delimited identifier starting with digit is an identifier
    query: "SELECT VALUE {'1a': `1a`} FROM [{'1a': 2}] arr"
    current_db: test
    translation_target_db: test
    translation:
      - {'$documents': [{'1a': {'$literal': 2}}]}
      - {'$project': {'_id': 0, 'arr': '$$ROOT'}}
      - {'$project': {'_id': 0, '__bot': {'1a': '$arr.1a'}}}
      - { '$replaceWith': { '$unsetField': { 'field': '__bot', 'input':
           { '$setField': { 'field': '' , 'input': '$$ROOT', 'value': '$__bot' }
        }}}}
    result:
      - {'': {'1a': 2}}

  - description: Backtick delimited identifiers containing delimiter characters
    query: "SELECT VALUE {'a`b': `a``b`, 'a\"b': `a\"b`, 'a`\"b': `a``\"b`} FROM [{'a`b': 1, 'a\"b': 2, 'a`\"b': 3}] arr"
    current_db: test
    translation_target_db: test
    translation:
      - {'$documents': [{'a`b': {'$literal': 1}, 'a"b': {'$literal': 2}, 'a`"b': {'$literal': 3}}]}
      - {'$project': {'_id': 0, 'arr': '$$ROOT'}}
      - {'$project': {'_id': 0, '__bot': {'a`b': '$arr.a`b', 'a"b': '$arr.a"b', 'a`"b': '$arr.a`"b'}}}
      - { '$replaceWith': { '$unsetField': { 'field': '__bot', 'input':
           { '$setField': { 'field': '' , 'input': '$$ROOT', 'value': '$__bot' }
        }}}}
    result:
      - {'': {'a`b': 1, 'a"b': 2, 'a`"b': 3}}

  - description: Double quote delimited identifiers containing delimiter characters
    query: "SELECT VALUE {'a`b': \"a`b\", 'a\"b': \"a\"\"b\", 'a`\"b': \"a`\"\"b\"} FROM [{'a`b': 1, 'a\"b': 2, 'a`\"b': 3}] arr"
    current_db: test
    translation_target_db: test
    translation:
      - {'$documents': [{'a`b': {'$literal': 1}, 'a"b': {'$literal': 2}, 'a`"b': {'$literal': 3}}]}
      - {'$project': {'_id': 0, 'arr': '$$ROOT'}}
      - {'$project': {'_id': 0, '__bot': {'a`b': '$arr.a`b', 'a"b': '$arr.a"b', 'a`"b': '$arr.a`"b'}}}
      - { '$replaceWith': { '$unsetField': { 'field': '__bot', 'input':
           { '$setField': { 'field': '' , 'input': '$$ROOT', 'value': '$__bot' }
        }}}}
    result:
      - {'': {'a`b': 1, 'a"b': 2, 'a`"b': 3}}

  - description: Regular and delimited identifiers
    query: "SELECT VALUE {'a': a, 'b': `b`} FROM [{'a': 1, 'b': 2}, {'a': 3, 'b': 4}] arr"
    current_db: test
    translation_target_db: test
    translation:
      - {'$documents': [{'a': {'$literal': 1}, 'b': {'$literal': 2}}, {'a': {'$literal': 3}, 'b': {'$literal': 4}}]}
      - {'$project': {'_id': 0, 'arr': '$$ROOT'}}
      - {'$project': {'_id': 0, '__bot': {'a': '$arr.a', 'b': '$arr.b'}}}
      - { '$replaceWith': { '$unsetField': { 'field': '__bot', 'input':
           { '$setField': { 'field': '' , 'input': '$$ROOT', 'value': '$__bot' }
        }}}}
    result:
      - {'': {'a': 1, 'b': 2}}
      - {'': {'a': 3, 'b': 4}}

  - description: Undelimited identifier with non-ASCII characters is invalid
    query: "SELECT VALUE {'αβγ': αβγ} FROM [{'αβγ': 1}] arr"
    current_db: test
    translation_target_db: test
    should_compile: false
    parse_error: "Invalid token at 24"
    
  - description: Delimited identifier with non-ASCII characters
    query: "SELECT VALUE {'αβγ': `αβγ`} FROM [{'αβγ': 1}] arr"
    current_db: test
    translation_target_db: test
    translation:
      - {'$documents': [{'αβγ': {'$literal': 1}}]}
      - {'$project': {'_id': 0, 'arr': '$$ROOT'}}
      - {'$project': {'_id': 0, '__bot': {'αβγ': '$arr.αβγ'}}}
      - { '$replaceWith': { '$unsetField': { 'field': '__bot', 'input':
           { '$setField': { 'field': '' , 'input': '$$ROOT', 'value': '$__bot' }
        }}}}
    result:
      - {'': {'αβγ': 1}}

  - description: Compound identifier with more than 3 parts
    query: "SELECT VALUE {'d': a.b.c.d} FROM [{'a': {'b': {'c': {'d': 1}}}}] arr"
    current_db: test
    translation_target_db: test
    translation:
      - {'$documents': [{'a': {'b': {'c': {'d': {'$literal': 1}}}}}]}
      - {'$project': {'_id': 0, 'arr': '$$ROOT'}}
      - {'$project': {'_id': 0, '__bot': {'d': '$arr.a.b.c.d'}}}
      - { '$replaceWith': { '$unsetField': { 'field': '__bot', 'input':
           { '$setField': { 'field': '' , 'input': '$$ROOT', 'value': '$__bot' }
        }}}}
    result:
      - {'': {'d': 1}}

  - description: Compound identifier with mixed delimited and undelimited components
    query: "SELECT VALUE {'c': `a.b`.c} FROM [{'a.b': {'c': 1}, 'a': {'b': {'c': 2}, 'b.c': 3}}] arr"
    skip_reason: 'SQL-683: codegen for fields with dots not supported'
    current_db: test
    translation_target_db: test
    result:
      - {'': {'c': 1}}

  - description: Case-sensitive identifiers
    query: "SELECT VALUE {'a': a, 'A': A} FROM [{'a': 1, 'A': 2}, {'a': 3}, {'A': 4}] arr"
    current_db: test
    translation_target_db: test
    translation:
      - {'$documents': [{'a': {'$literal': 1}, 'A': {'$literal': 2}}, {'a': {'$literal': 3}}, {'A': {'$literal': 4}}]}
      - {'$project': {'_id': 0, 'arr': '$$ROOT'}}
      - {'$project': {'_id': 0, '__bot': {'a': '$arr.a', 'A': '$arr.A'}}}
      - { '$replaceWith': { '$unsetField': { 'field': '__bot', 'input':
           { '$setField': { 'field': '' , 'input': '$$ROOT', 'value': '$__bot' }
        }}}}
    result:
      - {'': {'a': 1, 'A': 2}}
      - {'': {'a': 3}}
      - {'': {'A': 4}}

  - description: Empty identifiers
    query: "SELECT VALUE {'empty': ``} FROM [{'': 2}] AS arr"
    skip_reason: 'SQL-683: codegen for empty fields not supported'
    current_db: test
    translation_target_db: test
    translation:
      - {'$documents': [{'': {'$literal': 2}}]}
      - {'$project': {'_id': 0, 'arr': '$$ROOT'}}
      - {'$project': {'_id': 0, '__bot': {'empty': {'$getField': {'field': '', 'input': '$arr'}}}}}
      - { '$replaceWith': { '$unsetField': { 'field': '__bot', 'input':
           { '$setField': { 'field': '' , 'input': '$$ROOT', 'value': '$__bot' }
        }}}}
    result:
      - {'': {'empty': 2}}
