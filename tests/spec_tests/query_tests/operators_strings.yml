catalog_data:
  foo:
    concat:
      - { "_id": 0, "s1": "ab", "s2": "c", }
      - { "_id": 1, "s1": "ab", "s2": null, }
      - { "_id": 2, "s1": "ab" }
    nullAndMissing:
      - { "_id": 0, "s": null, "p": "abc" }
      - { "_id": 1, "p": "abc" }
      - { "_id": 2, "s": "abc", "p": null }
      - { "_id": 3, "s": "abc" }
    like:
      - { "_id": 0, "s": "abc", "p": "abc" }
      - { "_id": 1, "s": "abc", "p": "a_c" }
      - { "_id": 2, "s": "abc", "p": "a%" }
      - { "_id": 3, "s": "abc", "p": "ab_%", }
      - { "_id": 4, "s": "bc", "p": "abc", }
      - { "_id": 5, "s": "bc", "p": "_bc", }
      - { "_id": 6, "s": "bc", "p": "ab%c", }
      - { "_id": 7, "s": "bc", "p": "%_bc", }
    escape:
      - { "_id": 0, "s": "abc", "p": "abc" }
      - { "_id": 1, "s": "abc", "p": "a$_c" }
      - { "_id": 2, "s": "a$_%c", "p": "a$$$_$%c" }
      - { "_id": 3, "s": "abc", "p": "ab$c" }

catalog_schema:
  {
    "foo": {
      "concat": {
        "bsonType": "object",
        "properties": {
          "_id": {
            "bsonType": "int"
          },
          "s1": {
            "bsonType": "string"
          },
          "s2": {
            "anyOf": [
              { "bsonType": "string" },
              { "bsonType": "null" }
            ]
          }
        }
      },
      "nullAndMissing": {
        "bsonType": "object",
        "properties": {
          "_id": {
            "bsonType": "int"
          },
          "s": {
            "anyOf": [
              { "bsonType": "string" },
              { "bsonType": "null" }
            ]
          },
          "p": {
            "anyOf": [
              { "bsonType": "string" },
              { "bsonType": "null" }
            ]
          }
        }
      },
      "like": {
        "bsonType": "object",
        "properties": {
          "_id": {
            "bsonType": "int"
          },
          "s": {
            "anyOf": [
              { "bsonType": "string" },
              { "bsonType": "null" }
            ]
          },
          "p": {
            "anyOf": [
              { "bsonType": "string" },
              { "bsonType": "null" }
            ]
          }
        }
      },
      "escape": {
        "bsonType": "object",
        "properties": {
          "_id": {
            "bsonType": "int"
          },
          "s": {
            "anyOf": [
              { "bsonType": "string" },
              { "bsonType": "null" }
            ]
          },
          "p": {
            "anyOf": [
              { "bsonType": "string" },
              { "bsonType": "null" }
            ]
          }
        }
      }
    }
  }

tests:
  - description: correctness test for string concatentation
    current_db: foo
    query: "SELECT VALUE {'s1': s1, 's2': s2, 's': s1 || s2} FROM concat AS c"
    translation_target_db: foo
    translation_target_coll: concat
    translation:
      - {'$project': {'_id': 0, 'concat': '$$ROOT'}}
      - {'$project': {'_id': 0, 'c': '$concat'}}
      - {'$project': {'_id': 0, '__bot': {'s1': '$c.s1', 's2': '$c.s2', 's': {'$concat': ['$c.s1', '$c.s2']}}}}
    result:
      - {'__bot': {'s1': 'ab', 's2': 'c', 's': 'abc'}}
      - {'__bot': {'s1': 'ab', 's2': null, 's': null}}
      - {'__bot': {'s1': 'ab', 's': null}}

  - description: LIKE ESCAPE value cannot be longer than 1 character
    query: "SELECT VALUE {'_1': 'a' LIKE '_' ESCAPE 'abc'}"
    should_compile: false
    parse_error: "ESCAPE character must be exactly 1 character"

  - description: LIKE ESCAPE value cannot be empty string
    query: "SELECT VALUE {'_1': 'a' LIKE '_' ESCAPE ''}"
    should_compile: false
    parse_error: "ESCAPE character must be exactly 1 character"

  - description: LIKE ESCAPE value cannot be non-literal
    current_db: foo
    query: "SELECT VALUE {'_1': 'a' LIKE '_' ESCAPE s} FROM `like` AS `like`"
    should_compile: false
    parse_error: "ESCAPE value must be literal"

  - description: LIKE operator - NULL or MISSING arguments result in NULL
    current_db: foo
    query: "SELECT VALUE {'s': s, 'p': p, 'r': s LIKE p} FROM nullAndMissing AS n"
    translation_target_db: foo
    translation_target_coll: nullAndMissing
    translation:
      - {'$project': {'_id': 0, 'nullAndMissing': '$$ROOT'}}
      - {'$project': {'_id': 0, 'n': '$nullAndMissing'}}
      - {'$project': {'_id': 0, '__bot': {'s': '$n.s', 'p': '$n.p', 'r': {'$like': {'input': '$n.s', 'pattern': '$n.p'}}}}}
    result:
      - {'__bot': {'s': null, 'p': 'abc', 'r': null}}
      - {'__bot': {'p': 'abc', 'r': null}}
      - {'__bot': {'s': 'abc', 'p': null, 'r': null}}
      - {'__bot': {'s': 'abc', 'r': null}}

  - description: LIKE operator with no ESCAPE correctness tests
    current_db: foo
    query: "SELECT VALUE {'s': s, 'p': p, 'r': s LIKE p} FROM `like` AS l"
    translation_target_db: foo
    translation_target_coll: like
    translation:
      - {'$project': {'_id': 0, 'like': '$$ROOT'}}
      - {'$project': {'_id': 0, 'l': '$like'}}
      - {'$project': {'_id': 0, '__bot': {'s': '$l.s', 'p': '$l.p', 'r': {'$like': {'input': '$l.s', 'pattern': '$l.p'}}}}}
    result:
      - {'__bot': {'s': 'abc', 'p': 'abc', 'r': true}}
      - {'__bot': {'s': 'abc', 'p': 'a_c', 'r': true}}
      - {'__bot': {'s': 'abc', 'p': 'a%', 'r': true}}
      - {'__bot': {'s': 'abc', 'p': 'ab_%', 'r': true}}
      - {'__bot': {'s': 'bc', 'p': 'abc', 'r': false}}
      - {'__bot': {'s': 'bc', 'p': '_bc', 'r': false}}
      - {'__bot': {'s': 'bc', 'p': 'ab%c', 'r': false}}
      - {'__bot': {'s': 'bc', 'p': '%_bc', 'r': false}}

  - description: LIKE operator with ESCAPE correctness tests
    current_db: foo
    query: "SELECT VALUE {'s': s, 'p': p, 'r': s LIKE p ESCAPE '$'} FROM `escape` AS e"
    translation_target_db: foo
    translation_target_coll: escape
    translation:
      - {'$project': {'_id': 0, 'escape': '$$ROOT'}}
      - {'$project': {'_id': 0, 'e': '$escape'}}
      - {'$project': {'_id': 0, '__bot': {'s': '$e.s', 'p': '$e.p', 'r': {'$like': {'input': '$e.s', 'pattern': '$e.p', 'escape': {'$literal': '$'}}}}}}
    result:
      - {'__bot': {'s': 'abc', 'p': 'abc', 'r': true}}
      - {'__bot': {'s': 'abc', 'p': 'a$_c', 'r': false}}
      - {'__bot': {'s': 'a$_%c', 'p': 'a$$$_$%c', 'r': true}}
      - {'__bot': {'s': 'abc', 'p': 'ab$c', 'r': true}}
