catalog_data:
  foo:
    bar:
      - {'_id': 0, 'arr': [1, 2, 3], 'd': 2.3, 'i': 2}

catalog_schema:
  {
    'foo': {
      'bar': {
        'bsonType': "object",
        'required': [ 'd', 'i' ],
        'additionalProperties': false,
        'properties': {
          'd': {
            'bsonType': "double"
          },
          'i': {
            'bsonType': "int"
          },
        }
      }
    }
  }

tests:
  - description: SELECT empty array literal
    query: "SELECT VALUE {'_1': []} FROM [{}] AS _dual"
    current_db: test
    translation_target_db: test
    translation:
      - {'$documents': [{'$literal': {}}]}
      - {'$project': {'_id': 0, '_dual': '$$ROOT'}}
      - {'$project': {'_id': 0, '__bot': {'_1': []}}}
      - { '$replaceWith': { '$unsetField': { 'field': '__bot', 'input':
           { '$setField': { 'field': '' , 'input': '$$ROOT', 'value': '$__bot' }
        }}}}
    result:
      - {'': {'_1': []}}

  - description: SELECT non-empty array literal
    query: "SELECT VALUE {'_1': [1, true, 'yes', {'a': 'b'}, [1.0, false]]} FROM [{}] AS _dual"
    current_db: test
    translation_target_db: test
    translation:
      - {'$documents': [{'$literal': {}}]}
      - {'$project': {'_id': 0, '_dual': '$$ROOT'}}
      - {'$project': {'_id': 0, '__bot': {'_1': [{'$literal': 1}, {'$literal': true}, {'$literal': 'yes'}, {'a': {'$literal': 'b'}}, [{'$literal': 1.0}, {'$literal': false}]]}}}
      - { '$replaceWith': { '$unsetField': { 'field': '__bot', 'input':
           { '$setField': { 'field': '' , 'input': '$$ROOT', 'value': '$__bot' }
        }}}}
    result:
      - {'': {'_1': [1, true, 'yes', {'a': 'b'}, [1.0, false]]}}

  - description: Array index access - zero and positive indexes
    current_db: foo
    query: "SELECT VALUE {'a': arr[0], 'b': arr[1], 'c': arr[2]} FROM bar AS bar"
    skip_reason: "SQL-204: disable array indexing"
    result:
      - {'': {'a': 1, 'b': 2, 'c': 3}}

  - description: Array index access - negative indexes
    current_db: foo
    query: "SELECT VALUE {'a': arr[-1], 'b': arr[-2], 'c': arr[-3]} FROM bar AS bar"
    skip_reason: "SQL-204: disable array indexing"
    result:
      - {'': {'a': 3, 'b': 2, 'c': 1}}

  - description: Array index access - positive index out of bounds (MISSING)
    current_db: foo
    query: "SELECT VALUE {'a': arr[4]} FROM bar AS bar"
    skip_reason: "SQL-204: disable array indexing"
    result:
      - {'': {}}

  - description: Array index access - negative index out of bounds (MISSING)
    current_db: foo
    query: "SELECT VALUE {'a': arr[-4]} FROM bar AS bar"
    skip_reason: "SQL-204: disable array indexing"
    result:
      - {'': {}}

  - description: Array index access - null index
    current_db: foo
    query: "SELECT VALUE {'a': arr[NULL]} FROM bar AS bar"
    skip_reason: "SQL-204: disable array indexing"
    result:
      - {'': {'a': null}}

  - description: Array index access - missing index
    current_db: foo
    query: "SELECT VALUE {'x': x, 'a': arr[x]} FROM bar AS bar"
    skip_reason: "SQL-204: disable array indexing"
    result:
      - {'': {'a': null}}

  - description: Array index access - column known to be integer
    current_db: foo
    query: "SELECT VALUE {'arr': arr, 'i': i, 'a': arr[i]} FROM bar AS bar"
    skip_reason: "SQL-204: disable array indexing"
    result:
      - {'': {'arr': [1, 2, 3], 'i': 2, 'a': 3}}

  - description: Array index access - column CAST to integer
    current_db: foo
    query: "SELECT VALUE {'arr': arr, 'd': d, 'a': arr[CAST(d AS INT)]} FROM bar AS bar"
    skip_reason: "SQL-204: disable array indexing"
    result:
      - {'': {'arr': [1, 2, 3], 'd': 2.3, 'a': 3}}
