variables:
  bool: &bool ["BOOL", "NULL"]
  document: &document ["DOCUMENT", "NULL"]
  numerics: &numerics ["INT", "LONG", "DOUBLE", "DECIMAL", "NULL"]
  selfComparisonValidTypes: &selfComparisonValidTypes
    - { "arg1": *numerics }
    - { "arg1": [ "STRING", "NULL" ] }
    - { "arg1": *document }
    - { "arg1": [ "ARRAY", "NULL" ] }
    - { "arg1": [ "BINDATA", "NULL" ] }
    - { "arg1": [ "UNDEFINED", "NULL" ] }
    - { "arg1": [ "OBJECTID", "NULL" ] }
    - { "arg1": *bool }
    - { "arg1": [ "BSON_DATE", "NULL" ] }
    - { "arg1": [ "NULL" ] }
    - { "arg1": [ "REGEX", "NULL" ] }
    - { "arg1": [ "SYMBOL", "NULL" ] }
    - { "arg1": [ "BSON_TIMESTAMP", "NULL" ] }
    - { "arg1": [ "MINKEY", "NULL" ] }
    - { "arg1": [ "MAXKEY", "NULL" ] }

tests:
  # Note: Non-distinct ADD_TO_ARRAY has no type constraints
  - description: Distinct ADD_TO_ARRAY argument must be self-comparable
    query: "SELECT * FROM foo GROUP BY NULL AS _groupKey1 AGGREGATE ADD_TO_ARRAY(DISTINCT arg1) AS agg"
    valid_types: *selfComparisonValidTypes

  - description: AVG argument must be numeric
    query: "SELECT * FROM foo GROUP BY NULL AS _groupKey1 AGGREGATE AVG(arg1) AS avg"
    valid_types:
      - {"arg1": *numerics}

  - description: Distinct AVG argument must be numeric
    query: "SELECT * FROM foo GROUP BY NULL AS _groupKey1 AGGREGATE AVG(DISTINCT arg1) AS avg"
    valid_types:
      - {"arg1": *numerics}

  # Note: Non-distinct COUNT has no type constraints
  - description: Distinct COUNT argument must be self-comparable
    query: "SELECT * FROM foo GROUP BY NULL AS _groupKey1 AGGREGATE COUNT(DISTINCT arg1) AS agg"
    valid_types: *selfComparisonValidTypes

  # Note: Non-distinct FIRST has no type constraints
  - description: Distinct FIRST argument must be self-comparable
    query: "SELECT * FROM foo GROUP BY NULL AS _groupKey1 AGGREGATE FIRST(DISTINCT arg1) AS agg"
    valid_types: *selfComparisonValidTypes

  # Note: Non-distinct LAST has no type constraints
  - description: Distinct LAST argument must be self-comparable
    query: "SELECT * FROM foo GROUP BY NULL AS _groupKey1 AGGREGATE LAST(DISTINCT arg1) AS agg"
    valid_types: *selfComparisonValidTypes

  # Note: Non-distinct MAX has no type constraints
  - description: Distinct MAX argument must be self-comparable
    query: "SELECT * FROM foo GROUP BY NULL AS _groupKey1 AGGREGATE MAX(DISTINCT arg1) AS agg"
    valid_types: *selfComparisonValidTypes

  - description: MERGE_DOCUMENTS argument must be document
    query: "SELECT * FROM foo GROUP BY NULL AS _groupKey1 AGGREGATE MERGE_DOCUMENTS(arg1) AS merge"
    skip_reason: "SQL-590: Support nullish document arguments"
    valid_types:
      - {"arg1": *document}

  - description: Distinct MERGE_DOCUMENTS argument must be document
    query: "SELECT * FROM foo GROUP BY NULL AS _groupKey1 AGGREGATE MERGE_DOCUMENTS(DISTINCT arg1) AS merge"
    skip_reason: "SQL-590: Support nullish document arguments"
    valid_types:
      - {"arg1": *document}

  # Note: Non-distinct MIN has no type constraints
  - description: Distinct MIN argument must be self-comparable
    query: "SELECT * FROM foo GROUP BY NULL AS _groupKey1 AGGREGATE MIN(DISTINCT arg1) AS agg"
    valid_types: *selfComparisonValidTypes

  - description: STDDEV_POP argument must be numeric
    query: "SELECT * FROM foo GROUP BY NULL AS _groupKey1 AGGREGATE STDDEV_POP(arg1) AS pop"
    valid_types:
      - {"arg1": *numerics}

  - description: Distinct STDDEV_POP argument must be numeric
    query: "SELECT * FROM foo GROUP BY NULL AS _groupKey1 AGGREGATE STDDEV_POP(DISTINCT arg1) AS pop"
    valid_types:
      - {"arg1": *numerics}

  - description: STDDEV_SAMP argument must be numeric
    query: "SELECT * FROM foo GROUP BY NULL AS _groupKey1 AGGREGATE STDDEV_SAMP(arg1) AS samp"
    valid_types:
      - {"arg1": *numerics}

  - description: Distinct STDDEV_SAMP argument must be numeric
    query: "SELECT * FROM foo GROUP BY NULL AS _groupKey1 AGGREGATE STDDEV_SAMP(DISTINCT arg1) AS samp"
    valid_types:
      - {"arg1": *numerics}

  - description: SUM argument must be numeric
    query: "SELECT * FROM foo GROUP BY NULL AS _groupKey1 AGGREGATE SUM(arg1) AS sum"
    valid_types:
      - {"arg1": *numerics}

  - description: DISTINCT SUM argument must be numeric
    query: "SELECT * FROM foo GROUP BY NULL AS _groupKey1 AGGREGATE SUM(DISTINCT arg1) AS sum"
    valid_types:
      - {"arg1": *numerics}

  - description: HAVING argument must be bool
    query: "SELECT * FROM foo HAVING arg1"
    valid_types:
      - {"arg1": *bool}
