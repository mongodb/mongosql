catalog_data:
  foo:
    bar:
      - { _id: {"$numberInt": "1"}, v1: "abc"}
      - { _id: {"$numberInt": "2"}, v1: {"$numberInt": "2"}}
      - { _id: {"$numberInt": "3"}, v1: null}

catalog_schema:
  {
    'foo': {
      'bar': {
        'bsonType': 'object',
        'additionalProperties': true,
      }
    }
  }

tests:
  - description: schema-less type assertion on ORDER BY clause
    current_db: "foo"
    query: "SELECT * FROM bar ORDER BY v1::!INT"
    skip_reason: "SQL-620 type assertion of identifier not treated as identifier"
    translation_target_db: foo
    translation_target_coll: bar
    translation:
      - { '$project': { '_id': 0, 'bar': '$$ROOT' } }
      - { '$project': { '_id': 0, 'bar': '$bar' } }
      - { '$sort': {'$bar.v1': 1}}
    ordered: true
    result:
      - { 'bar': { _id: {"$numberInt": "3"}, v1: null } }
      - { 'bar': { _id: {"$numberInt": "2"}, v1: { "$numberInt": "2" } } }
      - { 'bar': { _id: {"$numberInt": "1"}, v1: "abc" } }

  - description: schema-less type assertion in SELECT properly propagates schema to later stages
    current_db: "foo"
    query: "SELECT v1::!INT FROM bar ORDER BY v1"
    skip_reason: "SQL-620 type assertion of identifier not treated as identifier"
    translation_target_db: foo
    translation_target_coll: bar
    translation:
      - {'$project': {'_id': 0, 'bar': '$$ROOT'}}
      - {'$project': {'_id': 0, 'bar': '$bar'}}
      - {'$project': {'_id': 0, '__bot': {'v1': '$bar.v1'}}}
      - {'$sort': {'__bot.v1': 1}}
      - { '$replaceWith': { '$unsetField': { 'field': '__bot', 'input':
        { '$setField': { 'field': '' , 'input': '$$ROOT', 'value': '$__bot' }
        }}}}
    ordered: true
    result:
      - { '': { v1: null } }
      - { '': { v1: { "$numberInt": "2" } } }
      - { '': { v1: "abc" } }