tests:
  - name: "nothing to desugar"
    input:
      - { "$project": { "_id": 0, "foo": "$$ROOT" } }
    expected:
      - { "$project": { "_id": 0, "foo": "$$ROOT" } }

  - name: "desugar $sqlBetween"
    input:
      - { "$project": { "_id": 0, "expr": { "$sqlBetween": ["$x", 1, 10] } } }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$let":
                  {
                    "vars": { "desugared_sqlBetween_input": "$x" },
                    "in":
                      {
                        "$sqlAnd":
                          [
                            {
                              "$sqlGte": ["$$desugared_sqlBetween_input", 1],
                            },
                            {
                              "$sqlLte": ["$$desugared_sqlBetween_input", 10],
                            },
                          ],
                      },
                  },
              },
          },
      }

  - name: "desugar $mqlBetween"
    input:
      - { "$project": { "_id": 0, "expr": { "$mqlBetween": ["$x", 1, 10] } } }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$let":
                  {
                    "vars": { "desugared_mqlBetween_input": "$x" },
                    "in":
                      {
                        "$and":
                          [
                            {
                              "$gte": ["$$desugared_mqlBetween_input", 1],
                            },
                            {
                              "$lte": ["$$desugared_mqlBetween_input", 10],
                            },
                          ],
                      },
                  },
              },
          },
      }

  - name: "desugar nested $sqlBetween"
    input:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$sqlBetween":
                  [
                    "$x",
                    1,
                    {
                      "$cond": [{ "$sqlBetween": ["$y", 50, 100] }, 100, 10],
                    },
                  ],
              },
          },
      }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$let":
                  {
                    "vars": { "desugared_sqlBetween_input": "$x" },
                    "in":
                      {
                        "$sqlAnd":
                          [
                            {
                              "$sqlGte": ["$$desugared_sqlBetween_input", 1],
                            },
                            {
                              "$sqlLte":
                                [
                                  "$$desugared_sqlBetween_input",
                                  {
                                    "$cond":
                                      [
                                        {
                                          "$let":
                                            {
                                              "vars":
                                                {
                                                  "desugared_sqlBetween_input": "$y",
                                                },
                                              "in":
                                                {
                                                  "$sqlAnd":
                                                    [
                                                      {
                                                        "$sqlGte":
                                                          [
                                                            "$$desugared_sqlBetween_input",
                                                            50,
                                                          ],
                                                      },
                                                      {
                                                        "$sqlLte":
                                                          [
                                                            "$$desugared_sqlBetween_input",
                                                            100,
                                                          ],
                                                      },
                                                    ],
                                                },
                                            },
                                        },
                                        100,
                                        10,
                                      ],
                                  },
                                ],
                            },
                          ],
                      },
                  },
              },
          },
      }

  - name: "desugar $sqlConvert"
    input:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$sqlConvert":
                  {
                    "input": "$a",
                    "to": "array",
                    "onNull": null,
                    "onError": [],
                  },
              },
          },
      }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$let":
                  {
                    "vars": { "sqlConvert_input": "$a" },
                    "in":
                      {
                        "$switch":
                          {
                            "branches":
                              [
                                {
                                  "case":
                                    {
                                      "$eq":
                                        [
                                          { "$type": "$$sqlConvert_input" },
                                          "array",
                                        ],
                                    },
                                  "then": "$$sqlConvert_input",
                                },
                                {
                                  "case":
                                    { "$lte": ["$$sqlConvert_input", null] },
                                  "then": null,
                                },
                              ],
                            "default": [],
                          },
                      },
                  },
              },
          },
      }

  - name: "desugar $sqlDivide"
    input:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$sqlDivide":
                  { "dividend": "$a", "divisor": "$b", "onError": null },
              },
          },
      }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$cond":
                  [{ "$eq": ["$b", 0] }, null, { "$divide": ["$a", "$b"] }],
              },
          },
      }

  - name: "desugar $sqlDivide non-null onError"
    input:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$sqlDivide":
                  { "dividend": "$a", "divisor": "$b", "onError": "err" },
              },
          },
      }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$cond":
                  [{ "$eq": ["$b", 0] }, "err", { "$divide": ["$a", "$b"] }],
              },
          },
      }

  - name: "desugar $sqlSlice with no start argument"
    input:
      - { "$project": { "_id": 0, "expr": { "$sqlSlice": ["$arr", "$len"] } } }
    expected:
      - { "$project": { "_id": 0, "expr": { "$slice": ["$arr", "$len"] } } }

  - name: "desugar $sqlSlice with start argument"
    input:
      - {
        "$project":
          { "_id": 0, "expr": { "$sqlSlice": ["$arr", "$start", "$len"] } },
      }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$cond":
                  [
                    { "$lte": ["$len", 0] },
                    null,
                    { "$slice": ["$arr", "$start", "$len"] },
                  ],
              },
          },
      }

  - name: "desugar $coalesce"
    input:
      - {
        "$project": { "_id": 0, "expr": { "$coalesce": ["$a", "$b", "$c"] } },
      }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$switch":
                  {
                    "branches":
                      [
                        { "case": { "$gt": ["$a", null] }, "then": "$a" },
                        { "case": { "$gt": ["$b", null] }, "then": "$b" },
                        { "case": { "$gt": ["$c", null] }, "then": "$c" },
                      ],
                    "default": null,
                  },
              },
          },
      }

  - name: "desugar $like with no escape"
    input:
      - {
        "$project":
          {
            "_id": 0,
            "expr": { "$like": { "input": "$s", "pattern": "abc" } },
          },
      }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$regexMatch":
                  { "input": "$s", "regex": "^abc$", "options": "is" },
              },
          },
      }

  - name: "desugar $like with escape"
    input:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$like":
                  {
                    "input": "$s",
                    "pattern": "a\\__\\_%\\%",
                    "escape": "\\",
                  },
              },
          },
      }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$regexMatch":
                  { "input": "$s", "regex": "^a_._.*%$", "options": "is" },
              },
          },
      }

  - name: "desugar $nullIf"
    input:
      - { "$project": { "_id": 0, "expr": { "$nullIf": ["$a", "$b"] } } }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$let":
                  {
                    "vars": { "expr1": { "$ifNull": ["$a", null] } },
                    "in":
                      {
                        "$cond":
                          [{ "$eq": ["$$expr1", "$b"] }, null, "$$expr1"],
                      },
                  },
              },
          },
      }

  - name: "desugar $sqlLog"
    input:
      - {
        "$project": { "_id": 0, "expr": { "$sqlLog": ["$number", "$base"] } },
      }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$cond":
                  [
                    {
                      "$or":
                        [
                          {
                            "$eq":
                              [
                                "$number",
                                { "$literal": { "$numberDouble": "NaN" } },
                              ],
                          },
                          {
                            "$eq":
                              [
                                "$base",
                                { "$literal": { "$numberDouble": "NaN" } },
                              ],
                          },
                        ],
                    },
                  { "$literal": { "$numberDouble": "NaN" } },
                  {
                    "$cond":
                      [
                        {
                          "$or":
                            [
                              {
                                "$lte":
                                  [
                                    "$number",
                                    { "$literal": 0},
                                  ],
                              },
                              {
                                "$eq":
                                  [
                                    "$base",
                                    { "$literal": 1 },
                                  ],
                              },
                              {
                                "$lte":
                                  [
                                    "$base",
                                    { "$literal": 0 },
                                  ],
                              },
                            ],
                        },
                        { "$literal": null },
                        { "$log": ["$number", "$base"] },
                      ],
                    },
                  ],
              },
          },
      }

  - name: "desugar $sqlRound"
    input:
      - {
        "$project":
          { "_id": 0, "expr": { "$sqlRound": ["$number", "$place"] } },
      }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$let":
                  {
                    "vars":
                      {
                        "desugared_sqlRound_input0": "$number",
                        "desugared_sqlRound_input1": "$place",
                      },
                    "in":
                      {
                        "$cond":
                          [
                            {
                              "$eq":
                                [
                                  "$$desugared_sqlRound_input1",
                                  {
                                    "$literal": { "$numberDouble": "NaN" },
                                  },
                                ],
                            },
                            { "$literal": { "$numberDouble": "NaN" } },
                            {
                              "$cond":
                                [
                                  {
                                    "$and":
                                      [
                                        {
                                          "$gte":
                                            [
                                              "$$desugared_sqlRound_input1",
                                              { "$literal": -20 },
                                            ],
                                        },
                                        {
                                          "$lte":
                                            [
                                              "$$desugared_sqlRound_input1",
                                              { "$literal": 100 },
                                            ],
                                        },
                                      ],
                                  },
                                  {
                                    "$round":
                                      [
                                        "$$desugared_sqlRound_input0",
                                        "$$desugared_sqlRound_input1",
                                      ],
                                  },
                                  { "$literal": null },
                                ],
                            },
                          ],
                      },
                  },
              },
          },
      }

  - name: "desugar $sqlSplit"
    input:
      - {
        "$project": { "_id": 0, "expr": { "$sqlSplit": ["$a", "$b", "$c"] } },
      }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$let":
                  {
                    "vars":
                      {
                        "desugared_sqlSplit_input0": "$a",
                        "desugared_sqlSplit_input1": "$b",
                        "desugared_sqlSplit_input2": "$c",
                      },
                    "in":
                      {
                        "$cond":
                          [
                            { "$eq": ["$$desugared_sqlSplit_input1", ""] },
                            { "$literal": null },
                            {
                                "$let":
                                  {
                                    "vars":
                                      {
                                        "desugared_sqlSplit_split_expr":
                                          {
                                            "$split":
                                              [
                                                "$$desugared_sqlSplit_input0",
                                                "$$desugared_sqlSplit_input1",
                                              ],
                                          },
                                      },
                                    "in":
                                      {
                                        "$cond":
                                          [
                                            {
                                              "$lte":
                                                [
                                                  "$$desugared_sqlSplit_split_expr",
                                                  { "$literal": null },
                                                ],
                                            },
                                            { "$literal": null },
                                            {
                                                "$let":
                                                  {
                                                    "vars":
                                                      {
                                                        "desugared_sqlSplit_slice_expr":
                                                          {
                                                            "$slice":
                                                              [
                                                                "$$desugared_sqlSplit_split_expr",
                                                                {
                                                                  "$cond":
                                                                    [
                                                                        {
                                                                          "$gt":
                                                                            [
                                                                              {
                                                                                "$abs":
                                                                                  [
                                                                                    "$$desugared_sqlSplit_input2",
                                                                                  ],
                                                                              },
                                                                              {
                                                                                "$size": "$$desugared_sqlSplit_split_expr",
                                                                              },
                                                                            ],
                                                                        },
                                                                        {
                                                                          "$abs":
                                                                            [
                                                                              "$$desugared_sqlSplit_input2",
                                                                            ],
                                                                        },
                                                                      "$$desugared_sqlSplit_input2",
                                                                    ],
                                                                },
                                                                1,
                                                              ],
                                                          },
                                                      },
                                                    "in":
                                                      {
                                                        "$arrayElemAt":
                                                          [
                                                            {
                                                              "$cond":
                                                                [
                                                                  {
                                                                    "$eq":
                                                                      [
                                                                        "$$desugared_sqlSplit_slice_expr",
                                                                        [],
                                                                      ],
                                                                  },
                                                                  [""],
                                                                  "$$desugared_sqlSplit_slice_expr",
                                                                ],
                                                            },
                                                            0,
                                                          ],
                                                      },
                                                  },
                                              },
                                          ],
                                      },
                                  },
                              },
                          ],
                      },
                  },
              },
          },
      }

  - name: "desugar $sqlCos"
    input:
      - { "$project": { "_id": 0, "expr": { "$sqlCos": ["$v"] } } }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$cond":
                  [
                    "$or": [
                      {
                        "$eq":
                          [
                            "$v",
                            {
                              "$literal":
                                { "$numberDouble": "Infinity" },
                            },
                          ],
                      },
                      {
                        "$eq":
                          [
                            "$v",
                            {
                              "$literal":
                                { "$numberDouble": "-Infinity" },
                            },
                          ],
                      },
                    ],
                    { "$literal": null },
                    { "$cos": "$v" },
                  ],
              },
          },
      }

  - name: "desugar $sqlSin"
    input:
      - { "$project": { "_id": 0, "expr": { "$sqlSin": ["$v"] } } }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$cond": [
                  "$or":
                    [
                      {
                        "$eq":
                          [
                            "$v",
                            {
                              "$literal":
                                { "$numberDouble": "Infinity" },
                            },
                          ],
                      },
                      {
                        "$eq":
                          [
                            "$v",
                            {
                              "$literal":
                                { "$numberDouble": "-Infinity" },
                            },
                          ],
                      },
                    ],
                    { "$literal": null },
                    { "$sin": "$v" },
                  ],
              },
          },
      }

  - name: "desugar $sqlTan"
    input:
      - { "$project": { "_id": 0, "expr": { "$sqlTan": ["$v"] } } }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$cond": [
                  "$or":
                    [
                      {
                        "$eq":
                          [
                            "$v",
                            {
                              "$literal":
                                { "$numberDouble": "Infinity" },
                            },
                          ],
                      },
                      {
                        "$eq":
                          [
                            "$v",
                            {
                              "$literal":
                                { "$numberDouble": "-Infinity" },
                            },
                          ],
                      },
                    ],
                    { "$literal": null },
                    { "$tan": "$v" },
                ],
              },
          },
      }

  - name: "desugar $sqlSqrt"
    input:
      - { "$project": { "_id": 0, "expr": { "$sqlSqrt": ["$v"] } } }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$let":
                  {
                    "vars": { "desugared_sqlSqrt_input": "$v" },
                    "in":
                      {
                        "$cond":
                          [
                            {
                              "$eq":
                                [
                                  "$$desugared_sqlSqrt_input",
                                  {
                                    "$literal": { "$numberDouble": "NaN" },
                                  },
                                ],
                            },
                            { "$literal": { "$numberDouble": "NaN" } },
                            {
                              "$cond":
                                [
                                  {
                                    "$lt":
                                      [
                                        "$$desugared_sqlSqrt_input",
                                        { "$literal": 0 },
                                      ],
                                  },
                                  { "$literal": null },
                                  { "$sqrt": "$$desugared_sqlSqrt_input", },
                                ],
                            },
                          ],
                      },
                  },
              },
          },
      }

  - name: "desugar $sqlMod"
    input:
      - {
        "$project":
          { "_id": 0, "expr": { "$sqlMod": ["$number", "$divisor"] } },
      }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$let":
                  {
                    "vars":
                      {
                        "desugared_sqlMod_input0": "$number",
                        "desugared_sqlMod_input1": "$divisor",
                      },
                    "in":
                      {
                        "$cond":
                          [
                            "$eq":
                              [
                                "$$desugared_sqlMod_input1",
                                { "$literal": 0 },
                              ],
                            "$literal": null ,
                            "$mod":
                              [
                                "$$desugared_sqlMod_input0",
                                "$$desugared_sqlMod_input1",
                              ],
                          ],
                      },
                  },
              },
          },
      }
  
  - name: "desugar $sqlPos"
    input:
      - {
        "$project":
          { "_id": 0, "expr": { "$sqlPos": ["$number"] } },
      }
    expected:
      - {
        "$project":
          { "_id": 0, "expr": "$number" }
      }
  
  - name: "desugar $sqlNeg"
    input:
      - {
        "$project":
          { "_id": 0, "expr": { "$sqlNeg": ["$number"] } },
      }
    expected:
      - {
        "$project":
          { "_id": 0, "expr":
            {
              "$multiply":
                [
                  "$number",
                  { "$literal": -1 }
                ]
            }
          }
      }
  
  - name: "desugar $sqlBitLength"
    input:
      - {
        "$project":
          { "_id": 0, "expr": { "$sqlBitLength": ["$number"] } },
      }
    expected:
      - {
        "$project":
          { "_id": 0, "expr":
            {
              "$multiply":
                [
                  { "$sqlStrLenBytes": ["$number"] },
                  { "$literal": 8 }
                ]
            }
          }
      }
  
  - name: "desugar $sqlIs with null type"
    input:
      - {
        "$project":
          { "_id": 0, "expr": { "$sqlIs": ["$target", {"$literal": "null"}] } },
      }
    expected:
      - {
        "$project":
          { "_id": 0, "expr":
            {
              "$or":
                [
                  { "$eq": [ { "$type": "$target" }, "null" ] },
                  { "$eq": [ { "$type": "$target" }, "missing" ] }
                ]
            }
          }
      }
  
  - name: "desugar $sqlIs with missing type"
    input:
      - {
        "$project":
          { "_id": 0, "expr": { "$sqlIs": ["$target", {"$literal": "missing"}] } },
      }
    expected:
      - {
        "$project":
          { "_id": 0, "expr":  { "$eq": [ { "$type": "$target" }, "missing" ] } }
      }
  
  - name: "desugar $sqlIs with number type"
    input:
      - {
        "$project":
          { "_id": 0, "expr": { "$sqlIs": ["$target", {"$literal": "number"}] } },
      }
    expected:
      - {
        "$project":
          { "_id": 0, "expr": { "$isNumber": "$target" } }
      }
  
  - name: "desugar $sqlIs with array type"
    input:
      - {
        "$project":
          { "_id": 0, "expr": { "$sqlIs": ["$target", {"$literal": "array"}] } },
      }
    expected:
      - {
        "$project":
          { "_id": 0, "expr": { "$isArray": "$target" } }
      }
  
  - name: "desugar $sqlIs with string type"
    input:
      - {
        "$project":
          { "_id": 0, "expr": { "$sqlIs": ["$target", {"$literal": "string"}] } },
      }
    expected:
      - {
        "$project":
          { "_id": 0, "expr": { "$eq": [ { "$type": "$target" }, "string" ] } }
      }
