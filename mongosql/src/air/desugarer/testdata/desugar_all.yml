tests:
  - name: "remove _id"
    input:
      - { "$project": { "foo": "$$ROOT" } }
    expected:
      - { "$project": { "_id": 0, "foo": "$$ROOT" } }

  - name: "join nested in subquery pipeline"
    input:
      - {
        "$project":
          {
            "expr":
              {
                "$subquery":
                  {
                    "collection": "bar",
                    "outputPath": ["x"],
                    "pipeline":
                      [
                        {
                          "$join":
                            {
                              "collection": "baz",
                              "joinType": "inner",
                              "pipeline": [],
                            },
                        },
                      ],
                  },
              },
          },
      }
    expected:
      - {
        "$lookup":
          {
            "from": "bar",
            "pipeline":
              [
                {
                  "$lookup":
                    {
                      "from": "baz",
                      "pipeline": [],
                      "as": "eca58228-b657-498a-b76e-f48a9161a404",
                    },
                },
                {
                  "$unwind":
                    {
                      "path": "$eca58228-b657-498a-b76e-f48a9161a404",
                      "preserveNullAndEmptyArrays": false,
                    },
                },
                {
                  "$replaceWith":
                    {
                      "$mergeObjects":
                        ["$$ROOT", "$eca58228-b657-498a-b76e-f48a9161a404"],
                    },
                },
                {
                  "$project":
                    {
                      "_id": 0,
                      "eca58228-b657-498a-b76e-f48a9161a404": 0
                    },
                },
              ],
            "as": "__subquery_result_0",
          },
      }
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$let":
                  {
                    "vars":
                      {
                        "docExpr":
                          { "$arrayElemAt": ["$__subquery_result_0", 0] },
                      },
                    "in": "$$docExpr.x",
                  },
              },
          },
      }
      - { "$project": { "_id": 0, "__subquery_result_0": 0 } }

  - name: "inner join with variable reference in $sql null semantic operator"
    input:
      - {
        "$join":
          {
            "collection": "coll",
            "joinType": "inner",
            "let": { "bar_0": "$bar" },
            "pipeline":
              [
                { "$project": { "coll": "$$ROOT" } },
                { "$project": { "coll": "$coll" } },
              ],
            "condition": { "$sqlEq": ["$$bar_0.foo", "$coll.car"] },
          },
      }
    expected:
      - {
        "$lookup":
          {
            "from": "coll",
            "let": { "bar_0": "$bar" },
            "pipeline":
              [
                { "$project": { "_id": 0, "coll": "$$ROOT" } },
                { "$project": { "_id": 0, "coll": "$coll" } },
                {
                  "$match":
                    { "$expr":
                        {
                          "$let":
                            {
                              "vars":
                                {
                                  "desugared_sqlEq_input0": "$$bar_0.foo",
                                  "desugared_sqlEq_input1": "$coll.car",
                                },
                              "in":
                                {
                                  "$cond":
                                    [
                                      "$or":
                                        [
                                          {
                                            "$lte":
                                              [
                                                "$$desugared_sqlEq_input0",
                                                { "$literal": null },
                                              ],
                                          },
                                          {
                                            "$lte":
                                              [
                                                "$$desugared_sqlEq_input1",
                                                { "$literal": null },
                                              ],
                                          },
                                        ],

                                      { "$literal": null },

                                      "$eq":
                                        [
                                          "$$desugared_sqlEq_input0",
                                          "$$desugared_sqlEq_input1",
                                        ],
                                    ],
                                },
                            },
                        },
                    }
                },
              ],
            "as": "eca58228-b657-498a-b76e-f48a9161a404",
          },
      }
      - { "$unwind": "$eca58228-b657-498a-b76e-f48a9161a404" }
      - {
        "$replaceWith":
          {
            "$mergeObjects":
              ["$$ROOT", "$eca58228-b657-498a-b76e-f48a9161a404"],
          },
      }
      - { "$project": { "_id": 0, "eca58228-b657-498a-b76e-f48a9161a404": 0 } }

  - name: "multiple levels of new expressions that contain pipelines: join nested in subquery nested in join nested in subquery"
    input:
      - {
        "$project":
          {
            "expr":
              {
                "$subquery":
                  {
                    "collection": "bar",
                    "outputPath": ["x"],
                    "pipeline":
                      [
                        {
                          "$join":
                            {
                              "collection": "baz",
                              "joinType": "inner",
                              "pipeline":
                                [
                                  {
                                    "$project":
                                      {
                                        "expr":
                                          {
                                            "$subquery":
                                              {
                                                "collection": "car",
                                                "outputPath": ["y"],
                                                "pipeline":
                                                  [
                                                    {
                                                      "$join":
                                                        {
                                                          "collection": "caz",
                                                          "joinType": "inner",
                                                          "pipeline": [],
                                                        },
                                                    },
                                                  ],
                                              },
                                          },
                                      },
                                  },
                                ],
                            },
                        },
                      ],
                  },
              },
          },
      }
    expected:
      - {
        "$lookup":
          {
            "from": "bar",
            "pipeline":
              [
                {
                  "$lookup":
                    {
                      "from": "baz",
                      "pipeline":
                        [
                          {
                            "$lookup":
                              {
                                "from": "car",
                                "pipeline":
                                  [
                                    {
                                      "$lookup":
                                        {
                                          "from": "caz",
                                          "pipeline": [],
                                          "as": "eca58228-b657-498a-b76e-f48a9161a404",
                                        },
                                    },
                                    {
                                      "$unwind":
                                        {
                                          "path": "$eca58228-b657-498a-b76e-f48a9161a404",
                                          "preserveNullAndEmptyArrays": false,
                                        },
                                    },
                                    {
                                      "$replaceWith":
                                        {
                                          "$mergeObjects":
                                            [
                                              "$$ROOT",
                                              "$eca58228-b657-498a-b76e-f48a9161a404",
                                            ],
                                        },
                                    },
                                    {
                                      "$project": {
                                        "_id": 0,
                                        "eca58228-b657-498a-b76e-f48a9161a404": 0,
                                      },
                                    },
                                  ],
                                "as": "__subquery_result_0",
                              },
                          },
                          {
                            "$project":
                              {
                                "_id": 0,
                                "expr":
                                  {
                                    "$let":
                                      {
                                        "vars":
                                          {
                                            "docExpr":
                                              {
                                                "$arrayElemAt":
                                                  ["$__subquery_result_0", 0],
                                              },
                                          },
                                        "in": "$$docExpr.y",
                                      },
                                  },
                              },
                          },
                          {
                            "$project":
                              { "_id": 0, "__subquery_result_0": 0 },
                          },
                        ],
                      "as": "eca58228-b657-498a-b76e-f48a9161a404",
                    },
                },
                {
                  "$unwind":
                    {
                      "path": "$eca58228-b657-498a-b76e-f48a9161a404",
                      "preserveNullAndEmptyArrays": false,
                    },
                },
                {
                  "$replaceWith":
                    {
                      "$mergeObjects":
                        ["$$ROOT", "$eca58228-b657-498a-b76e-f48a9161a404"],
                    },
                },
                {
                  "$project":
                    { "_id": 0, "eca58228-b657-498a-b76e-f48a9161a404": 0 },
                },
              ],
            "as": "__subquery_result_0",
          },
      }
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$let":
                  {
                    "vars":
                      {
                        "docExpr":
                          { "$arrayElemAt": ["$__subquery_result_0", 0] },
                      },
                    "in": "$$docExpr.x",
                  },
              },
          },
      }
      - { "$project": { "_id": 0, "__subquery_result_0": 0 } }

  - name: "group nested in join pipeline"
    input:
      - {
        "$join":
          {
            "collection": "bar",
            "joinType": "inner",
            "pipeline":
              [
                {
                  "$group":
                    {
                      "_id": null,
                      "acc": { "$sqlAvg": { "var": "$a", "distinct": true } },
                    },
                },
              ],
          },
      }
    expected:
      - {
        "$lookup":
          {
            "from": "bar",
            "pipeline":
              [
                { "$group": { "_id": null, "acc": { "$addToSet": "$a" } } },
                { "$project": { "_id": 1, "acc": { "$avg": "$acc" } } },
              ],
            "as": "eca58228-b657-498a-b76e-f48a9161a404",
          },
      }
      - {
        "$unwind":
          {
            "path": "$eca58228-b657-498a-b76e-f48a9161a404",
            "preserveNullAndEmptyArrays": false,
          },
      }
      - {
        "$replaceWith":
          {
            "$mergeObjects":
              ["$$ROOT", "$eca58228-b657-498a-b76e-f48a9161a404"],
          },
      }
      - { "$project": { "_id": 0, "eca58228-b657-498a-b76e-f48a9161a404": 0 } }

  - name: "group nested in subquery pipeline"
    input:
      - {
        "$project":
          {
            "expr":
              {
                "$subquery":
                  {
                    "collection": "bar",
                    "outputPath": ["acc"],
                    "pipeline":
                      [
                        {
                          "$group":
                            {
                              "_id": null,
                              "acc":
                                {
                                  "$sqlAvg":
                                    { "var": "$a", "distinct": true },
                                },
                            },
                        },
                      ],
                  },
              },
          },
      }
    expected:
      - {
        "$lookup":
          {
            "from": "bar",
            "pipeline":
              [
                { "$group": { "_id": null, "acc": { "$addToSet": "$a" } } },
                { "$project": { "_id": 1,"acc": { "$avg": "$acc" } } },
              ],
            "as": "__subquery_result_0",
          },
      }
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$let":
                  {
                    "vars":
                      {
                        "docExpr":
                          { "$arrayElemAt": ["$__subquery_result_0", 0] },
                      },
                    "in": "$$docExpr.acc",
                  },
              },
          },
      }
      - { "$project": { "_id": 0, "__subquery_result_0": 0 } }

  - name: "subquery nested in join pipeline"
    input:
      - {
        "$join":
          {
            "collection": "bar",
            "joinType": "inner",
            "pipeline":
              [
                {
                  "$project":
                    {
                      "expr":
                        {
                          "$subquery":
                            {
                              "collection": "baz",
                              "outputPath": ["x"],
                              "pipeline": [],
                            },
                        },
                    },
                },
              ],
          },
      }
    expected:
      - {
        "$lookup":
          {
            "from": "bar",
            "pipeline":
              [
                {
                  "$lookup":
                    {
                      "from": "baz",
                      "pipeline": [],
                      "as": "__subquery_result_0",
                    },
                },
                {
                  "$project":
                    {
                      "_id": 0,
                      "expr":
                        {
                          "$let":
                            {
                              "vars":
                                {
                                  "docExpr":
                                    {
                                      "$arrayElemAt":
                                        ["$__subquery_result_0", 0],
                                    },
                                },
                              "in": "$$docExpr.x",
                            },
                        },
                    },
                },
                { "$project": { "_id": 0, "__subquery_result_0": 0 } },
              ],
            "as": "eca58228-b657-498a-b76e-f48a9161a404",
          },
      }
      - {
        "$unwind":
          {
            "path": "$eca58228-b657-498a-b76e-f48a9161a404",
            "preserveNullAndEmptyArrays": false,
          },
      }
      - {
        "$replaceWith":
          {
            "$mergeObjects":
              ["$$ROOT", "$eca58228-b657-498a-b76e-f48a9161a404"],
          },
      }
      - { "$project": { "_id": 0, "eca58228-b657-498a-b76e-f48a9161a404": 0 } }

  - name: "subquery nested in join match condition"
    input:
      - {
        "$join":
          {
            "collection": "bar",
            "joinType": "inner",
            "pipeline": [],
            "condition":
              {
                "$subquery":
                  {
                    "collection": "baz",
                    "outputPath": ["x"],
                    "pipeline": [],
                  },
              },
          },
      }
    expected:
      - {
        "$lookup":
          {
            "from": "bar",
            "pipeline":
              [
                {
                  "$lookup":
                    {
                      "from": "baz",
                      "pipeline": [],
                      "as": "__subquery_result_0",
                    },
                },
                {
                  "$match":
                    {
                      "$expr":
                        {
                          "$let":
                            {
                              "vars":
                                {
                                  "docExpr":
                                    {
                                      "$arrayElemAt":
                                        ["$__subquery_result_0", 0],
                                    },
                                },
                              "in": "$$docExpr.x",
                            },
                        },
                    },
                },
                { "$project": {"_id": 0, "__subquery_result_0": 0 } },
              ],
            "as": "eca58228-b657-498a-b76e-f48a9161a404",
          },
      }
      - {
        "$unwind":
          {
            "path": "$eca58228-b657-498a-b76e-f48a9161a404",
            "preserveNullAndEmptyArrays": false,
          },
      }
      - {
        "$replaceWith":
          {
            "$mergeObjects":
              ["$$ROOT", "$eca58228-b657-498a-b76e-f48a9161a404"],
          },
      }
      - { "$project": { "_id": 0, "eca58228-b657-498a-b76e-f48a9161a404": 0 } }

  - name: "subquery nested in join let"
    input:
      - {
        "$join":
          {
            "collection": "bar",
            "joinType": "inner",
            "let":
              {
                "x":
                  {
                    "$subquery":
                      {
                        "collection": "baz",
                        "outputPath": ["x"],
                        "pipeline": [],
                      },
                  },
              },
            "pipeline": [],
          },
      }
    expected:
      - {
        "$lookup":
          {
            "from": "baz",
            "pipeline": [],
            "as": "__subquery_result_0",
          },
      }
      - {
        "$lookup":
          {
            "from": "bar",
            "let":
              {
                "x":
                  {
                    "$let":
                      {
                        "vars":
                          {
                            "docExpr":
                              { "$arrayElemAt": ["$__subquery_result_0", 0] },
                          },
                        "in": "$$docExpr.x",
                      },
                  },
              },
            "pipeline": [],
            "as": "eca58228-b657-498a-b76e-f48a9161a404",
          },
      }
      - { "$project": { "_id": 0, "__subquery_result_0": 0 } }
      - {
        "$unwind":
          {
            "path": "$eca58228-b657-498a-b76e-f48a9161a404",
            "preserveNullAndEmptyArrays": false,
          },
      }
      - {
        "$replaceWith":
          {
            "$mergeObjects":
              ["$$ROOT", "$eca58228-b657-498a-b76e-f48a9161a404"],
          },
      }
      - { "$project": {"_id": 0, "eca58228-b657-498a-b76e-f48a9161a404": 0 } }

  - name: "subquery nested in group accumulator as arg"
    input:
      - {
        "$group":
          {
            "_id": null,
            "acc":
              {
                "$sqlAvg":
                  {
                    "var":
                      {
                        "$subquery":
                          {
                            "collection": "bar",
                            "outputPath": ["x"],
                            "pipeline": [],
                          },
                      },
                    "distinct": true,
                  },
              },
          },
      }
    expected:
      - {
        "$lookup":
          {
            "from": "bar",
            "pipeline": [],
            "as": "__subquery_result_0",
          },
      }
      - {
        "$group":
          {
            "_id": null,
            "acc":
              {
                "$addToSet":
                  {
                    "$let":
                      {
                        "vars":
                          {
                            "docExpr":
                              { "$arrayElemAt": ["$__subquery_result_0", 0] },
                          },
                        "in": "$$docExpr.x",
                      },
                  },
              },
          },
      }
      - { "$project": { "_id": 0, "__subquery_result_0": 0 } }
      - { "$project": {"_id": 1, "acc": { "$avg": "$acc" } } }

  - name: "subquery nested in unsupported op as arg"
    input:
      - {
        "$project":
          {
            "expr":
              {
                "$sqlDivide":
                  {
                    "dividend":
                      {
                        "$subquery":
                          {
                            "collection": "bar",
                            "outputPath": ["x"],
                            "pipeline": [],
                          },
                      },
                    "divisor": "$b",
                    "onError": null,
                  },
              },
          },
      }
    expected:
      - {
        "$lookup":
          {
            "from": "bar",
            "pipeline": [],
            "as": "__subquery_result_0",
          },
      }
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$cond":
                  [
                    { "$eq": ["$b", 0] },
                    null,
                    {
                      "$divide":
                        [
                          {
                            "$let":
                              {
                                "vars":
                                  {
                                    "docExpr":
                                      {
                                        "$arrayElemAt":
                                          ["$__subquery_result_0", 0],
                                      },
                                  },
                                "in": "$$docExpr.x",
                              },
                          },
                          "$b",
                        ],
                    },
                  ],
              },
          },
      }
      - { "$project": { "_id": 0 ,"__subquery_result_0": 0 } }

  - name: "subquery nested in null semantic op as arg"
    input:
      - {
        "$project":
          {
            "expr":
              {
                "$sqlNot":
                  [
                    {
                      "$subquery":
                        {
                          "collection": "bar",
                          "outputPath": ["x"],
                          "pipeline": [],
                        },
                    },
                  ],
              },
          },
      }
    expected:
      - {
        "$lookup":
          {
            "from": "bar",
            "pipeline": [],
            "as": "__subquery_result_0",
          },
      }
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$let":
                  {
                    "vars":
                      {
                        "desugared_sqlNot_input0":
                          {
                            "$let":
                              {
                                "vars":
                                  {
                                    "docExpr":
                                      {
                                        "$arrayElemAt":
                                          ["$__subquery_result_0", 0],
                                      },
                                  },
                                "in": "$$docExpr.x",
                              },
                          },
                      },
                    "in":
                      {
                        "$cond":
                          [
                            { "$lte": ["$$desugared_sqlNot_input0", null] },
                            null,
                            { "$not": ["$$desugared_sqlNot_input0"] },
                          ],
                      },
                  },
              },
          },
      }
      - { "$project": { "_id": 0, "__subquery_result_0": 0 } }

  - name: "unsupported ops nested in join"
    input:
      - {
        "$join":
          {
            "collection": "bar",
            "joinType": "inner",
            "let":
              {
                "x":
                  {
                    "$sqlConvert":
                      {
                        "input": "$x",
                        "to": "array",
                        "onNull": null,
                        "onError": [],
                      },
                  },
              },
            "pipeline":
              [
                {
                  "$project":
                    {
                      "a": "$a",
                      "expr": { "$sqlSlice": ["$$x", "$len"] },
                    },
                },
              ],
            "condition": { "$like": { "input": "$a", "pattern": "abc" } },
          },
      }
    expected:
      - {
        "$lookup":
          {
            "from": "bar",
            "let":
              {
                "x":
                  {
                    "$let":
                      {
                        "vars": { "sqlConvert_input": "$x" },
                        "in":
                          {
                            "$switch":
                              {
                                "branches":
                                  [
                                    {
                                      "case":
                                        {
                                          "$eq":
                                            [
                                              {
                                                "$type": "$$sqlConvert_input",
                                              },
                                              "array",
                                            ],
                                        },
                                      "then": "$$sqlConvert_input",
                                    },
                                    {
                                      "case":
                                        {
                                          "$lte":
                                            ["$$sqlConvert_input", null],
                                        },
                                      "then": null,
                                    },
                                  ],
                                "default": [],
                              },
                          },
                      },
                  },
              },
            "pipeline":
              [
                {
                  "$project":
                    {
                      "_id": 0,
                      "a": "$a",
                      "expr": { "$slice": ["$$x", "$len"] },
                    },
                },
                {
                  "$match":
                    {
                      "$expr":
                        {
                          "$regexMatch":
                            {
                              "input": "$a",
                              "regex": "^abc$",
                              "options": "si",
                            },
                        },
                    },
                },
              ],
            "as": "eca58228-b657-498a-b76e-f48a9161a404",
          },
      }
      - {
        "$unwind":
          {
            "path": "$eca58228-b657-498a-b76e-f48a9161a404",
            "preserveNullAndEmptyArrays": false,
          },
      }
      - {
        "$replaceWith":
          {
            "$mergeObjects":
              ["$$ROOT", "$eca58228-b657-498a-b76e-f48a9161a404"],
          },
      }
      - { "$project": { "_id": 0, "eca58228-b657-498a-b76e-f48a9161a404": 0 } }

  - name: "unsupported op nested in group accumulator as arg"
    input:
      - {
        "$group":
          {
            "_id": null,
            "acc":
              {
                "$sqlAvg":
                  {
                    "var":
                      {
                        "$sqlDivide":
                          {
                            "dividend": "$a",
                            "divisor": "$b",
                            "onError": null,
                          },
                      },
                    "distinct": true,
                  },
              },
          },
      }
    expected:
      - {
        "$group":
          {
            "_id": null,
            "acc":
              {
                "$addToSet":
                  {
                    "$cond":
                      [
                        { "$eq": ["$b", 0] },
                        null,
                        { "$divide": ["$a", "$b"] },
                      ],
                  },
              },
          },
      }
      - { "$project": { "_id": 1, "acc": { "$avg": "$acc" } } }

  - name: "unsupported ops nested in subquery"
    input:
      - {
        "$project":
          {
            "expr":
              {
                "$subquery":
                  {
                    "collection": "bar",
                    "let":
                      {
                        "arr":
                          {
                            "$sqlConvert":
                              {
                                "input": "$a",
                                "to": "array",
                                "onNull": null,
                                "onError": [],
                              },
                          },
                      },
                    "outputPath": ["v"],
                    "pipeline":
                      [
                        {
                          "$project":
                            {
                              "v": { "$sqlSlice": ["$$arr", "$len"] },
                            },
                        },
                      ],
                  },
              },
          },
      }
    expected:
      - {
        "$lookup":
          {
            "from": "bar",
            "let":
              {
                "arr":
                  {
                    "$let":
                      {
                        "vars": { "sqlConvert_input": "$a" },
                        "in":
                          {
                            "$switch":
                              {
                                "branches":
                                  [
                                    {
                                      "case":
                                        {
                                          "$eq":
                                            [
                                              {
                                                "$type": "$$sqlConvert_input",
                                              },
                                              "array",
                                            ],
                                        },
                                      "then": "$$sqlConvert_input",
                                    },
                                    {
                                      "case":
                                        {
                                          "$lte":
                                            ["$$sqlConvert_input", null],
                                        },
                                      "then": null,
                                    },
                                  ],
                                "default": [],
                              },
                          },
                      },
                  },
              },
            "pipeline":
              [
                {
                  "$project":
                    { "_id": 0, "v": { "$slice": ["$$arr", "$len"] } },
                },
              ],
            "as": "__subquery_result_0",
          },
      }
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$let":
                  {
                    "vars":
                      {
                        "docExpr":
                          { "$arrayElemAt": ["$__subquery_result_0", 0] },
                      },
                    "in": "$$docExpr.v",
                  },
              },
          },
      }
      - { "$project": { "_id": 0, "__subquery_result_0": 0 } }

  - name: "unsupported op nested in null semantic op as arg"
    input:
      - {
        "$project":
          {
            "expr": { "$sqlSize": { "$sqlSlice": ["$arr", "$len"] } },
          },
      }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$let":
                  {
                    "vars":
                      {
                        "desugared_sqlSize_input0":
                          { "$slice": ["$arr", "$len"] },
                      },
                    "in":
                      {
                        "$cond":
                          [
                            { "$lte": ["$$desugared_sqlSize_input0", null] },
                            null,
                            { "$size": "$$desugared_sqlSize_input0" },
                          ],
                      },
                  },
              },
          },
      }

  - name: "null semantic ops nested in join"
    input:
      - {
        "$join":
          {
            "collection": "bar",
            "joinType": "inner",
            "let": { "x": { "$sqlNot": ["$a"] } },
            "pipeline":
              [{ "$project": { "expr": { "$sqlNot": ["$$x"] } } }],
            "condition": { "$sqlNot": ["$expr"] },
          },
      }
    expected:
      - {
        "$lookup":
          {
            "from": "bar",
            "let":
              {
                "x":
                  {
                    "$let":
                      {
                        "vars": { "desugared_sqlNot_input0": "$a" },
                        "in":
                          {
                            "$cond":
                              [
                                {
                                  "$lte": ["$$desugared_sqlNot_input0", null],
                                },
                                null,
                                { "$not": ["$$desugared_sqlNot_input0"] },
                              ],
                          },
                      },
                  },
              },
            "pipeline":
              [
                {
                  "$project":
                    {
                      "_id": 0,
                      "expr":
                        {
                          "$let":
                            {
                              "vars": { "desugared_sqlNot_input0": "$$x" },
                              "in":
                                {
                                  "$cond":
                                    [
                                      {
                                        "$lte":
                                          ["$$desugared_sqlNot_input0", null],
                                      },
                                      null,
                                      {
                                        "$not": ["$$desugared_sqlNot_input0"],
                                      },
                                    ],
                                },
                            },
                        },
                    },
                },
                {
                  "$match":
                    { "$expr":
                        {
                          "$let":
                            {
                              "vars": { "desugared_sqlNot_input0": "$expr" },
                              "in":
                                {
                                  "$cond":
                                    [
                                      "$lte":
                                        [
                                          "$$desugared_sqlNot_input0",
                                          { "$literal": null },
                                        ],

                                      { "$literal": null },
                                      { "$not": [ "$$desugared_sqlNot_input0" ] },
                                    ],
                                },
                            },
                        }
                    }
                },
              ],
            "as": "eca58228-b657-498a-b76e-f48a9161a404",
          },
      }
      - {
        "$unwind":
          {
            "path": "$eca58228-b657-498a-b76e-f48a9161a404",
            "preserveNullAndEmptyArrays": false,
          },
      }
      - {
        "$replaceWith":
          {
            "$mergeObjects":
              ["$$ROOT", "$eca58228-b657-498a-b76e-f48a9161a404"],
          },
      }
      - { "$project": { "_id": 0, "eca58228-b657-498a-b76e-f48a9161a404": 0 } }

  - name: "null semantic op nested in group accumulator as arg"
    input:
      - {
        "$group":
          {
            "_id": null,
            "acc":
              {
                "$sqlAvg": { "var": { "$sqlSize": "$a" }, "distinct": true },
              },
          },
      }
    expected:
      - {
        "$group":
          {
            "_id": null,
            "acc":
              {
                "$addToSet":
                  {
                    "$let":
                      {
                        "vars": { "desugared_sqlSize_input0": "$a" },
                        "in":
                          {
                            "$cond":
                              [
                                {
                                  "$lte":
                                    ["$$desugared_sqlSize_input0", null],
                                },
                                null,
                                { "$size": "$$desugared_sqlSize_input0" },
                              ],
                          },
                      },
                  },
              },
          },
      }
      - { "$project": { "_id": 1, "acc": { "$avg": "$acc" } } }

  - name: "null semantic ops nested in subquery"
    input:
      - {
        "$project":
          {
            "expr":
              {
                "$subquery":
                  {
                    "collection": "bar",
                    "let": { "s": { "$sqlSize": "$a" } },
                    "outputPath": ["v"],
                    "pipeline":
                      [
                        {
                          "$project":
                            { "v": { "$sqlEq": ["$$s", "$s"] } },
                        },
                      ],
                  },
              },
          },
      }
    expected:
      - {
        "$lookup":
          {
            "from": "bar",
            "let":
              {
                "s":
                  {
                    "$let":
                      {
                        "vars": { "desugared_sqlSize_input0": "$a" },
                        "in":
                          {
                            "$cond":
                              [
                                {
                                  "$lte":
                                    ["$$desugared_sqlSize_input0", null],
                                },
                                null,
                                { "$size": "$$desugared_sqlSize_input0" },
                              ],
                          },
                      },
                  },
              },
            "pipeline":
              [
                {
                  "$project":
                    {
                      "_id": 0,
                      "v":
                        {
                          "$let":
                            {
                              "vars":
                                {
                                  "desugared_sqlEq_input0": "$$s",
                                  "desugared_sqlEq_input1": "$s",
                                },
                              "in":
                                {
                                  "$cond":
                                    [
                                      {
                                        "$or":
                                          [
                                            {
                                              "$lte":
                                                [
                                                  "$$desugared_sqlEq_input0",
                                                  null,
                                                ],
                                            },
                                            {
                                              "$lte":
                                                [
                                                  "$$desugared_sqlEq_input1",
                                                  null,
                                                ],
                                            },
                                          ],
                                      },
                                      null,
                                      {
                                        "$eq":
                                          [
                                            "$$desugared_sqlEq_input0",
                                            "$$desugared_sqlEq_input1",
                                          ],
                                      },
                                    ],
                                },
                            },
                        },
                    },
                },
              ],
            "as": "__subquery_result_0",
          },
      }
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$let":
                  {
                    "vars":
                      {
                        "docExpr":
                          { "$arrayElemAt": ["$__subquery_result_0", 0] },
                      },
                    "in": "$$docExpr.v",
                  },
              },
          },
      }
      - { "$project": { "_id": 0, "__subquery_result_0": 0 } }

  - name: "null semantic op nested in unsupported op as arg"
    input:
      - {
        "$project":
          {
            "expr":
              {
                "$sqlDivide":
                  {
                    "dividend": "$a",
                    "divisor": { "$sqlSize": "$b" },
                    "onError": null,
                  },
              },
          },
      }
    expected:
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$cond":
                  [
                    {
                      "$eq":
                        [
                          {
                            "$let":
                              {
                                "vars": { "desugared_sqlSize_input0": "$b" },
                                "in":
                                  {
                                    "$cond":
                                      [
                                        {
                                          "$lte":
                                            [
                                              "$$desugared_sqlSize_input0",
                                              null,
                                            ],
                                        },
                                        null,
                                        {
                                          "$size": "$$desugared_sqlSize_input0",
                                        },
                                      ],
                                  },
                              },
                          },
                          0,
                        ],
                    },
                    null,
                    {
                      "$divide":
                        [
                          "$a",
                          {
                            "$let":
                              {
                                "vars": { "desugared_sqlSize_input0": "$b" },
                                "in":
                                  {
                                    "$cond":
                                      [
                                        {
                                          "$lte":
                                            [
                                              "$$desugared_sqlSize_input0",
                                              null,
                                            ],
                                        },
                                        null,
                                        {
                                          "$size": "$$desugared_sqlSize_input0",
                                        },
                                      ],
                                  },
                              },
                          },
                        ],
                    },
                  ],
              },
          },
      }

  - name: "all present together in one pipeline"
    input:
      - {
        "$project":
          {
            "expr":
              {
                "$subquery":
                  {
                    "collection": "bar",
                    "outputPath": ["acc"],
                    "pipeline":
                      [
                        {
                          "$join":
                            {
                              "collection": "baz",
                              "joinType": "inner",
                              "pipeline": [],
                              "condition": { "$sqlNot": ["$$ROOT.b"] },
                            },
                        },
                        {
                          "$group":
                            {
                              "_id": null,
                              "acc":
                                {
                                  "$sqlAvg":
                                    {
                                      "var":
                                        {
                                          "$sqlDivide":
                                            {
                                              "dividend": "$baz.a",
                                              "divisor": "$b",
                                              "onError": 0,
                                            },
                                        },
                                      "distinct": false,
                                    },
                                },
                            },
                        },
                      ],
                  },
              },
          },
      }
    expected:
      - {
        "$lookup":
          {
            "from": "bar",
            "pipeline":
              [
                {
                  "$lookup":
                    {
                      "from": "baz",
                      "pipeline":
                        [
                          {
                            "$match":
                              {
                                "$expr":
                                  {
                                    "$let":
                                      {
                                        "vars": { "desugared_sqlNot_input0": "$b" },
                                        "in":
                                          {
                                            "$cond":
                                              [
                                                "$lte":
                                                  [
                                                    "$$desugared_sqlNot_input0",
                                                    { "$literal": null },
                                                  ],

                                                { "$literal": null },
                                                { "$not": [ "$$desugared_sqlNot_input0" ] },
                                              ],
                                          },
                                      },
                                  }
                              }
                          },
                        ],
                      "as": "eca58228-b657-498a-b76e-f48a9161a404",
                    },
                },
                {
                  "$unwind":
                    {
                      "path": "$eca58228-b657-498a-b76e-f48a9161a404",
                      "preserveNullAndEmptyArrays": false,
                    },
                },
                {
                  "$replaceWith":
                    {
                      "$mergeObjects":
                        ["$$ROOT", "$eca58228-b657-498a-b76e-f48a9161a404"],
                    },
                },
                {
                  "$project":
                    { "_id": 0, "eca58228-b657-498a-b76e-f48a9161a404": 0 },
                },
                {
                  "$group":
                    {
                      "_id": null,
                      "acc":
                        {
                          "$avg":
                            {
                              "$cond":
                                [
                                  { "$eq": ["$b", 0] },
                                  0,
                                  { "$divide": ["$baz.a", "$b"] },
                                ],
                            },
                        },
                    },
                },
              ],
            "as": "__subquery_result_0",
          },
      }
      - {
        "$project":
          {
            "_id": 0,
            "expr":
              {
                "$let":
                  {
                    "vars":
                      {
                        "docExpr":
                          { "$arrayElemAt": ["$__subquery_result_0", 0] },
                      },
                    "in": "$$docExpr.acc",
                  },
              },
          },
      }
      - { "$project": { "_id": 0, "__subquery_result_0": 0 } }

  - name: "subqueryComparison is not match optimized"
    input:
      - {
        "$match":
          {
            "$expr":
              {
                "$subqueryComparison":
                  {
                    "op": "sqlEq",
                    "modifier": "any",
                    "arg": "$bar.a",
                    "subquery":
                      {
                        "db": "foo",
                        "collection": "baz",
                        "let": { "bar_0": "$bar" },
                        "outputPath": ["__bot", "a"],
                        "pipeline":
                          [
                            { "$project": { "baz": "$$ROOT" } },
                            { "$project": { "baz": "$baz" } },
                            {
                              "$project":
                                { "__bot": { "a": "$baz.a" } },
                            },
                            { "$sort": { "__bot.a": 1 } },
                            { "$skip": 1 },
                          ],
                      },
                  },
              },
          },
      }
    expected:
      - {
        "$lookup":
          {
            "from": { "db": "foo", "coll": "baz" },
            "let": { "bar_0": "$bar" },
            "pipeline":
              [
                { "$project": { "_id": 0, "baz": "$$ROOT" } },
                { "$project": { "_id": 0, "baz": "$baz" } },
                { "$project": { "_id": 0, "__bot": { "a": "$baz.a" } } },
                { "$sort": { "__bot.a": 1 } },
                { "$skip": 1 },
              ],
            "as": "__subquery_result_0",
          },
      }
      - {
        "$match":
          {
            "$expr":
              {
                "$reduce":
                  {
                    "input": "$__subquery_result_0",
                    "initialValue": false,
                    "in":
                      {
                        "$let":
                          {
                            "vars":
                              {
                                "desugared_sqlOr_input0": "$$value",
                                "desugared_sqlOr_input1":
                                  {
                                    "$let":
                                      {
                                        "vars":
                                          {
                                            "desugared_sqlEq_input0": "$bar.a",
                                            "desugared_sqlEq_input1": "$$this.__bot.a",
                                          },
                                        "in":
                                          {
                                            "$cond":
                                              [
                                                {
                                                  "$or":
                                                    [
                                                      {
                                                        "$lte":
                                                          [
                                                            "$$desugared_sqlEq_input0",
                                                            null,
                                                          ],
                                                      },
                                                      {
                                                        "$lte":
                                                          [
                                                            "$$desugared_sqlEq_input1",
                                                            null,
                                                          ],
                                                      },
                                                    ],
                                                },
                                                null,
                                                {
                                                  "$eq":
                                                    [
                                                      "$$desugared_sqlEq_input0",
                                                      "$$desugared_sqlEq_input1",
                                                    ],
                                                },
                                              ],
                                          },
                                      },
                                  },
                              },
                            "in":
                              {
                                "$cond":
                                  [
                                    {
                                      "$or":
                                        [
                                          {
                                            "$eq":
                                              [
                                                "$$desugared_sqlOr_input0",
                                                true,
                                              ],
                                          },
                                          {
                                            "$eq":
                                              [
                                                "$$desugared_sqlOr_input1",
                                                true,
                                              ],
                                          },
                                        ],
                                    },
                                    true,
                                    {
                                      "$cond":
                                        [
                                          {
                                            "$or":
                                              [
                                                {
                                                  "$lte":
                                                    [
                                                      "$$desugared_sqlOr_input0",
                                                      null,
                                                    ],
                                                },
                                                {
                                                  "$lte":
                                                    [
                                                      "$$desugared_sqlOr_input1",
                                                      null,
                                                    ],
                                                },
                                              ],
                                          },
                                          null,
                                          false,
                                        ],
                                    },
                                  ],
                              },
                          },
                      },
                  },
              },
          },
      }
      - { "$project": { "_id": 0, "__subquery_result_0": 0 } }
