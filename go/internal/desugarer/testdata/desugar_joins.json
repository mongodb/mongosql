[
  {
    "name": "nothing to desugar",
    "input": [
      {
        "$project": {
          "_id": 0,
          "foo": "$$ROOT"
        }
      }
    ],
    "expected": [
      {
        "$project": {
          "_id": 0,
          "foo": "$$ROOT"
        }
      }
    ]
  },
  {
    "name": "desugar inner join",
    "input": [
      {
        "$join": {
          "collection": "bar",
          "joinType": "inner",
          "pipeline": []
        }
      }
    ],
    "expected": [
      {
        "$lookup": {
          "from": "bar",
          "pipeline": [],
          "as": "BpLnfgDsc2WD8F2qNfHK"
        }
      },
      {
        "$unwind": {
          "path": "$BpLnfgDsc2WD8F2qNfHK",
          "preserveNullAndEmptyArrays": false
        }
      },
      {
        "$replaceRoot": {
          "newRoot": {
            "$mergeObjects": [
              "$$ROOT",
              "$BpLnfgDsc2WD8F2qNfHK"
            ]
          }
        }
      },
      {
        "$project": {
          "_id": 0,
          "BpLnfgDsc2WD8F2qNfHK": 0
        }
      }
    ]
  },
  {
    "name": "desugar left join",
    "input": [
      {
        "$join": {
          "collection": "bar",
          "joinType": "left",
          "pipeline": []
        }
      }
    ],
    "expected": [
      {
        "$lookup": {
          "from": "bar",
          "pipeline": [],
          "as": "BpLnfgDsc2WD8F2qNfHK"
        }
      },
      {
        "$unwind": {
          "path": "$BpLnfgDsc2WD8F2qNfHK",
          "preserveNullAndEmptyArrays": true
        }
      },
      {
        "$replaceRoot": {
          "newRoot": {
            "$mergeObjects": [
              "$$ROOT",
              "$BpLnfgDsc2WD8F2qNfHK"
            ]
          }
        }
      },
      {
        "$project": {
          "_id": 0,
          "BpLnfgDsc2WD8F2qNfHK": 0
        }
      }
    ]
  },
  {
    "name": "desugar join with db specified",
    "input": [
      {
        "$join": {
          "database": "db",
          "collection": "bar",
          "joinType": "inner",
          "pipeline": []
        }
      }
    ],
    "expected": [
      {
        "$lookup": {
          "from": {
            "db": "db",
            "coll": "bar"
          },
          "pipeline": [],
          "as": "BpLnfgDsc2WD8F2qNfHK"
        }
      },
      {
        "$unwind": {
          "path": "$BpLnfgDsc2WD8F2qNfHK",
          "preserveNullAndEmptyArrays": false
        }
      },
      {
        "$replaceRoot": {
          "newRoot": {
            "$mergeObjects": [
              "$$ROOT",
              "$BpLnfgDsc2WD8F2qNfHK"
            ]
          }
        }
      },
      {
        "$project": {
          "_id": 0,
          "BpLnfgDsc2WD8F2qNfHK": 0
        }
      }
    ]
  },
  {
    "name": "desugar join with no collection and non-empty pipeline",
    "input": [
      {
        "$join": {
          "joinType": "inner",
          "pipeline": [
            {
              "$documents": [
                {
                  "a": 1
                },
                {
                  "a": 2
                },
                {
                  "a": 3
                }
              ]
            }
          ]
        }
      }
    ],
    "expected": [
      {
        "$lookup": {
          "pipeline": [
            {
              "$documents": [
                {
                  "a": 1
                },
                {
                  "a": 2
                },
                {
                  "a": 3
                }
              ]
            }
          ],
          "as": "BpLnfgDsc2WD8F2qNfHK"
        }
      },
      {
        "$unwind": {
          "path": "$BpLnfgDsc2WD8F2qNfHK",
          "preserveNullAndEmptyArrays": false
        }
      },
      {
        "$replaceRoot": {
          "newRoot": {
            "$mergeObjects": [
              "$$ROOT",
              "$BpLnfgDsc2WD8F2qNfHK"
            ]
          }
        }
      },
      {
        "$project": {
          "_id": 0,
          "BpLnfgDsc2WD8F2qNfHK": 0
        }
      }
    ]
  },
  {
    "name": "desugar join non-empty let and match",
    "input": [
      {
        "$join": {
          "collection": "bar",
          "joinType": "inner",
          "let": {
            "x": "$x"
          },
          "pipeline": [
            {
              "$project": {
                "_id": 0,
                "x": 1
              }
            }
          ],
          "condition": {
            "$match": {
              "$expr": {
                "$sqlEq": [
                  "$$x",
                  "$x"
                ]
              }
            }
          }
        }
      }
    ],
    "expected": [
      {
        "$lookup": {
          "from": "bar",
          "let": {
            "x": "$x"
          },
          "pipeline": [
            {
              "$project": {
                "_id": 0,
                "x": 1
              }
            },
            {
              "$match": {
                "$expr": {
                  "$sqlEq": [
                    "$$x",
                    "$x"
                  ]
                }
              }
            }
          ],
          "as": "BpLnfgDsc2WD8F2qNfHK"
        }
      },
      {
        "$unwind": {
          "path": "$BpLnfgDsc2WD8F2qNfHK",
          "preserveNullAndEmptyArrays": false
        }
      },
      {
        "$replaceRoot": {
          "newRoot": {
            "$mergeObjects": [
              "$$ROOT",
              "$BpLnfgDsc2WD8F2qNfHK"
            ]
          }
        }
      },
      {
        "$project": {
          "_id": 0,
          "BpLnfgDsc2WD8F2qNfHK": 0
        }
      }
    ]
  },
  {
    "name": "desugar when join is not first in pipeline",
    "input": [
      {
        "$project": {
          "_id": 0,
          "foo": "$$ROOT"
        }
      },
      {
        "$join": {
          "collection": "bar",
          "joinType": "inner",
          "let": {
            "x": "$x"
          },
          "pipeline": [
            {
              "$project": {
                "_id": 0,
                "x": 1
              }
            }
          ],
          "condition": {
            "$match": {
              "$expr": {
                "$sqlEq": [
                  "$$x",
                  "$x"
                ]
              }
            }
          }
        }
      }
    ],
    "expected": [
      {
        "$project": {
          "_id": 0,
          "foo": "$$ROOT"
        }
      },
      {
        "$lookup": {
          "from": "bar",
          "let": {
            "x": "$x"
          },
          "pipeline": [
            {
              "$project": {
                "_id": 0,
                "x": 1
              }
            },
            {
              "$match": {
                "$expr": {
                  "$sqlEq": [
                    "$$x",
                    "$x"
                  ]
                }
              }
            }
          ],
          "as": "BpLnfgDsc2WD8F2qNfHK"
        }
      },
      {
        "$unwind": {
          "path": "$BpLnfgDsc2WD8F2qNfHK",
          "preserveNullAndEmptyArrays": false
        }
      },
      {
        "$replaceRoot": {
          "newRoot": {
            "$mergeObjects": [
              "$$ROOT",
              "$BpLnfgDsc2WD8F2qNfHK"
            ]
          }
        }
      },
      {
        "$project": {
          "_id": 0,
          "BpLnfgDsc2WD8F2qNfHK": 0
        }
      }
    ]
  },
  {
    "name": "desugar multiple joins",
    "input": [
      {
        "$project": {
          "_id": 0,
          "foo": "$$ROOT"
        }
      },
      {
        "$join": {
          "collection": "bar",
          "joinType": "inner",
          "let": {
            "x": "$x"
          },
          "pipeline": [
            {
              "$project": {
                "_id": 0,
                "x": 1
              }
            }
          ],
          "condition": {
            "$match": {
              "$expr": {
                "$sqlEq": [
                  "$$x",
                  "$x"
                ]
              }
            }
          }
        }
      },
      {
        "$join": {
          "collection": "baz",
          "joinType": "inner",
          "let": {
            "y": "$y"
          },
          "pipeline": [
            {
              "$project": {
                "_id": 0,
                "y": 1
              }
            }
          ],
          "condition": {
            "$match": {
              "$expr": {
                "$sqlEq": [
                  "$$y",
                  "$y"
                ]
              }
            }
          }
        }
      }
    ],
    "expected": [
      {
        "$project": {
          "_id": 0,
          "foo": "$$ROOT"
        }
      },
      {
        "$lookup": {
          "from": "bar",
          "let": {
            "x": "$x"
          },
          "pipeline": [
            {
              "$project": {
                "_id": 0,
                "x": 1
              }
            },
            {
              "$match": {
                "$expr": {
                  "$sqlEq": [
                    "$$x",
                    "$x"
                  ]
                }
              }
            }
          ],
          "as": "BpLnfgDsc2WD8F2qNfHK"
        }
      },
      {
        "$unwind": {
          "path": "$BpLnfgDsc2WD8F2qNfHK",
          "preserveNullAndEmptyArrays": false
        }
      },
      {
        "$replaceRoot": {
          "newRoot": {
            "$mergeObjects": [
              "$$ROOT",
              "$BpLnfgDsc2WD8F2qNfHK"
            ]
          }
        }
      },
      {
        "$project": {
          "_id": 0,
          "BpLnfgDsc2WD8F2qNfHK": 0
        }
      },
      {
        "$lookup": {
          "from": "baz",
          "let": {
            "y": "$y"
          },
          "pipeline": [
            {
              "$project": {
                "_id": 0,
                "y": 1
              }
            },
            {
              "$match": {
                "$expr": {
                  "$sqlEq": [
                    "$$y",
                    "$y"
                  ]
                }
              }
            }
          ],
          "as": "KSiOW4eQ7sklpgstrQZt"
        }
      },
      {
        "$unwind": {
          "path": "$KSiOW4eQ7sklpgstrQZt",
          "preserveNullAndEmptyArrays": false
        }
      },
      {
        "$replaceRoot": {
          "newRoot": {
            "$mergeObjects": [
              "$$ROOT",
              "$KSiOW4eQ7sklpgstrQZt"
            ]
          }
        }
      },
      {
        "$project": {
          "_id": 0,
          "KSiOW4eQ7sklpgstrQZt": 0
        }
      }
    ]
  },
  {
    "name": "nested join",
    "input": [
      {
        "$join": {
          "collection": "bar",
          "joinType": "inner",
          "pipeline": [
            {
              "$join": {
                "collection": "baz",
                "joinType": "inner",
                "pipeline": [
                  {
                    "$join": {
                      "collection": "car",
                      "joinType": "inner",
                      "pipeline": []
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    ],
    "expected": [
      {
        "$lookup": {
          "from": "bar",
          "pipeline": [
            {
              "$lookup": {
                "from": "baz",
                "pipeline": [
                  {
                    "$lookup": {
                      "from": "car",
                      "pipeline": [],
                      "as": "BpLnfgDsc2WD8F2qNfHK"
                    }
                  },
                  {
                    "$unwind": {
                      "path": "$BpLnfgDsc2WD8F2qNfHK",
                      "preserveNullAndEmptyArrays": false
                    }
                  },
                  {
                    "$replaceRoot": {
                      "newRoot": {
                        "$mergeObjects": [
                          "$$ROOT",
                          "$BpLnfgDsc2WD8F2qNfHK"
                        ]
                      }
                    }
                  },
                  {
                    "$project": {
                      "_id": 0,
                      "BpLnfgDsc2WD8F2qNfHK": 0
                    }
                  }
                ],
                "as": "BpLnfgDsc2WD8F2qNfHK"
              }
            },
            {
              "$unwind": {
                "path": "$BpLnfgDsc2WD8F2qNfHK",
                "preserveNullAndEmptyArrays": false
              }
            },
            {
              "$replaceRoot": {
                "newRoot": {
                  "$mergeObjects": [
                    "$$ROOT",
                    "$BpLnfgDsc2WD8F2qNfHK"
                  ]
                }
              }
            },
            {
              "$project": {
                "_id": 0,
                "BpLnfgDsc2WD8F2qNfHK": 0
              }
            }
          ],
          "as": "BpLnfgDsc2WD8F2qNfHK"
        }
      },
      {
        "$unwind": {
          "path": "$BpLnfgDsc2WD8F2qNfHK",
          "preserveNullAndEmptyArrays": false
        }
      },
      {
        "$replaceRoot": {
          "newRoot": {
            "$mergeObjects": [
              "$$ROOT",
              "$BpLnfgDsc2WD8F2qNfHK"
            ]
          }
        }
      },
      {
        "$project": {
          "_id": 0,
          "BpLnfgDsc2WD8F2qNfHK": 0
        }
      }
    ]
  }
]
