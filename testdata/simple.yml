# How this test case file works:
#
# 1. mongorestore each of these bson files under the "data" section 
# into the indicated namespace
#
data:
- archive_file: testdata/input/test1.bson.gz

# 2. Start a test server using the following schema mapping, which should
# correspond to the data used in (1)

schema:
- db: test
  tables:
  - table: foo
    collection: test1
    pipeline: 
    - $project: { a: 1, b: 1, loc: 1, c: { $add: ["$a", { $numberLong: "10" }] } }
    columns:
    - Name: a
      MongoType: int
      SqlName: a
      SqlType: int64
    - Name: b
      MongoType: string
      SqlName: b
      SqlType: varchar
    - Name: c
      MongoType: int64
      SqlName: c
      SqlType: int64
    - Name: "loc.0" 
      MongoType: int
      SqlName: latitude
      SqlType: int64
    - Name: "loc.1"
      MongoType: int
      SqlName: longitude
      SqlType: int64

# 3. Run each of the following queries, and report any that have errors
testcases:
- sql: "SELECT a, b, c, latitude, longitude from foo"
  expected_types: [int, varchar, int, float64, float64]
  expected: 
    - [1, "hello world!", 11, 124.0, 35.0]
- sql: "SELECT count(*) from foo"
  expected_types: [int]
  expected: 
    - [1]
- sql: "SELECT sum(a) from foo"
  expected_types: [int]
  expected: 
    - [1]
- sql: "SELECT sum(c) from foo"
  expected_types: [int]
  expected: 
    - [11]
- sql: "SELECT latitude, longitude from foo"
  expected_types: [float64, float64]
  expected: 
    - [124.0, 35.0]
