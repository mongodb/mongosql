{"id":"0","value":"SELECT CONVERT(TIMESTAMPADD(SQL_TSI_QUARTER,1, '2013-03-31'), SQL_DATE) AS `none_z_dateadd_quarter_AD_DB_ok` FROM Calcs HAVING (COUNT(1) > 0)","columns":1,"rows":1}
{"id":"18","value":"SELECT QUARTER(`Date`) AS `qr_Date_ok` FROM Starbucks WHERE (QUARTER(`Date`) IS NULL) LIMIT 1","columns":1,"rows":1}
{"id":"28","value":"SELECT `Call Center Region` AS `none_Call_Center_Region_nk`, `Customer State` AS `none_Customer_State_nk`, `Prod Type1` AS `none_Prod_TypeB_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok` FROM Staples GROUP BY `Call Center Region`, `Customer State`, `Prod Type1`","columns":4,"rows":1}
{"id":"32","value":"SELECT WEEK(`Ship Date`) AS `none_DATEPART__week__Ship_Date__ok`, TIMESTAMPADD(SQL_TSI_DAY,-(DAYOFWEEK(`Ship Date`) - 1),CONVERT(`Ship Date`, SQL_DATE)) AS `none_DATETRUNC__week__Ship_Date__ok`, `Ship Date` AS `none_Ship_Date_ok`, DAYOFWEEK(`Ship Date`) AS `wd_Ship_Date_ok` FROM Staples WHERE (`Ship Date` <=  '1997-02-01') GROUP BY WEEK(`Ship Date`), TIMESTAMPADD(SQL_TSI_DAY,-(DAYOFWEEK(`Ship Date`) - 1),CONVERT(`Ship Date`, SQL_DATE)), `Ship Date`, DAYOFWEEK(`Ship Date`)","columns":4,"rows":0}
{"id":"34","value":"SELECT `Order Date` AS `none_Order_Date_ok`, `Order ID` AS `none_Order_ID_nk`, SUM(CONVERT(`Item Count`, SQL_BIGINT)) AS `sum_Item_Count_ok` FROM Staples WHERE ((`Order Date` >=  '2002-10-12') AND (`Order Date` <=  '2002-12-31')) GROUP BY `Order Date`, `Order ID`","columns":3,"rows":0}
{"id":"39","value":"SELECT WEEK(`Ship Date`) AS `none_DATEPART__week__Ship_Date__ok`, TIMESTAMPADD(SQL_TSI_DAY,-(DAYOFWEEK(`Ship Date`) - 1),CONVERT(`Ship Date`, SQL_DATE)) AS `none_DATETRUNC__week__Ship_Date__ok`, `Ship Date` AS `none_Ship_Date_ok`, DAYOFWEEK(`Ship Date`) AS `wd_Ship_Date_ok` FROM Staples WHERE ((`Ship Date` >=  '1997-12-20') AND (`Ship Date` <=  '1998-01-10')) GROUP BY WEEK(`Ship Date`), TIMESTAMPADD(SQL_TSI_DAY,-(DAYOFWEEK(`Ship Date`) - 1),CONVERT(`Ship Date`, SQL_DATE)), `Ship Date`, DAYOFWEEK(`Ship Date`)","columns":4,"rows":0}
{"id":"54","value":"SELECT FLOOR((-`Discount`) / 0.050000000000000003) AS `Minus_Discount__bin_`, MAX(`Discount`) AS `max_Discount_ok`, MIN(`Discount`) AS `min_Discount_ok` FROM Staples GROUP BY FLOOR((-`Discount`) / 0.050000000000000003)","columns":3,"rows":1}
{"id":"60","value":"SELECT `Market` AS `none_Market_nk`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok`, SUM(CONVERT(`Item Count`, SQL_BIGINT)) AS `sum_Item_Count_ok` FROM Starbucks GROUP BY `Market`","columns":3,"rows":1}
{"id":"62","value":"SELECT `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, `Product` AS `none_Product_nk`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok`, SUM(`Profit`) AS `sum_Profit_ok` FROM Starbucks GROUP BY `Market`, `Product Type`, `Product`","columns":5,"rows":1}
{"id":"70","value":"SELECT `State` AS `none_State_nk`, `Profit` AS `sum_Profit_ok`, `Sales` AS `sum_Sales_ok` FROM Starbucks WHERE ((((YEAR(`Date`) * 10000) + (MONTH(`Date`) * 100)) + DAYOFMONTH(`Date`)) = 19980101)","columns":3,"rows":0}
{"id":"71","value":"SELECT `Date` AS `none_Date_ok`, `Market` AS `none_Market_nk`, SUM(CONVERT(`Inventory`, SQL_BIGINT)) AS `sum_Inventory_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY `Date`, `Market`","columns":4,"rows":1}
{"id":"81","value":"SELECT `Date` AS `none_Date_ok`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok`, SUM(CONVERT(`Margin`, SQL_BIGINT)) AS `sum_Margin_ok` FROM Starbucks GROUP BY `Date`","columns":3,"rows":1}
{"id":"84","value":"SELECT SUM(CONVERT(`Margin`, SQL_BIGINT)) AS `sum_Margin_ok` FROM Starbucks HAVING (COUNT(1) > 0)","columns":1,"rows":1}
{"id":"86","value":"SELECT `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, `Product` AS `none_Product_nk`, `Type` AS `none_Type_nk`, SUM(CONVERT(`Inventory`, SQL_BIGINT)) AS `sum_Inventory_ok`, SUM(`Profit`) AS `sum_Profit_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY `Market`, `Product Type`, `Product`, `Type`","columns":7,"rows":1}
{"id":"87","value":"SELECT SUM(CONVERT(`Budget Sales`, SQL_BIGINT)) AS `sum_Budget_Sales_ok`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok`, SUM(CONVERT(`Margin`, SQL_BIGINT)) AS `sum_Margin_ok` FROM Starbucks HAVING (COUNT(1) > 0)","columns":3,"rows":1}
{"id":"97","value":"SELECT `Market` AS `none_Market_nk`, QUARTER(`Date`) AS `qr_Date_ok` FROM Starbucks GROUP BY `Market`, QUARTER(`Date`)","columns":2,"rows":1}
{"id":"98","value":"SELECT `State` AS `none_State_nk`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok`, SUM(CONVERT(`Marketing`, SQL_BIGINT)) AS `sum_Marketing_ok`, SUM(CONVERT(`Opening`, SQL_BIGINT)) AS `sum_Opening_ok` FROM Starbucks GROUP BY `State`","columns":4,"rows":1}
{"id":"100","value":"SELECT `Product` AS `none_Product_nk`, SUM(CONVERT(`Margin`, SQL_BIGINT)) AS `sum_Margin_ok`, SUM(CONVERT(`Payroll`, SQL_BIGINT)) AS `sum_Payroll_ok`, SUM(`Profit`) AS `sum_Profit_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks WHERE (NOT (`Product` = 'Columbian')) GROUP BY `Product`","columns":5,"rows":1}
{"id":"102","value":"SELECT `Date` AS `none_Date_ok`, `Profit` AS `none_Profit_ok`, SUM(CONVERT(1, SQL_BIGINT)) AS `sum_Number_of_Records_ok` FROM Starbucks GROUP BY `Date`, `Profit`","columns":3,"rows":1}
{"id":"106","value":"SELECT AVG(CONVERT(50, SQL_DOUBLE)) AS `avg_X_ok`, AVG(CONVERT(50, SQL_DOUBLE)) AS `avg_Y_ok`, `Product` AS `none_Product_nk` FROM Starbucks GROUP BY `Product`","columns":3,"rows":1}
{"id":"108","value":"SELECT ((YEAR(`Date`) * 100) + MONTH(`Date`)) AS `my_Date_ok`, SUM(`Profit`) AS `sum_Profit_ok` FROM Starbucks GROUP BY ((YEAR(`Date`) * 100) + MONTH(`Date`))","columns":2,"rows":1}
{"id":"109","value":"SELECT `Additions` AS `Additions`, `Budget Additions` AS `Budget_Additions`, `Budget COGS` AS `Budget_COGS`, `Budget Margin` AS `Budget_Margin`, `Budget Payroll` AS `Budget_Payroll`, `Budget Profit` AS `Budget_Profit`, `Budget Sales` AS `Budget_Sales`, `COGS` AS `COGS`, `Date` AS `Date`, `Ending` AS `Ending`, `Inventory` AS `Inventory`, `Item Count` AS `Item_Count`, `Margin` AS `Margin`, `Margin Rate` AS `Margin_Rate`, `Market` AS `Market`, `Market Size` AS `Market_Size`, `Marketing` AS `Marketing`, `Misc` AS `Misc`, `Opening` AS `Opening`, `Payroll` AS `Payroll`, `Product` AS `Product`, `Product Type` AS `Product_Type`, `Profit` AS `Profit`, `Profit Ratio` AS `Profit_Ratio`, `Sales` AS `Sales`, `State` AS `State`, `Total Expenses` AS `Total_Expenses`, `Type` AS `Type`, `birst_constant_one` AS `birst_constant_one`, `row` AS `row` FROM Starbucks WHERE ((MONTH(`Date`) = 3) AND (`Product Type` IN ('Coffee', 'Espresso', 'Tea')))","columns":30,"rows":0}
{"id":"110","value":"SELECT `Market Size` AS `none_Market_Size_nk`, `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`Inventory`, SQL_BIGINT)) AS `sum_Inventory_ok` FROM Starbucks GROUP BY `Market Size`, `Market`, `Product Type`","columns":4,"rows":1}
{"id":"112","value":"SELECT COUNT(1) AS `cnt_Number_of_Records_ok`, `State` AS `none_State_nk`, SUM(CONVERT(`Additions`, SQL_BIGINT)) AS `sum_Additions_ok`, SUM(CONVERT(`Budget Additions`, SQL_BIGINT)) AS `sum_Budget_Additions_ok`, SUM(CONVERT(`Budget COGS`, SQL_BIGINT)) AS `sum_Budget_COGS_ok` FROM Starbucks GROUP BY `State`","columns":5,"rows":1}
{"id":"113","value":"SELECT COUNT(1) AS `cnt_Number_of_Records_ok`, `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`Additions`, SQL_BIGINT)) AS `sum_Additions_ok`, SUM(CONVERT(`Budget Additions`, SQL_BIGINT)) AS `sum_Budget_Additions_ok`, SUM(CONVERT(`Budget COGS`, SQL_BIGINT)) AS `sum_Budget_COGS_ok` FROM Starbucks GROUP BY `Market`, `Product Type`","columns":6,"rows":1}
{"id":"114","value":"SELECT COUNT(1) AS `cnt_Number_of_Records_ok`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`Additions`, SQL_BIGINT)) AS `sum_Additions_ok`, SUM(CONVERT(`Budget Additions`, SQL_BIGINT)) AS `sum_Budget_Additions_ok`, SUM(CONVERT(`Budget COGS`, SQL_BIGINT)) AS `sum_Budget_COGS_ok` FROM Starbucks GROUP BY `Product Type`","columns":5,"rows":1}
{"id":"115","value":"SELECT `Product` AS `none_Product_nk`, SUM(CONVERT(`Inventory`, SQL_BIGINT)) AS `sum_Inventory_ok` FROM Starbucks GROUP BY `Product`","columns":2,"rows":1}
{"id":"118","value":"SELECT `Profit` AS `none_Profit_ok`, SUM(CONVERT(`Budget Profit`, SQL_BIGINT)) AS `sum_Budget_Profit_ok` FROM Starbucks GROUP BY `Profit`","columns":2,"rows":1}
{"id":"120","value":"SELECT SUM(CONVERT(`Budget Profit`, SQL_BIGINT)) AS `sum_Budget_Profit_ok`, SUM(CONVERT(`Budget Sales`, SQL_BIGINT)) AS `sum_Budget_Sales_ok`, SUM(`Profit`) AS `sum_Profit_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks HAVING (COUNT(1) > 0)","columns":4,"rows":1}
{"id":"126","value":"SELECT `Year` AS `none_Year_ok`, SUM(CONVERT(`Doubles`, SQL_BIGINT)) AS `sum_Doubles_ok` FROM Batters WHERE (`Year` IN (1871, 1872, 1873, 1874, 1875)) GROUP BY `Year`","columns":2,"rows":0}
{"id":"128","value":"SELECT `Call Center Region` AS `none_Call_Center_Region_nk`, `Customer State` AS `none_Customer_State_nk`, SUM(`Gross Profit`) AS `sum_Gross_Profit_ok` FROM Staples WHERE ((CASE WHEN (CONVERT((`Received Date` - `Order Date`), SQL_DOUBLE) IN (1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 21, 22, 23, 24, 25, 26, 27, 28, 3, 4, 5, 6, 7, 8, 9)) THEN 1 WHEN (CONVERT((`Received Date` - `Order Date`), SQL_DOUBLE) IN (121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138)) THEN 121 WHEN (CONVERT((`Received Date` - `Order Date`), SQL_DOUBLE) IN (82, 85, 86, 88, 89, 90)) THEN 82 WHEN (CONVERT((`Received Date` - `Order Date`), SQL_DOUBLE) IN (100, 102, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 91, 92, 93, 94, 95, 96, 97, 99)) THEN 91 ELSE (-1) END) = 121) GROUP BY `Call Center Region`, `Customer State`","columns":3,"rows":0}
{"id":"144","value":"SELECT `Market` AS `none_Market_nk`, 1 AS `none_One_ok`, `Product` AS `none_Product_nk`, SUM(CONVERT(1, SQL_BIGINT)) AS `sum_Tableau_One_Column_For_Spot_Highlighting_Show_Me_ok` FROM Starbucks GROUP BY `Market`, `Product`","columns":4,"rows":1}
{"id":"153","value":"SELECT `Prod Type1` AS `none_Prod_TypeB_nk`, SUM(`Price`) AS `sum_Price_ok`, TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFMONTH(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE)) AS `tmn_Order_Date_ok` FROM Staples GROUP BY `Prod Type1`, TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFMONTH(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE))","columns":3,"rows":1}
{"id":"155","value":"SELECT `Prod Type1` AS `none_Prod_TypeB_nk`, SUM(`Gross Profit`) AS `sum_Gross_Profit_ok`, TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE)) AS `tyr_Order_Date_ok` FROM Staples GROUP BY `Prod Type1`, TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE))","columns":3,"rows":1}
{"id":"158","value":"SELECT `Date` AS `none_Date_ok`, `Market` AS `none_Market_nk`, TIMESTAMPADD(SQL_TSI_DAY,1,`Date`) AS `none_OtherDate_ok` FROM Starbucks GROUP BY `Date`, `Market`, TIMESTAMPADD(SQL_TSI_DAY,1,`Date`)","columns":3,"rows":1}
{"id":"160","value":"SELECT `Date` AS `none_Date_ok`, SUM(CONVERT(`Budget Sales`, SQL_BIGINT)) AS `sum_Budget_Sales_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY `Date`","columns":3,"rows":1}
{"id":"161","value":"SELECT SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok` FROM Starbucks WHERE ((`Market` = 'East') AND (`State` = 'Washington')) HAVING (COUNT(1) > 0)","columns":1,"rows":0}
{"id":"162","value":"SELECT SUM(CONVERT(`Margin`, SQL_BIGINT)) AS `sum_Another_Margin_ok`, SUM(CONVERT(`Margin`, SQL_BIGINT)) AS `sum_Margin_ok`, SUM(CONVERT(`Margin`, SQL_BIGINT)) AS `sum_My_Margin_ok`, SUM(`Profit`) AS `sum_Profit_ok` FROM Starbucks HAVING (COUNT(1) > 0)","columns":4,"rows":1}
{"id":"166","value":"SELECT `key` AS `none_key_nk`, `str1` AS `none_strB_nk`, (CASE WHEN (LOCATE('IN',`str1`,1) > 0) THEN 1 WHEN NOT (LOCATE('IN',`str1`,1) > 0) THEN 0 ELSE NULL END) AS `none_z_startswith_str_str_nk` FROM Calcs","columns":3,"rows":17}
{"id":"167","value":"SELECT `key` AS `none_key_nk`, `str2` AS `none_strC_nk`, `str3` AS `none_strD_nk`, (CASE WHEN (CASE WHEN ((CASE WHEN (LENGTH(`str2`) - LENGTH(`str3`)) < 0 THEN 1   ELSE LENGTH(`str2`) - LENGTH(`str3`) + 1 END)  IS NULL) OR (LENGTH(`str3`) IS NULL) THEN NULL   WHEN LENGTH(`str3`) < 1 THEN ''   WHEN (CASE WHEN (LENGTH(`str2`) - LENGTH(`str3`)) < 0 THEN 1   ELSE LENGTH(`str2`) - LENGTH(`str3`) + 1 END)  < 1 THEN SUBSTRING(RTRIM(`str2`),1,LENGTH(`str3`))   ELSE SUBSTRING(RTRIM(`str2`),(CASE WHEN (LENGTH(`str2`) - LENGTH(`str3`)) < 0 THEN 1   ELSE LENGTH(`str2`) - LENGTH(`str3`) + 1 END) ,LENGTH(`str3`)) END) = `str3` THEN 1 WHEN NOT (CASE WHEN ((CASE WHEN (LENGTH(`str2`) - LENGTH(`str3`)) < 0 THEN 1   ELSE LENGTH(`str2`) - LENGTH(`str3`) + 1 END)  IS NULL) OR (LENGTH(`str3`) IS NULL) THEN NULL   WHEN LENGTH(`str3`) < 1 THEN ''   WHEN (CASE WHEN (LENGTH(`str2`) - LENGTH(`str3`)) < 0 THEN 1   ELSE LENGTH(`str2`) - LENGTH(`str3`) + 1 END)  < 1 THEN SUBSTRING(RTRIM(`str2`),1,LENGTH(`str3`))   ELSE SUBSTRING(RTRIM(`str2`),(CASE WHEN (LENGTH(`str2`) - LENGTH(`str3`)) < 0 THEN 1   ELSE LENGTH(`str2`) - LENGTH(`str3`) + 1 END) ,LENGTH(`str3`)) END) = `str3` THEN 0 ELSE NULL END) AS `none_z_startswith_str_str__copy__nk` FROM Calcs","columns":4,"rows":17}
{"id":"172","value":"SELECT `Market` AS `Market`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok` FROM Starbucks WHERE ((`Market` >= 'Central') AND (`Market` <= 'South')) GROUP BY `Market`","columns":2,"rows":1}
{"id":"177","value":"SELECT AVG(CONVERT(`Length`, SQL_DOUBLE)) AS `avg_Length_ok`, `Case` AS `none_Case_ok` FROM Fischeriris GROUP BY `Case`","columns":2,"rows":1}
{"id":"178","value":"SELECT `Case` AS `none_Case_ok`, `Species` AS `none_Species_nk`, SUM(CONVERT(`Length`, SQL_BIGINT)) AS `sum_Length_ok`, SUM(CONVERT(1, SQL_BIGINT)) AS `sum_Number_of_Records_ok`, SUM(CONVERT(`Width`, SQL_BIGINT)) AS `sum_Width_ok`, SUM(CONVERT(`birst_constant_one`, SQL_BIGINT)) AS `sum_birst_constant_one_ok`, SUM(CONVERT(`row`, SQL_BIGINT)) AS `sum_row_ok` FROM Fischeriris GROUP BY `Case`, `Species`","columns":7,"rows":1}
{"id":"182","value":"SELECT `App_Age` AS `none_App_Age_ok`, `App_Gender` AS `none_App_Gender_nk`, SUM(CONVERT(`Loan_Amt`, SQL_BIGINT)) AS `sum_Loan_Amt_ok` FROM Loan WHERE ((`App_CoSign` = 'NO COSIGN') AND (`App_College` = 'COLLEGE GRAD') AND (`App_Employ_Status` = 'EMPLOYED')) GROUP BY `App_Age`, `App_Gender`","columns":3,"rows":0}
{"id":"184","value":"SELECT `MONTH` AS `none_MONTH_nk`, SUM(CONVERT(`AUTOTHEFT`, SQL_BIGINT)) AS `sum_AUTOTHEFT_ok` FROM SeattleCrime GROUP BY `MONTH` HAVING ((SUM(CONVERT(`ARSON`, SQL_BIGINT)) >= 40) AND (SUM(CONVERT(`ARSON`, SQL_BIGINT)) <= 55))","columns":2,"rows":0}
{"id":"187","value":"SELECT `MONTH` AS `none_MONTH_nk`, `PRECINCT` AS `none_PRECINCT_nk`, `YEAR` AS `none_YEAR_ok`, SUM(CONVERT(`ARSON`, SQL_BIGINT)) AS `sum_ARSON_ok`, SUM(CONVERT(`RAPE`, SQL_BIGINT)) AS `sum_RAPE_ok` FROM SeattleCrime INNER JOIN ( SELECT COUNT(1) AS `XTableau_join_flag`,   `MONTH` AS `none_MONTH_nk` FROM SeattleCrime GROUP BY `MONTH` HAVING (SUM(CONVERT(`RAPE`, SQL_BIGINT)) < 14) ) t0 ON (`MONTH` = t0.none_MONTH_nk) GROUP BY `MONTH`, `PRECINCT`, `YEAR`","columns":5,"rows":1}
{"id":"188","value":"SELECT COUNT(`TRACT`) AS `TEMP_Avg_Rape_Per_Tract__DGDBIHAADB__A_`, SUM(CONVERT(`RAPE`, SQL_BIGINT)) AS `TEMP_Avg_Rape_Per_Tract__HDEJFCFIH__A_`, `PRECINCT` AS `none_PRECINCT_nk` FROM SeattleCrime GROUP BY `PRECINCT`","columns":3,"rows":1}
{"id":"191","value":"SELECT `MONTH` AS `none_MONTH_nk`, `PRECINCT` AS `none_PRECINCT_nk`, SUM(CONVERT(`AGG_ASSAULT`, SQL_BIGINT)) AS `sum_AGG_ASSAULT_ok`, SUM(CONVERT(`ARSON`, SQL_BIGINT)) AS `sum_ARSON_ok` FROM SeattleCrime WHERE (`PRECINCT` IN ('EAST DISTRICT', 'WEST DISTRICT')) GROUP BY `MONTH`, `PRECINCT`","columns":4,"rows":0}
{"id":"192","value":"SELECT `MONTH` AS `none_MONTH_nk`, `PRECINCT` AS `none_PRECINCT_nk`, `YEAR` AS `none_YEAR_ok`, SUM(CONVERT(`ARSON`, SQL_BIGINT)) AS `sum_ARSON_ok`, SUM(CONVERT(`RAPE`, SQL_BIGINT)) AS `sum_RAPE_ok` FROM SeattleCrime INNER JOIN ( SELECT COUNT(1) AS `XTableau_join_flag`,   `MONTH` AS `none_MONTH_nk` FROM SeattleCrime GROUP BY `MONTH` HAVING (SUM(CONVERT(`RAPE`, SQL_BIGINT)) > 14) ) t0 ON (`MONTH` = t0.none_MONTH_nk) GROUP BY `MONTH`, `PRECINCT`, `YEAR`","columns":5,"rows":0}
{"id":"193","value":"SELECT `PRECINCT` AS `none_PRECINCT_nk`, (CASE WHEN COUNT(`TRACT`) = 0 THEN NULL ELSE CONVERT(SUM(CONVERT(`RAPE`, SQL_BIGINT)), SQL_DOUBLE) / COUNT(`TRACT`) END) AS `usr_Avg_Rape_Per_Tract_ok` FROM SeattleCrime GROUP BY `PRECINCT`","columns":2,"rows":1}
{"id":"194","value":"SELECT `MONTH` AS `none_MONTH_nk`, `PRECINCT` AS `none_PRECINCT_nk`, `YEAR` AS `none_YEAR_ok`, SUM(CONVERT(`ARSON`, SQL_BIGINT)) AS `sum_ARSON_ok`, SUM(CONVERT(`RAPE`, SQL_BIGINT)) AS `sum_RAPE_ok` FROM SeattleCrime INNER JOIN ( SELECT COUNT(1) AS `XTableau_join_flag`,   `MONTH` AS `none_MONTH_nk` FROM SeattleCrime GROUP BY `MONTH` HAVING (SUM(CONVERT(`RAPE`, SQL_BIGINT)) <= 14) ) t0 ON (`MONTH` = t0.none_MONTH_nk) GROUP BY `MONTH`, `PRECINCT`, `YEAR`","columns":5,"rows":1}
{"id":"195","value":"SELECT `MONTH` AS `none_MONTH_nk`, `PRECINCT` AS `none_PRECINCT_nk`, `YEAR` AS `none_YEAR_ok`, SUM(CONVERT(`ARSON`, SQL_BIGINT)) AS `sum_ARSON_ok`, SUM(CONVERT(`RAPE`, SQL_BIGINT)) AS `sum_RAPE_ok` FROM SeattleCrime INNER JOIN ( SELECT COUNT(1) AS `XTableau_join_flag`,   `MONTH` AS `none_MONTH_nk` FROM SeattleCrime GROUP BY `MONTH` HAVING (SUM(CONVERT(`RAPE`, SQL_BIGINT)) = 14) ) t0 ON (`MONTH` = t0.none_MONTH_nk) GROUP BY `MONTH`, `PRECINCT`, `YEAR`","columns":5,"rows":0}
{"id":"199","value":"SELECT AVG(`Close_Price`) AS `avg_Close_Price_ok`, COUNT(`Close_Price`) AS `cnt_Close_Price_ok`, MAX(`Close_Price`) AS `max_Close_Price_ok`, MIN(`Close_Price`) AS `min_Close_Price_ok`, `Industry` AS `none_Industry_nk`, (CASE WHEN COUNT(`Close_Price`) > 1 THEN SQRT((COUNT(`Close_Price`) * SUM(POWER(`Close_Price`,2)) - POWER(SUM(`Close_Price`), 2) ) / (COUNT(`Close_Price`)*(COUNT(`Close_Price`) - 1))) ELSE NULL END) AS `std_Close_Price_ok`, SUM(`Close_Price`) AS `sum_Close_Price_ok`, (CASE WHEN COUNT(`Close_Price`) > 1 THEN ((COUNT(`Close_Price`) * SUM(POWER(`Close_Price`,2)) - POWER(SUM(`Close_Price`), 2) ) / (COUNT(`Close_Price`)*(COUNT(`Close_Price`) - 1))) ELSE NULL END) AS `var_Close_Price_ok` FROM Securities GROUP BY `Industry`","columns":8,"rows":1}
{"id":"200","value":"SELECT `keyName` AS `none_keyName_nk`, `val1` AS `sum_valB_ok`, CONVERT(`val2`, SQL_BIGINT) AS `sum_valC_ok`, `val4` AS `sum_valE_ok` FROM SpecialData","columns":4,"rows":16}
{"id":"201","value":"SELECT `keyName` AS `none_keyName_nk`, `order` AS `sum_order_ok`, `val4` AS `sum_valE_ok`, CONVERT(`val5`, SQL_BIGINT) AS `sum_valF_ok` FROM SpecialData","columns":4,"rows":16}
{"id":"202","value":"SELECT `keyName` AS `none_keyName_nk`, CONVERT(`val2`, SQL_BIGINT) AS `sum_valC_ok`, CONVERT(`val3`, SQL_BIGINT) AS `sum_valD_ok` FROM SpecialData","columns":3,"rows":16}
{"id":"207","value":"SELECT `Customer Name` AS `none_Customer_Name_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok` FROM Staples GROUP BY `Customer Name` HAVING (COUNT(`Order Date`) < 1000)","columns":2,"rows":0}
{"id":"208","value":"SELECT `Call Center Region` AS `none_Call_Center_Region_nk`, `Prod Type1` AS `none_Prod_TypeB_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok`, SUM(`Gross Profit`) AS `sum_Gross_Profit_ok` FROM Staples GROUP BY `Call Center Region`, `Prod Type1`","columns":4,"rows":1}
{"id":"210","value":"SELECT MONTH(`Order Date`) AS `mn_Order_Date_ok`, `Customer Segment` AS `none_Customer_Segment_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok` FROM Staples GROUP BY MONTH(`Order Date`), `Customer Segment`","columns":3,"rows":1}
{"id":"216","value":"SELECT `Customer Name` AS `none_Customer_Name_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok`, SUM(CONVERT(`Item Count`, SQL_BIGINT)) AS `sum_Item_Count_ok` FROM Staples WHERE ((`Call Center Region` NOT IN ('CENTRAL')) AND (`Customer Name` IN ('Dave Hallsten', 'David Wiener', 'Elizabeth Moffitt', 'Grace Kelly', 'Herbert Flentye')) AND ((`Discount` >= 0.105905) AND (`Discount` <= 0.39100000000000001))) GROUP BY `Customer Name` HAVING ((SUM(`Discount`) >= 0.059999999999999401) AND (SUM(`Discount`) <= 48.330000000000481))","columns":3,"rows":0}
{"id":"218","value":"SELECT `Customer Name` AS `none_Customer_Name_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok` FROM Staples GROUP BY `Customer Name`","columns":2,"rows":1}
{"id":"221","value":"SELECT `Customer Name` AS `none_Customer_Name_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok` FROM Staples WHERE (0 <> 0) GROUP BY `Customer Name`","columns":2,"rows":0}
{"id":"233","value":"SELECT `Customer Name` AS `none_Customer_Name_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok`, SUM(CONVERT(`Order Quantity`, SQL_BIGINT)) AS `sum_Order_Quantity_ok` FROM Staples GROUP BY `Customer Name` HAVING (((COUNT(`Discount`) >= 0) AND (COUNT(`Discount`) <= 822)) AND ((SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) >= (-746)) AND (SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) <= 4074689)))","columns":3,"rows":0}
{"id":"238","value":"SELECT `Prod Type1` AS `none_Prod_TypeB_nk`, `Supplier Region` AS `none_Supplier_Region_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok`, SUM(`Gross Profit`) AS `sum_Gross_Profit_ok` FROM Staples GROUP BY `Prod Type1`, `Supplier Region`","columns":4,"rows":1}
{"id":"241","value":"SELECT `Call Center Region` AS `none_Call_Center_Region_nk`, `Customer Name` AS `none_Customer_Name_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok`, SUM(CONVERT(`Order Quantity`, SQL_BIGINT)) AS `sum_Order_Quantity_ok` FROM Staples WHERE ((`Call Center Region` NOT IN ('CENTRAL')) AND ((`Discount` >= -0.001) AND (`Discount` <= 0.215172))) GROUP BY `Call Center Region`, `Customer Name` HAVING (((COUNT(`Discount`) >= 0) AND (COUNT(`Discount`) <= 822)) AND ((SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) >= (-746)) AND (SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) <= 4074689)))","columns":4,"rows":0}
{"id":"252","value":"SELECT `Call Center Region` AS `none_Call_Center_Region_nk`, `Prod Type1` AS `none_Prod_TypeB_nk`, `Supplier Region` AS `none_Supplier_Region_nk`, QUARTER(`Order Date`) AS `qr_Order_Date_ok`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok`, SUM(`Gross Profit`) AS `sum_Gross_Profit_ok` FROM Staples GROUP BY `Call Center Region`, `Prod Type1`, `Supplier Region`, QUARTER(`Order Date`)","columns":6,"rows":1}
{"id":"258","value":"SELECT `Call Center Region` AS `none_Call_Center_Region_nk`, `Customer Name` AS `none_Customer_Name_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok`, SUM(`Discount`) AS `sum_Discount_ok`, SUM(CONVERT(`Order Quantity`, SQL_BIGINT)) AS `sum_Order_Quantity_ok` FROM Staples GROUP BY `Call Center Region`, `Customer Name`","columns":5,"rows":1}
{"id":"260","value":"SELECT (((YEAR(`Order Date`) * 10000) + (MONTH(`Order Date`) * 100)) + DAYOFMONTH(`Order Date`)) AS `md_Order_Date_ok` FROM Staples GROUP BY (((YEAR(`Order Date`) * 10000) + (MONTH(`Order Date`) * 100)) + DAYOFMONTH(`Order Date`)) ORDER BY 1 ASC","columns":1,"rows":1}
{"id":"262","value":"SELECT `Customer Name` AS `none_Customer_Name_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok` FROM Staples GROUP BY `Customer Name` HAVING (AVG(`Discount`) < 0.070000000000000007)","columns":2,"rows":1}
{"id":"266","value":"SELECT MONTH(`Order Date`) AS `mn_Order_Date_ok`, `Customer State` AS `none_Customer_State_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok` FROM Staples GROUP BY MONTH(`Order Date`), `Customer State`","columns":3,"rows":1}
{"id":"274","value":"SELECT `State` AS `none_State_nk`, SUM(CONVERT(`Inventory`, SQL_BIGINT)) AS `sum_Inventory_ok`, SUM(CONVERT(`Marketing`, SQL_BIGINT)) AS `sum_Marketing_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY `State`","columns":4,"rows":1}
{"id":"277","value":"SELECT `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`Budget COGS`, SQL_BIGINT)) AS `sum_Budget_COGS_ok` FROM Starbucks GROUP BY `Market`, `Product Type`","columns":3,"rows":1}
{"id":"278","value":"SELECT COUNT(DISTINCT `State`) AS `ctd_State_ok`, `State` AS `none_State_nk`, SUM(CONVERT(`Marketing`, SQL_BIGINT)) AS `sum_Marketing_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY `State`","columns":4,"rows":1}
{"id":"279","value":"SELECT SUM(CONVERT(`Budget COGS`, SQL_BIGINT)) AS `sum_Budget_COGS_ok`, SUM(CONVERT(`Budget Margin`, SQL_BIGINT)) AS `sum_Budget_Margin_ok` FROM Starbucks HAVING (COUNT(1) > 0)","columns":2,"rows":1}
{"id":"284","value":"SELECT `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok` FROM Starbucks GROUP BY `Market`, `Product Type`","columns":3,"rows":1}
{"id":"286","value":"SELECT `Product` AS `none_Product_nk`, SUM(CONVERT(`Budget COGS`, SQL_BIGINT)) AS `sum_Budget_COGS_ok`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok` FROM Starbucks GROUP BY `Product`","columns":3,"rows":1}
{"id":"287","value":"SELECT `Product Type` AS `none_Product_Type_nk`, `State` AS `none_State_nk`, SUM(CONVERT(`Budget COGS`, SQL_BIGINT)) AS `sum_Budget_COGS_ok`, SUM(CONVERT(`Budget Margin`, SQL_BIGINT)) AS `sum_Budget_Margin_ok` FROM Starbucks GROUP BY `Product Type`, `State`","columns":4,"rows":1}
{"id":"288","value":"SELECT `Market` AS `none_Market_nk`, SUM(CONVERT(`Margin`, SQL_BIGINT)) AS `sum_Margin_ok`, SUM(`Profit`) AS `sum_Profit_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY `Market`","columns":4,"rows":1}
{"id":"291","value":"SELECT `Date` AS `none_Date_ok`, SUM(CONVERT(`Additions`, SQL_BIGINT)) AS `sum_Additions_ok` FROM Starbucks GROUP BY `Date`","columns":2,"rows":1}
{"id":"292","value":"SELECT `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, `Product` AS `none_Product_nk`, `Type` AS `none_Type_nk`, SUM(CONVERT(`Budget COGS`, SQL_BIGINT)) AS `sum_Budget_COGS_ok` FROM Starbucks GROUP BY `Market`, `Product Type`, `Product`, `Type`","columns":5,"rows":1}
{"id":"293","value":"SELECT `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`Budget COGS`, SQL_BIGINT)) AS `sum_Budget_COGS_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY `Market`, `Product Type`","columns":4,"rows":1}
{"id":"294","value":"SELECT MONTH(`Date`) AS `mn_Date_ok`, `Type` AS `none_Type_nk`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY MONTH(`Date`), `Type`","columns":3,"rows":1}
{"id":"296","value":"SELECT `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`Margin`, SQL_BIGINT)) AS `sum_Margin_ok`, SUM(`Profit`) AS `sum_Profit_ok` FROM Starbucks GROUP BY `Market`, `Product Type`","columns":4,"rows":1}
{"id":"298","value":"SELECT MAX(`Market`) AS `max_Market_nk`, `Product` AS `none_Product_nk`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok` FROM Starbucks GROUP BY `Product`","columns":3,"rows":1}
{"id":"299","value":"SELECT COUNT(`Sales`) AS `cnt_Sales_ok`, MAX(`Sales`) AS `max_Sales_ok`, MIN(`Sales`) AS `min_Sales_ok`, `Market` AS `none_Market_nk`, (CASE WHEN COUNT(`Sales`) > 1 THEN SQRT((COUNT(`Sales`) * SUM(POWER(`Sales`,2)) - POWER(SUM(`Sales`), 2) ) / (COUNT(`Sales`)*(COUNT(`Sales`) - 1))) ELSE NULL END) AS `std_Sales_ok`, SUM(`Sales`) AS `sum_Sales_ok`, (CASE WHEN COUNT(`Sales`) > 1 THEN ((COUNT(`Sales`) * SUM(POWER(`Sales`,2)) - POWER(SUM(`Sales`), 2) ) / (COUNT(`Sales`)*(COUNT(`Sales`) - 1))) ELSE NULL END) AS `var_Sales_ok` FROM Starbucks GROUP BY `Market`","columns":7,"rows":1}
{"id":"302","value":"SELECT `Market Size` AS `none_Market_Size_nk`, `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, `Product` AS `none_Product_nk`, `State` AS `none_State_nk`, `Type` AS `none_Type_nk`, SUM(CONVERT(`Budget COGS`, SQL_BIGINT)) AS `sum_Budget_COGS_ok` FROM Starbucks GROUP BY `Market Size`, `Market`, `Product Type`, `Product`, `State`, `Type`","columns":7,"rows":1}
{"id":"304","value":"SELECT EXP(`Discount`) AS `sum_DISCOUNT_Test_ok` FROM Staples","columns":1,"rows":54860}
{"id":"307","value":"SELECT MAX(`date3`) AS `TEMP_z_max_dateD___EAFIDBBGB__A_`, MAX(CONVERT(`date3`, SQL_DOUBLE)) AS `max_float_dateD__ok`, `key` AS `none_key_nk` FROM Calcs GROUP BY `key`","columns":3,"rows":1}
{"id":"311","value":"SELECT `str2` AS `TEMP_z_max_strC___DFJIBAEFCD__A_`, `key` AS `none_key_nk`, `str2` AS `none_strC_nk`, LENGTH(`str2`) AS `sum_len_strC__ok` FROM Calcs","columns":4,"rows":17}
{"id":"317","value":"SELECT MAX(`str2`) AS `TEMP_z_max_strC___DFJIBAEFCD__A_`, MAX(LENGTH(`str2`)) AS `max_len_strC__ok` FROM Calcs HAVING (COUNT(1) > 0)","columns":2,"rows":1}
{"id":"321","value":"SELECT MIN(`str2`) AS `TEMP_z_min_strC___DJJCFEABJH__A_`, MIN(LENGTH(`str2`)) AS `min_len_strC__ok`, `key` AS `none_key_nk`, `str2` AS `none_strC_nk` FROM Calcs GROUP BY `key`, `str2`","columns":4,"rows":1}
{"id":"323","value":"SELECT `key` AS `none_key_nk`, `num4` AS `none_numE_nk`, LTRIM(CONVERT(`num4`, SQL_VARCHAR)) AS `none_z_str_num_nk` FROM Calcs","columns":3,"rows":17}
{"id":"324","value":"SELECT `date3` AS `none_dateD_nk`, `key` AS `none_key_nk`, CONVERT(`date3`, SQL_BIGINT) AS `sum_z_int_date_ok` FROM Calcs","columns":3,"rows":17}
{"id":"325","value":"SELECT `date3` AS `none_dateD_nk`, `key` AS `none_key_nk`, CONVERT(LTRIM(CONVERT(`date3`, SQL_VARCHAR)), SQL_TIMESTAMP) AS `none_z_date_str_ok` FROM Calcs","columns":3,"rows":17}
{"id":"326","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, LTRIM(CONVERT(WEEK(`datetime0`), SQL_VARCHAR)) AS `none_z_datename_week_nk` FROM Calcs","columns":3,"rows":17}
{"id":"327","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, MONTHNAME(`datetime0`) AS `none_z_datename_month_nk` FROM Calcs","columns":3,"rows":17}
{"id":"328","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, TIMESTAMPDIFF(SQL_TSI_MINUTE, '2004-07-04',`datetime0`) AS `sum_z_datediff_minute_ok` FROM Calcs","columns":3,"rows":17}
{"id":"329","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, DAYOFWEEK(`datetime0`) AS `sum_z_datepart_weekday_ok` FROM Calcs","columns":3,"rows":17}
{"id":"330","value":"SELECT `key` AS `none_key_nk`, TIMESTAMPDIFF(SQL_TSI_YEAR,CURRENT_TIMESTAMP(0),CURRENT_TIMESTAMP(0)) AS `sum_z_now_ok` FROM Calcs","columns":2,"rows":17}
{"id":"331","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, TIMESTAMPDIFF(SQL_TSI_QUARTER, '2004-07-04',`datetime0`) AS `sum_z_datediff_quarter_ok` FROM Calcs","columns":3,"rows":17}
{"id":"332","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, DAYNAME(`datetime0`) AS `none_z_datename_weekday_nk` FROM Calcs","columns":3,"rows":17}
{"id":"333","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, TIMESTAMPDIFF(SQL_TSI_SECOND, '2004-07-04',`datetime0`) AS `sum_z_datediff_second_ok` FROM Calcs","columns":3,"rows":17}
{"id":"334","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, TIMESTAMPADD(SQL_TSI_MONTH,FLOOR((3 * (FLOOR(QUARTER(`datetime0`)) - 1))),TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`datetime0`) - 1)),CONVERT(`datetime0`, SQL_DATE))) AS `none_z_datetrunc_quarter_ok` FROM Calcs","columns":3,"rows":17}
{"id":"335","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, MONTH(`datetime0`) AS `none_z_month_ok`, MONTH(`datetime0`) AS `sum_z_datepart_month_ok` FROM Calcs","columns":4,"rows":17}
{"id":"336","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, LTRIM(CONVERT(DAYOFYEAR(`datetime0`), SQL_VARCHAR)) AS `none_z_datename_dayofyear_nk` FROM Calcs","columns":3,"rows":17}
{"id":"337","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, QUARTER(`datetime0`) AS `sum_z_datepart_quarter_ok` FROM Calcs","columns":3,"rows":17}
{"id":"338","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, TIMESTAMPDIFF(SQL_TSI_WEEK, '2004-07-04',`datetime0`) AS `sum_z_datediff_week_ok` FROM Calcs","columns":3,"rows":17}
{"id":"339","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, (CASE WHEN (MONTHNAME(`datetime0`) = 'August') THEN 1 WHEN NOT (MONTHNAME(`datetime0`) = 'August') THEN 0 ELSE NULL END) AS `none_z_datename_month_august_nk` FROM Calcs","columns":3,"rows":17}
{"id":"340","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, TIMESTAMPADD(SQL_TSI_SECOND,SECOND(`datetime0`),TIMESTAMPADD(SQL_TSI_MINUTE,MINUTE(`datetime0`),TIMESTAMPADD(SQL_TSI_HOUR,HOUR(`datetime0`),CONVERT(`datetime0`, SQL_DATE)))) AS `none_z_datetrunc_second_ok` FROM Calcs","columns":3,"rows":17}
{"id":"341","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, TIMESTAMPDIFF(SQL_TSI_DAY, '2004-07-04',`datetime0`) AS `sum_z_datediff_weekday_ok` FROM Calcs","columns":3,"rows":17}
{"id":"342","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, TIMESTAMPADD(SQL_TSI_MINUTE,MINUTE(`datetime0`),TIMESTAMPADD(SQL_TSI_HOUR,HOUR(`datetime0`),CONVERT(`datetime0`, SQL_DATE))) AS `none_z_datetrunc_minute_ok` FROM Calcs","columns":3,"rows":17}
{"id":"343","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFMONTH(`datetime0`) - 1)),CONVERT(`datetime0`, SQL_DATE)) AS `none_z_datetrunc_month_ok`, MONTH(`datetime0`) AS `none_z_month_ok` FROM Calcs","columns":4,"rows":17}
{"id":"344","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, LTRIM(CONVERT(MINUTE(CONVERT(`datetime0`, SQL_TIMESTAMP)), SQL_VARCHAR)) AS `none_z_datename_minute_nk` FROM Calcs","columns":3,"rows":17}
{"id":"345","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, TIMESTAMPDIFF(SQL_TSI_DAY, '2004-07-04',`datetime0`) AS `sum_z_datediff_day_ok` FROM Calcs","columns":3,"rows":17}
{"id":"346","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, CONVERT(`datetime0`, SQL_DATE) AS `none_z_datetrunc_dayofyear_ok` FROM Calcs","columns":3,"rows":17}
{"id":"347","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, LTRIM(CONVERT(HOUR(CONVERT(`datetime0`, SQL_TIMESTAMP)), SQL_VARCHAR)) AS `none_z_datename_hour_nk` FROM Calcs","columns":3,"rows":17}
{"id":"350","value":"SELECT `key` AS `none_key_nk`, LCASE(`str0`) AS `none_lower_strA__nk`, `str2` AS `none_strC_nk`, (CASE \tWHEN (LCASE(`str0`) IS NULL) OR (`str2` IS NULL) THEN NULL \tWHEN LCASE(`str0`) < `str2` THEN LCASE(`str0`) \tELSE `str2` END) AS `none_z_min_str_str_nk` FROM Calcs","columns":4,"rows":17}
{"id":"352","value":"SELECT `key` AS `none_key_nk`, LCASE(`str0`) AS `none_lower_strA__nk`, `str2` AS `none_strC_nk`, (CASE \tWHEN (LCASE(`str0`) IS NULL) OR (`str2` IS NULL) THEN NULL \tWHEN LCASE(`str0`) > `str2` THEN LCASE(`str0`) \tELSE `str2` END) AS `none_z_max_str_str_nk` FROM Calcs","columns":4,"rows":17}
{"id":"359","value":"SELECT `key` AS `none_key_nk`, `str2` AS `none_strC_nk`, `str3` AS `none_strD_nk`, CONCAT(`str2`, `str3`) AS `none_z_str_plus_str_nk` FROM Calcs","columns":4,"rows":17}
{"id":"360","value":"SELECT `key` AS `none_key_nk`, `str0` AS `none_strA_nk`, `str2` AS `none_strC_nk`, `str3` AS `none_strD_nk`, (CASE WHEN (`str2` >= (CASE WHEN (`num3` > 0) THEN LCASE(`str0`) WHEN NOT (`num3` > 0) THEN `str3` ELSE NULL END)) THEN 1 WHEN NOT (`str2` >= (CASE WHEN (`num3` > 0) THEN LCASE(`str0`) WHEN NOT (`num3` > 0) THEN `str3` ELSE NULL END)) THEN 0 ELSE NULL END) AS `none_z_str_ge_str_nk`, `num3` AS `sum_numD_ok` FROM Calcs","columns":6,"rows":17}
{"id":"363","value":"SELECT `date0` AS `none_dateA_ok`, `key` AS `none_key_nk`, `num4` AS `none_numE_nk`, CONCAT(`date0`, `num4`) AS `none_z_date_plus_num_ok` FROM Calcs","columns":4,"rows":17}
{"id":"364","value":"SELECT `key` AS `none_key_nk`, `str0` AS `none_strA_nk`, `str2` AS `none_strC_nk`, `str3` AS `none_strD_nk`, (CASE WHEN (`str2` <= (CASE WHEN (`num3` > 0) THEN LCASE(`str0`) WHEN NOT (`num3` > 0) THEN `str3` ELSE NULL END)) THEN 1 WHEN NOT (`str2` <= (CASE WHEN (`num3` > 0) THEN LCASE(`str0`) WHEN NOT (`num3` > 0) THEN `str3` ELSE NULL END)) THEN 0 ELSE NULL END) AS `none_z_str_le_str_nk`, `num3` AS `sum_numD_ok` FROM Calcs","columns":6,"rows":17}
{"id":"369","value":"SELECT `key` AS `none_key_nk`, `str2` AS `none_strC_nk`, UCASE(`str2`) AS `none_z_upper_str_nk` FROM Calcs","columns":3,"rows":17}
{"id":"372","value":"SELECT `key` AS `none_key_nk`, `str1` AS `none_strB_nk`, (CASE \tWHEN (6 IS NULL) THEN NULL \tWHEN 6 < 1 THEN LOCATE('E',`str1`,1) \tELSE LOCATE('E',`str1`,6) \tEND) AS `sum_z_find_str_str_num_ok` FROM Calcs","columns":3,"rows":17}
{"id":"373","value":"SELECT `key` AS `none_key_nk`, `str1` AS `none_strB_nk`, LOCATE('E',`str1`,1) AS `sum_z_find_str_str_ok` FROM Calcs","columns":3,"rows":17}
{"id":"374","value":"SELECT `key` AS `none_key_nk`, `str2` AS `none_strC_nk`, ASCII(`str2`) AS `sum_z_ascii_str_ok` FROM Calcs","columns":3,"rows":17}
{"id":"375","value":"SELECT `key` AS `none_key_nk`, `str2` AS `none_strC_nk`, CASE WHEN 3 >= 0 THEN SUBSTRING(`str2`,LENGTH(`str2`) - 3 + 1,3) ELSE NULL END AS `none_z_right_str_num_nk` FROM Calcs","columns":3,"rows":17}
{"id":"376","value":"SELECT `key` AS `none_key_nk`, CONCAT(CONCAT('  ', `str2`), '  ') AS `none_padded_strC_nk`, CONCAT(CONCAT('x', LTRIM(CONCAT(CONCAT('  ', `str2`), '  '))), 'x') AS `none_z_ltrim_str_nk` FROM Calcs","columns":3,"rows":17}
{"id":"378","value":"SELECT `key` AS `none_key_nk`, `str2` AS `none_strC_nk`, `str3` AS `none_strD_nk`, LOCATE(`str3`,`str2`,1) AS `sum_z_find_str_strC_ok` FROM Calcs","columns":4,"rows":17}
{"id":"379","value":"SELECT `key` AS `none_key_nk`, CONCAT(CONCAT('  ', `str2`), '  ') AS `none_padded_strC_nk`, CONCAT(CONCAT('|', RTRIM(CONCAT(CONCAT('  ', `str2`), '  '))), '|') AS `none_z_rtrim_str_nk` FROM Calcs","columns":3,"rows":17}
{"id":"380","value":"SELECT `key` AS `none_key_nk`, `str2` AS `none_strC_nk`, CASE WHEN 3 >= 0 THEN SUBSTRING(`str2`,1,3) ELSE NULL END AS `none_z_left_str_num_nk` FROM Calcs","columns":3,"rows":17}
{"id":"381","value":"SELECT `Market` AS `Market`, `Market` AS `none_Market_nk`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok` FROM Starbucks GROUP BY `Market`, `Market`","columns":3,"rows":1}
{"id":"383","value":"SELECT `Market Size` AS `Market_Size`, `Product Type` AS `Product_Type`, `Type` AS `Type`, SUM(CONVERT(`Budget Profit`, SQL_BIGINT)) AS `sum_Budget_Profit_ok` FROM Starbucks WHERE (((`Market Size` IN ('Major Market', 'Small Market')) AND (`Product Type` NOT IN ('Coffee', 'Herbal Tea'))) AND (((`Market Size` = 'Major Market') AND (((`Type` = 'Decaf') AND (`Product Type` IN ('Espresso', 'Smoothie'))) OR ((`Type` = 'Regular') AND (`Product Type` IN ('Espresso', 'Tea'))))) AND ((`Market Size` = 'Major Market') AND ((`Product Type` = 'Espresso') AND (`Type` IN ('Decaf', 'Regular')))))) GROUP BY `Market Size`, `Product Type`, `Type`","columns":4,"rows":0}
{"id":"389","value":"SELECT SUM(CONVERT((((((((((FLOOR((POWER(CONVERT(2, SQL_DOUBLE),31) - 1)) + FLOOR((POWER(CONVERT(2, SQL_DOUBLE),31) - 1))) + FLOOR((POWER(CONVERT(2, SQL_DOUBLE),31) - 1))) + FLOOR((POWER(CONVERT(2, SQL_DOUBLE),31) - 1))) + FLOOR((POWER(CONVERT(2, SQL_DOUBLE),31) - 1))) + FLOOR((POWER(CONVERT(2, SQL_DOUBLE),31) - 1))) + FLOOR((POWER(CONVERT(2, SQL_DOUBLE),31) - 1))) + FLOOR((POWER(CONVERT(2, SQL_DOUBLE),31) - 1))) + FLOOR((POWER(CONVERT(2, SQL_DOUBLE),31) - 1))) + FLOOR((POWER(CONVERT(2, SQL_DOUBLE),31) - 1))), SQL_BIGINT)) AS `sum_maxint_sum_ok` FROM Calcs HAVING (COUNT(1) > 0)","columns":1,"rows":1}
{"id":"390","value":"SELECT TIMESTAMPADD(SQL_TSI_DAY,(10 * 365), '2004-07-04') AS `z_dateadd_day`, TIMESTAMPADD(SQL_TSI_DAY,(10 * 365), '2004-07-04') AS `z_dateadd_dayofyear`, TIMESTAMPADD(SQL_TSI_HOUR,((10 * 365) * 24), '2004-07-04') AS `z_dateadd_hour`, TIMESTAMPADD(SQL_TSI_MINUTE,(((10 * 365) * 24) * 60), '2004-07-04') AS `z_dateadd_minute`, TIMESTAMPADD(SQL_TSI_MONTH,(10 * 12), '2004-07-04') AS `z_dateadd_month`, TIMESTAMPADD(SQL_TSI_QUARTER,(10 * 4), '2004-07-04') AS `z_dateadd_quarter`, TIMESTAMPADD(SQL_TSI_SECOND,((((10 * 365) * 24) * 60) * 60), '2004-07-04') AS `z_dateadd_second`, TIMESTAMPADD(SQL_TSI_WEEK,(10 * 52), '2004-07-04') AS `z_dateadd_week`, TIMESTAMPADD(SQL_TSI_DAY,(10 * 365), '2004-07-04') AS `z_dateadd_weekday`, TIMESTAMPADD(SQL_TSI_YEAR,10, '2004-07-04') AS `z_dateadd_year`, TIMESTAMPADD(SQL_TSI_DAY,(10 * 365),'2004-07-04 12:01:01') AS `z_datetimeadd_day`, TIMESTAMPADD(SQL_TSI_DAY,(10 * 365),'2004-07-04 12:01:01') AS `z_datetimeadd_dayofyear`, TIMESTAMPADD(SQL_TSI_HOUR,((10 * 365) * 24),'2004-07-04 12:01:01') AS `z_datetimeadd_hour`, TIMESTAMPADD(SQL_TSI_MINUTE,(((10 * 365) * 24) * 60),'2004-07-04 12:01:01') AS `z_datetimeadd_minute`, TIMESTAMPADD(SQL_TSI_MONTH,(10 * 12),'2004-07-04 12:01:01') AS `z_datetimeadd_month`, TIMESTAMPADD(SQL_TSI_QUARTER,(10 * 4),'2004-07-04 12:01:01') AS `z_datetimeadd_quarter`, TIMESTAMPADD(SQL_TSI_SECOND,((((10 * 365) * 24) * 60) * 60),'2004-07-04 12:01:01') AS `z_datetimeadd_second`, TIMESTAMPADD(SQL_TSI_WEEK,(10 * 52),'2004-07-04 12:01:01') AS `z_datetimeadd_week`, TIMESTAMPADD(SQL_TSI_DAY,(10 * 365),'2004-07-04 12:01:01') AS `z_datetimeadd_weekday`, TIMESTAMPADD(SQL_TSI_YEAR,10,'2004-07-04 12:01:01') AS `z_datetimeadd_year` FROM Calcs HAVING (COUNT(1) > 0)","columns":20,"rows":1}
{"id":"404","value":"SELECT QUARTER(`Date`) AS `qr_Date_ok` FROM Starbucks WHERE (QUARTER(`Date`) IS NULL) LIMIT 1","columns":1,"rows":1}
{"id":"416","value":"SELECT `Market` AS `none_Market_nk`, `Product` AS `none_Product_nk`, SUM(CONVERT(`Marketing`, SQL_BIGINT)) AS `sum_Marketing_ok`, SUM(CONVERT((-ABS(`Margin`)), SQL_BIGINT)) AS `sum_Negative_Margin_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY `Market`, `Product`","columns":5,"rows":1}
{"id":"417","value":"SELECT FLOOR(`Profit` / 300) AS `Profit__bin_`, SUM(CONVERT(`Marketing`, SQL_BIGINT)) AS `sum_Marketing_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY FLOOR(`Profit` / 300)","columns":3,"rows":1}
{"id":"418","value":"SELECT `MONTH` AS `MONTH`, `YEAR` AS `YEAR`, `PRECINCT` AS `none_PRECINCT_nk`, `YEAR` AS `none_YEAR_ok`, SUM(CONVERT(`THEFT`, SQL_BIGINT)) AS `sum_THEFT_ok` FROM SeattleCrime GROUP BY `MONTH`, `YEAR`, `PRECINCT`, `YEAR`","columns":5,"rows":1}
{"id":"419","value":"SELECT `State` AS `none_State_nk`, SUM(CONVERT(`Budget Profit`, SQL_BIGINT)) AS `sum_Budget_Profit_ok` FROM Starbucks GROUP BY `State`","columns":2,"rows":1}
{"id":"420","value":"SELECT LTRIM(CONVERT(FLOOR((6 + DAYOFYEAR(`Order Date`) + (MOD((7 + DAYOFWEEK(TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE))) - 2 ), 7))) / 7), SQL_VARCHAR)) AS `none_Calculation_FHDAJCHBICIBGFIG_nk`, FLOOR((6 + DAYOFYEAR(`Order Date`) + (MOD((7 + DAYOFWEEK(TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE))) - 2 ), 7))) / 7) AS `none_Calculation_GCCAJCHBICJAHAFA_ok`, TIMESTAMPADD(SQL_TSI_DAY,-((MOD((7 + DAYOFWEEK(`Order Date`) - 2), 7))),CONVERT(`Order Date`, SQL_DATE)) AS `none_Calculation_HEGAJCHBIDCAIFEJ_ok`, FLOOR(TIMESTAMPDIFF(SQL_TSI_DAY,TIMESTAMPADD(SQL_TSI_DAY,-((MOD((7 + DAYOFWEEK( '2000-12-31') - 2), 7))),CONVERT( '2000-12-31', SQL_DATE)),TIMESTAMPADD(SQL_TSI_DAY,-((MOD((7 + DAYOFWEEK(`Order Date`) - 2), 7))),CONVERT(`Order Date`, SQL_DATE))) / 7) AS `none_Calculation_JIGAJCHBIDAAHEFF_ok` FROM Staples WHERE ((`Order Date` >=  '2001-01-01') AND (`Order Date` <=  '2001-02-25')) GROUP BY LTRIM(CONVERT(FLOOR((6 + DAYOFYEAR(`Order Date`) + (MOD((7 + DAYOFWEEK(TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE))) - 2 ), 7))) / 7), SQL_VARCHAR)), FLOOR((6 + DAYOFYEAR(`Order Date`) + (MOD((7 + DAYOFWEEK(TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE))) - 2 ), 7))) / 7), TIMESTAMPADD(SQL_TSI_DAY,-((MOD((7 + DAYOFWEEK(`Order Date`) - 2), 7))),CONVERT(`Order Date`, SQL_DATE)), FLOOR(TIMESTAMPDIFF(SQL_TSI_DAY,TIMESTAMPADD(SQL_TSI_DAY,-((MOD((7 + DAYOFWEEK( '2000-12-31') - 2), 7))),CONVERT( '2000-12-31', SQL_DATE)),TIMESTAMPADD(SQL_TSI_DAY,-((MOD((7 + DAYOFWEEK(`Order Date`) - 2), 7))),CONVERT(`Order Date`, SQL_DATE))) / 7)","columns":4,"rows":0}
{"id":"431","value":"SELECT WEEK(`Ship Date`) AS `none_DATEPART__week__Ship_Date__ok`, TIMESTAMPADD(SQL_TSI_DAY,-(DAYOFWEEK(`Ship Date`) - 1),CONVERT(`Ship Date`, SQL_DATE)) AS `none_DATETRUNC__week__Ship_Date__ok`, `Ship Date` AS `none_Ship_Date_ok`, DAYOFWEEK(`Ship Date`) AS `wd_Ship_Date_ok` FROM Staples WHERE ((`Ship Date` >=  '2000-12-18') AND (`Ship Date` <=  '2001-01-12')) GROUP BY WEEK(`Ship Date`), TIMESTAMPADD(SQL_TSI_DAY,-(DAYOFWEEK(`Ship Date`) - 1),CONVERT(`Ship Date`, SQL_DATE)), `Ship Date`, DAYOFWEEK(`Ship Date`)","columns":4,"rows":0}
{"id":"432","value":"SELECT `Order Priority` AS `none_Order_Priority_nk` FROM Staples WHERE ((CONVERT(`Order Date`, SQL_TIMESTAMP) IN ('1997-01-01 00:00:00', '1997-01-03 00:00:00')) AND (`Order Date` IN ( '1997-01-01',  '1997-01-03'))) GROUP BY `Order Priority`","columns":1,"rows":0}
{"id":"434","value":"SELECT SUM(`Sales Total`) AS `sum_Sales_Total_ok`, FLOOR((CASE WHEN 7 = 0 THEN NULL ELSE (((MOD(((7 + DAYOFWEEK(TIMESTAMPADD(SQL_TSI_MONTH,(1 - (CASE WHEN (MONTH(`Order Date`) < 2) THEN 12 ELSE 0 END)),TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE))))) - 2), 7)) + 7) + (TIMESTAMPDIFF(SQL_TSI_DAY,TIMESTAMPADD(SQL_TSI_MONTH,(1 - (CASE WHEN (MONTH(`Order Date`) < 2) THEN 12 ELSE 0 END)),TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE))),`Order Date`) + (HOUR(`Order Date`) - HOUR(TIMESTAMPADD(SQL_TSI_MONTH,(1 - (CASE WHEN (MONTH(`Order Date`) < 2) THEN 12 ELSE 0 END)),TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE)))) + (MINUTE(`Order Date`) - MINUTE(TIMESTAMPADD(SQL_TSI_MONTH,(1 - (CASE WHEN (MONTH(`Order Date`) < 2) THEN 12 ELSE 0 END)),TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE)))) + (SECOND(`Order Date`) - SECOND(TIMESTAMPADD(SQL_TSI_MONTH,(1 - (CASE WHEN (MONTH(`Order Date`) < 2) THEN 12 ELSE 0 END)),TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE))))) / 60.0) / 60.0) / 24.0)) / 7 END)) AS `wk_Order_Date__copy__ok` FROM Staples WHERE (FLOOR((CASE WHEN 7 = 0 THEN NULL ELSE (((MOD(((7 + DAYOFWEEK(TIMESTAMPADD(SQL_TSI_MONTH,(1 - (CASE WHEN (MONTH(`Order Date`) < 2) THEN 12 ELSE 0 END)),TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE))))) - 2), 7)) + 7) + (TIMESTAMPDIFF(SQL_TSI_DAY,TIMESTAMPADD(SQL_TSI_MONTH,(1 - (CASE WHEN (MONTH(`Order Date`) < 2) THEN 12 ELSE 0 END)),TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE))),`Order Date`) + (HOUR(`Order Date`) - HOUR(TIMESTAMPADD(SQL_TSI_MONTH,(1 - (CASE WHEN (MONTH(`Order Date`) < 2) THEN 12 ELSE 0 END)),TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE)))) + (MINUTE(`Order Date`) - MINUTE(TIMESTAMPADD(SQL_TSI_MONTH,(1 - (CASE WHEN (MONTH(`Order Date`) < 2) THEN 12 ELSE 0 END)),TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE)))) + (SECOND(`Order Date`) - SECOND(TIMESTAMPADD(SQL_TSI_MONTH,(1 - (CASE WHEN (MONTH(`Order Date`) < 2) THEN 12 ELSE 0 END)),TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE))))) / 60.0) / 60.0) / 24.0)) / 7 END)) IN (1, 2, 3, 4, 5, 6, 7, 8)) GROUP BY FLOOR((CASE WHEN 7 = 0 THEN NULL ELSE (((MOD(((7 + DAYOFWEEK(TIMESTAMPADD(SQL_TSI_MONTH,(1 - (CASE WHEN (MONTH(`Order Date`) < 2) THEN 12 ELSE 0 END)),TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE))))) - 2), 7)) + 7) + (TIMESTAMPDIFF(SQL_TSI_DAY,TIMESTAMPADD(SQL_TSI_MONTH,(1 - (CASE WHEN (MONTH(`Order Date`) < 2) THEN 12 ELSE 0 END)),TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE))),`Order Date`) + (HOUR(`Order Date`) - HOUR(TIMESTAMPADD(SQL_TSI_MONTH,(1 - (CASE WHEN (MONTH(`Order Date`) < 2) THEN 12 ELSE 0 END)),TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE)))) + (MINUTE(`Order Date`) - MINUTE(TIMESTAMPADD(SQL_TSI_MONTH,(1 - (CASE WHEN (MONTH(`Order Date`) < 2) THEN 12 ELSE 0 END)),TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE)))) + (SECOND(`Order Date`) - SECOND(TIMESTAMPADD(SQL_TSI_MONTH,(1 - (CASE WHEN (MONTH(`Order Date`) < 2) THEN 12 ELSE 0 END)),TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE))))) / 60.0) / 60.0) / 24.0)) / 7 END))","columns":2,"rows":0}
{"id":"435","value":"SELECT SUM(`Sales Total`) AS `sum_Sales_Total_ok`, FLOOR((6 + DAYOFYEAR(`Order Date`) + (MOD((7 + DAYOFWEEK(TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE))) - 2 ), 7))) / 7) AS `wk_Order_Date_ok` FROM Staples GROUP BY FLOOR((6 + DAYOFYEAR(`Order Date`) + (MOD((7 + DAYOFWEEK(TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE))) - 2 ), 7))) / 7)","columns":2,"rows":1}
{"id":"438","value":"SELECT COUNT(`Customer Balance`) AS `cnt_Customer_Balance_ok`, `Call Center Region` AS `none_Call_Center_Region_nk`, (CASE WHEN COUNT(`Customer Balance`) > 1 THEN SQRT((COUNT(`Customer Balance`) * SUM(POWER(`Customer Balance`,2)) - POWER(SUM(`Customer Balance`), 2) ) / (COUNT(`Customer Balance`)*(COUNT(`Customer Balance`) - 1))) ELSE NULL END) AS `std_Customer_Balance_ok`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok`, SUM(CONVERT((`Customer Balance` * `Customer Balance`), SQL_BIGINT)) AS `xsq_Customer_Balance_ok` FROM Staples GROUP BY `Call Center Region`","columns":5,"rows":1}
{"id":"442","value":"SELECT MONTH(`Date`) AS `mn_Date_ok`, `Market` AS `none_Market_nk`, `Type` AS `none_Type_nk`, SUM(CONVERT(`Inventory`, SQL_BIGINT)) AS `sum_Inventory_ok` FROM Starbucks WHERE (MONTH(`Date`) IN (1, 2, 3, 4, 5, 8, 9, 10, 11, 12)) GROUP BY MONTH(`Date`), `Market`, `Type`","columns":4,"rows":0}
{"id":"447","value":"SELECT SUM(`Sales`) AS `TEMP_TC___DABICEAGEJ__A_`, `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`Additions`, SQL_BIGINT)) AS `sum_Additions_ok` FROM Starbucks GROUP BY `Market`, `Product Type`","columns":4,"rows":1}
{"id":"448","value":"SELECT `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`Additions`, SQL_BIGINT)) AS `sum_Additions_ok` FROM Starbucks GROUP BY `Market`, `Product Type`","columns":3,"rows":1}
{"id":"449","value":"SELECT `Product Type` AS `none_Product_Type_nk`, `State` AS `none_State_nk`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY `Product Type`, `State`","columns":4,"rows":1}
{"id":"451","value":"SELECT `Market` AS `none_Market_nk`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok`, SUM(CONVERT(`Item Count`, SQL_BIGINT)) AS `sum_Item_Count_ok` FROM Starbucks GROUP BY `Market`","columns":3,"rows":1}
{"id":"456","value":"SELECT MIN(1) AS `min_Number_of_Records_ok`, `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`Budget Profit`, SQL_BIGINT)) AS `sum_Budget_Profit_ok` FROM Starbucks WHERE (`Market` = 'Central') GROUP BY `Market`, `Product Type`","columns":4,"rows":0}
{"id":"457","value":"SELECT `Product` AS `none_Product_nk`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok`, SUM(`Profit`) AS `sum_Profit_ok` FROM Starbucks GROUP BY `Product`","columns":3,"rows":1}
{"id":"459","value":"SELECT `State` AS `none_State_nk`, SUM(CONVERT(`Marketing`, SQL_BIGINT)) AS `sum_Marketing_ok`, SUM(`Profit`) AS `sum_Profit_ok` FROM Starbucks GROUP BY `State`","columns":3,"rows":1}
{"id":"460","value":"SELECT MIN(1) AS `min_Number_of_Records_ok`, `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`Budget Profit`, SQL_BIGINT)) AS `sum_Budget_Profit_ok` FROM Starbucks WHERE (`Market` = 'Central') GROUP BY `Market`, `Product Type`","columns":4,"rows":0}
{"id":"461","value":"SELECT `Market` AS `none_Market_nk`, `Product` AS `none_Product_nk`, `State` AS `none_State_nk`, SUM(CONVERT(`Budget Profit`, SQL_BIGINT)) AS `sum_Budget_Profit_ok` FROM Starbucks GROUP BY `Market`, `Product`, `State`","columns":4,"rows":1}
{"id":"462","value":"SELECT `Date` AS `none_Date_ok`, `Market` AS `none_Market_nk`, SUM(CONVERT(`Inventory`, SQL_BIGINT)) AS `sum_Inventory_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY `Date`, `Market`","columns":4,"rows":1}
{"id":"463","value":"SELECT `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok`, SUM(`Profit`) AS `sum_Profit_ok` FROM Starbucks WHERE (`Profit` <= 0) GROUP BY `Product Type`","columns":3,"rows":1}
{"id":"465","value":"SELECT MIN(1) AS `min_Number_of_Records_ok`, `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`Budget Profit`, SQL_BIGINT)) AS `sum_Budget_Profit_ok` FROM Starbucks WHERE (`Market` = 'Central') GROUP BY `Market`, `Product Type`","columns":4,"rows":0}
{"id":"466","value":"SELECT `Type` AS `none_Type_nk`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok` FROM Starbucks GROUP BY `Type`","columns":2,"rows":1}
{"id":"467","value":"SELECT `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, `Product` AS `none_Product_nk`, SUM(`Profit`) AS `sum_Profit_ok` FROM Starbucks WHERE (QUARTER(`Date`) <= 2) GROUP BY `Market`, `Product Type`, `Product`","columns":4,"rows":0}
{"id":"472","value":"SELECT AVG(CONVERT(`Inventory`, SQL_DOUBLE)) AS `avg_Inventory_ok`, COUNT(`Inventory`) AS `cnt_Inventory_ok`, MONTH(`Date`) AS `mn_Date_ok`, `Type` AS `none_Type_nk`, SUM(CONVERT(`Inventory`, SQL_BIGINT)) AS `sum_Inventory_ok` FROM Starbucks GROUP BY MONTH(`Date`), `Type`","columns":5,"rows":1}
{"id":"473","value":"SELECT MIN(1) AS `min_Number_of_Records_ok`, `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`Budget Profit`, SQL_BIGINT)) AS `sum_Budget_Profit_ok` FROM Starbucks WHERE (`Market` = 'Central') GROUP BY `Market`, `Product Type`","columns":4,"rows":0}
{"id":"478","value":"SELECT `State` AS `none_State_nk`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok`, SUM(`Profit`) AS `sum_Profit_ok` FROM Starbucks GROUP BY `State`","columns":3,"rows":1}
{"id":"484","value":"SELECT `Market` AS `none_Market_nk`, `State` AS `none_State_nk`, SUM(CONVERT(`Budget Sales`, SQL_BIGINT)) AS `sum_Budget_Sales_ok`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok`, SUM(CONVERT(`Margin`, SQL_BIGINT)) AS `sum_Margin_ok` FROM Starbucks GROUP BY `Market`, `State`","columns":5,"rows":1}
{"id":"490","value":"SELECT `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`Budget Profit`, SQL_BIGINT)) AS `sum_Budget_Profit_ok`, SUM(`Profit`) AS `sum_Profit_ok` FROM Starbucks WHERE (`Market` IN ('East', 'South')) GROUP BY `Market`, `Product Type`","columns":4,"rows":0}
{"id":"500","value":"SELECT `Market` AS `none_Market_nk`, QUARTER(`Date`) AS `qr_Date_ok` FROM Starbucks GROUP BY `Market`, QUARTER(`Date`)","columns":2,"rows":1}
{"id":"501","value":"SELECT MONTH(`Date`) AS `mn_Date_ok`, `Market Size` AS `none_Market_Size_nk`, SUM(CONVERT(`Budget Profit`, SQL_BIGINT)) AS `sum_Budget_Profit_ok`, SUM(CONVERT(`Budget Sales`, SQL_BIGINT)) AS `sum_Budget_Sales_ok`, SUM(`Profit`) AS `sum_Profit_ok` FROM Starbucks GROUP BY MONTH(`Date`), `Market Size`","columns":5,"rows":1}
{"id":"502","value":"SELECT MONTH(`Date`) AS `mn_Date_ok`, `Market Size` AS `none_Market_Size_nk`, `Market` AS `none_Market_nk`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY MONTH(`Date`), `Market Size`, `Market`","columns":4,"rows":1}
{"id":"506","value":"SELECT AVG(CONVERT((CASE WHEN (`Product` = 'Amaretto') THEN 1 WHEN (`Product` = 'Caffe Latte') THEN NULL WHEN (`Product` = 'Caffe Mocha') THEN 2 WHEN (`Product` = 'Chamomile') THEN 2 WHEN (`Product` = 'Columbian') THEN NULL WHEN (`Product` = 'Darjeeling') THEN 1 WHEN (`Product` = 'Decaf Espresso') THEN 2 WHEN (`Product` = 'Decaf Irish Cream') THEN 2 WHEN (`Product` = 'Earl Grey') THEN 1 ELSE NULL END), SQL_DOUBLE)) AS `avg_XC__copy__ok`, AVG(CONVERT((CASE WHEN (`Product` = 'Amaretto') THEN 1 WHEN (`Product` = 'Caffe Latte') THEN 2 WHEN (`Product` = 'Caffe Mocha') THEN 3 WHEN (`Product` = 'Chamomile') THEN 3 WHEN (`Product` = 'Columbian') THEN 4 WHEN (`Product` = 'Darjeeling') THEN 5 WHEN (`Product` = 'Decaf Espresso') THEN 6 WHEN (`Product` = 'Decaf Irish Cream') THEN 6 WHEN (`Product` = 'Earl Grey') THEN 7 ELSE NULL END), SQL_DOUBLE)) AS `avg_X__copy__ok`, `Product` AS `none_Product_nk` FROM Starbucks WHERE ((`Product` >= 'Amaretto') AND (`Product` <= 'Earl Grey')) GROUP BY `Product`","columns":3,"rows":0}
{"id":"511","value":"SELECT `Market` AS `none_Market_nk`, SUM(CONVERT(`Misc`, SQL_BIGINT)) AS `sum_Misc_ok`, SUM(`Profit`) AS `sum_Profit_ok` FROM Starbucks GROUP BY `Market`","columns":3,"rows":1}
{"id":"512","value":"SELECT `Market` AS `none_Market_nk`, SUM(CONVERT(`Budget Margin`, SQL_BIGINT)) AS `sum_Budget_Margin_ok` FROM Starbucks WHERE (NOT (LOCATE('We',`Market`,1) > 0)) GROUP BY `Market`","columns":2,"rows":1}
{"id":"515","value":"SELECT COUNT(1) AS `cnt_Number_of_Records_ok`, `Market` AS `none_Market_nk`, `State` AS `none_State_nk`, SUM(CONVERT(`Additions`, SQL_BIGINT)) AS `sum_Additions_ok`, SUM(CONVERT(`Budget Additions`, SQL_BIGINT)) AS `sum_Budget_Additions_ok` FROM Starbucks GROUP BY `Market`, `State`","columns":5,"rows":1}
{"id":"519","value":"SELECT `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`Inventory`, SQL_BIGINT)) AS `sum_Inventory_ok` FROM Starbucks GROUP BY `Market`, `Product Type`","columns":3,"rows":1}
{"id":"520","value":"SELECT SUM(CONVERT(`Additions`, SQL_BIGINT)) AS `sum_Additions_ok`, SUM(CONVERT(`Budget Additions`, SQL_BIGINT)) AS `sum_Budget_Additions_ok`, SUM(CONVERT(`Budget COGS`, SQL_BIGINT)) AS `sum_Budget_COGS_ok`, SUM(CONVERT(`Budget Margin`, SQL_BIGINT)) AS `sum_Budget_Margin_ok`, SUM(CONVERT(`Budget Payroll`, SQL_BIGINT)) AS `sum_Budget_Payroll_ok`, SUM(CONVERT(`Budget Profit`, SQL_BIGINT)) AS `sum_Budget_Profit_ok`, SUM(CONVERT(`Budget Sales`, SQL_BIGINT)) AS `sum_Budget_Sales_ok`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok`, SUM(CONVERT(`Ending`, SQL_BIGINT)) AS `sum_Ending_ok`, SUM(CONVERT(`Inventory`, SQL_BIGINT)) AS `sum_Inventory_ok`, SUM(CONVERT(`Item Count`, SQL_BIGINT)) AS `sum_Item_Count_ok`, SUM(`Margin Rate`) AS `sum_Margin_Rate_ok`, SUM(CONVERT(`Margin`, SQL_BIGINT)) AS `sum_Margin_ok`, SUM(CONVERT(`Marketing`, SQL_BIGINT)) AS `sum_Marketing_ok`, SUM(CONVERT(`Misc`, SQL_BIGINT)) AS `sum_Misc_ok`, SUM(CONVERT(1, SQL_BIGINT)) AS `sum_Number_of_Records_ok`, SUM(CONVERT(`Opening`, SQL_BIGINT)) AS `sum_Opening_ok`, SUM(CONVERT(`Payroll`, SQL_BIGINT)) AS `sum_Payroll_ok`, SUM(`Profit Ratio`) AS `sum_Profit_Ratio_ok`, SUM(`Profit`) AS `sum_Profit_ok`, SUM(`Sales`) AS `sum_Sales_ok`, SUM(`Total Expenses`) AS `sum_Total_Expenses_ok`, SUM(CONVERT(`birst_constant_one`, SQL_BIGINT)) AS `sum_birst_constant_one_ok`, SUM(CONVERT(`row`, SQL_BIGINT)) AS `sum_row_ok` FROM Starbucks HAVING (COUNT(1) > 0)","columns":24,"rows":1}
{"id":"521","value":"SELECT SUM(CONVERT(`Budget Profit`, SQL_BIGINT)) AS `sum_Budget_Profit_ok`, SUM(CONVERT(`Budget Sales`, SQL_BIGINT)) AS `sum_Budget_Sales_ok`, SUM(`Profit`) AS `sum_Profit_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks HAVING (COUNT(1) > 0)","columns":4,"rows":1}
{"id":"523","value":"SELECT `Profit` AS `none_Profit_ok`, SUM(CONVERT(`Budget Profit`, SQL_BIGINT)) AS `sum_Budget_Profit_ok` FROM Starbucks GROUP BY `Profit`","columns":2,"rows":1}
{"id":"527","value":"SELECT COUNT(DISTINCT `Player`) AS `ctd_Player_ok`, `League` AS `none_League_nk`, SUM(CONVERT(`AB`, SQL_BIGINT)) AS `sum_AB_ok` FROM Batters WHERE (`League` IN ('AA', 'FL', 'NA', 'PL', 'UA')) GROUP BY `League`","columns":3,"rows":0}
{"id":"528","value":"SELECT `Market` AS `none_Market_nk`, `State` AS `none_State_nk`, SUM(CONVERT(`Budget Margin`, SQL_BIGINT)) AS `sum_Budget_Margin_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY `Market`, `State`","columns":4,"rows":1}
{"id":"529","value":"SELECT SUM(CONVERT(`Budget COGS`, SQL_BIGINT)) AS `sum_Budget_COGS_ok`, SUM(CONVERT(1, SQL_BIGINT)) AS `sum_Number_of_Records_ok`, SUM(`Total Expenses`) AS `sum_Total_Expenses_ok`, SUM(CONVERT(`birst_constant_one`, SQL_BIGINT)) AS `sum_birst_constant_one_ok`, SUM(CONVERT(`row`, SQL_BIGINT)) AS `sum_row_ok` FROM Starbucks HAVING (COUNT(1) > 0)","columns":5,"rows":1}
{"id":"530","value":"SELECT COUNT(`key`) AS `cnt_key_ok`, CONVERT((CASE WHEN (DAYOFMONTH(`datetime0`) < 10) THEN NULL ELSE `datetime0` END), SQL_DATE) AS `none_DATE_datetimeA__ok` FROM Calcs GROUP BY CONVERT((CASE WHEN (DAYOFMONTH(`datetime0`) < 10) THEN NULL ELSE `datetime0` END), SQL_DATE)","columns":2,"rows":1}
{"id":"532","value":"SELECT `str2` AS `none_strC_nk`, (CASE WHEN (`str2` IS NULL) THEN NULL WHEN (`str2` IN ('eight', 'eleven')) THEN 'eight' WHEN (`str2` IN ('sixteen', 'ten')) THEN 'sixteen' WHEN (`str2` IN ('three', 'twelve')) THEN 'three' ELSE 'two' END) AS `strC__group__B`, SUM(CONVERT(1, SQL_BIGINT)) AS `sum_Number_of_Records_ok` FROM Calcs GROUP BY `str2`, (CASE WHEN (`str2` IS NULL) THEN NULL WHEN (`str2` IN ('eight', 'eleven')) THEN 'eight' WHEN (`str2` IN ('sixteen', 'ten')) THEN 'sixteen' WHEN (`str2` IN ('three', 'twelve')) THEN 'three' ELSE 'two' END)","columns":3,"rows":1}
{"id":"539","value":"SELECT `Prod Type1` AS `none_Prod_TypeB_nk`, SUM(`Gross Profit`) AS `sum_Gross_Profit_ok`, TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE)) AS `tyr_Order_Date_ok` FROM Staples GROUP BY `Prod Type1`, TIMESTAMPADD(SQL_TSI_DAY,FLOOR(-(DAYOFYEAR(`Order Date`) - 1)),CONVERT(`Order Date`, SQL_DATE))","columns":3,"rows":1}
{"id":"540","value":"SELECT TIMESTAMPADD(SQL_TSI_DAY,15,(CASE WHEN (`key` = 'key00') THEN  '1997-04-01' WHEN NOT (`key` = 'key00') THEN  '1997-10-15' ELSE NULL END)) AS `none_Calculation_ADJAEACBJEHDAHHD_ok`, (CASE WHEN (`key` = 'key00') THEN '1997-04-01 00:00:42' WHEN NOT (`key` = 'key00') THEN '1997-10-15 00:00:42' ELSE NULL END) AS `none_Calculation_CIBAEACBJEFDBJBG_ok`, TIMESTAMPADD(SQL_TSI_DAY,15,(CASE WHEN (`key` = 'key00') THEN '1997-04-01 00:00:42' WHEN NOT (`key` = 'key00') THEN '1997-10-15 00:00:42' ELSE NULL END)) AS `none_Calculation_DCEAEACBJEGFAEFI_ok`, (CASE WHEN (`key` = 'key00') THEN  '1997-04-01' WHEN NOT (`key` = 'key00') THEN  '1997-10-15' ELSE NULL END) AS `none_Calculation_IACAEACBJEEDGBJI_ok`, TIMESTAMPADD(SQL_TSI_DAY,15,(CASE WHEN (`key` = 'key00') THEN  '1997-04-01' WHEN NOT (`key` = 'key00') THEN  '1997-10-15' ELSE NULL END)) AS `none_Calculation_IBDAEACBJEGCHBCG_ok`, TIMESTAMPADD(SQL_TSI_DAY,15,(CASE WHEN (`key` = 'key00') THEN '1997-04-01 00:00:42' WHEN NOT (`key` = 'key00') THEN '1997-10-15 00:00:42' ELSE NULL END)) AS `none_Calculation_IHCAEACBJEHFJCIB_ok` FROM Calcs WHERE (`key` IN ('key00', 'key01')) GROUP BY TIMESTAMPADD(SQL_TSI_DAY,15,(CASE WHEN (`key` = 'key00') THEN  '1997-04-01' WHEN NOT (`key` = 'key00') THEN  '1997-10-15' ELSE NULL END)), (CASE WHEN (`key` = 'key00') THEN '1997-04-01 00:00:42' WHEN NOT (`key` = 'key00') THEN '1997-10-15 00:00:42' ELSE NULL END), TIMESTAMPADD(SQL_TSI_DAY,15,(CASE WHEN (`key` = 'key00') THEN '1997-04-01 00:00:42' WHEN NOT (`key` = 'key00') THEN '1997-10-15 00:00:42' ELSE NULL END)), (CASE WHEN (`key` = 'key00') THEN  '1997-04-01' WHEN NOT (`key` = 'key00') THEN  '1997-10-15' ELSE NULL END), TIMESTAMPADD(SQL_TSI_DAY,15,(CASE WHEN (`key` = 'key00') THEN  '1997-04-01' WHEN NOT (`key` = 'key00') THEN  '1997-10-15' ELSE NULL END)), TIMESTAMPADD(SQL_TSI_DAY,15,(CASE WHEN (`key` = 'key00') THEN '1997-04-01 00:00:42' WHEN NOT (`key` = 'key00') THEN '1997-10-15 00:00:42' ELSE NULL END))","columns":6,"rows":0}
{"id":"544","value":"SELECT CONVERT(`Ending`, SQL_DOUBLE) AS `avg_Ending_ok`, (CASE WHEN (`Item Count` IS NULL) THEN 0 WHEN NOT (`Item Count` IS NULL) THEN 1 ELSE NULL END) AS `cnt_Item_Count_ok`, `Market` AS `none_Market_nk`, (CASE WHEN (0 <> 0) THEN 0 WHEN NOT (0 <> 0) THEN NULL ELSE NULL END) AS `std_Additions_ok`, `COGS` AS `sum_COGS_ok` FROM Starbucks WHERE ((((YEAR(`Date`) * 10000) + (MONTH(`Date`) * 100)) + DAYOFMONTH(`Date`)) = 19980101)","columns":5,"rows":0}
{"id":"545","value":"SELECT SUM(CONVERT(`Margin`, SQL_BIGINT)) AS `sum_Another_Margin_ok`, SUM(CONVERT(`Margin`, SQL_BIGINT)) AS `sum_Margin_ok`, SUM(CONVERT(`Margin`, SQL_BIGINT)) AS `sum_My_Margin_ok`, SUM(`Profit`) AS `sum_Profit_ok` FROM Starbucks HAVING (COUNT(1) > 0)","columns":4,"rows":1}
{"id":"547","value":"SELECT FLOOR(`COGS` / 50) AS `COGS__bin_`, COUNT(`COGS`) AS `cnt_COGS_ok`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok` FROM Starbucks GROUP BY FLOOR(`COGS` / 50)","columns":3,"rows":1}
{"id":"548","value":"SELECT `Market` AS `none_Market_nk`, `Sales` AS `sum_Sales_ok` FROM Starbucks WHERE ((((YEAR(`Date`) * 10000) + (MONTH(`Date`) * 100)) + DAYOFMONTH(`Date`)) IN (19990101, 20021201))","columns":2,"rows":0}
{"id":"549","value":"SELECT `key` AS `none_key_nk`, `str2` AS `none_strC_nk`, `str3` AS `none_strD_nk`, (CASE WHEN (CASE WHEN (1 IS NULL) OR (LENGTH(`str3`) IS NULL) THEN NULL   WHEN LENGTH(`str3`) < 1 THEN ''   WHEN 1 < 1 THEN SUBSTRING(`str2`,1,LENGTH(`str3`))   ELSE SUBSTRING(`str2`,1,LENGTH(`str3`)) END) = `str3` THEN 1 WHEN NOT (CASE WHEN (1 IS NULL) OR (LENGTH(`str3`) IS NULL) THEN NULL   WHEN LENGTH(`str3`) < 1 THEN ''   WHEN 1 < 1 THEN SUBSTRING(`str2`,1,LENGTH(`str3`))   ELSE SUBSTRING(`str2`,1,LENGTH(`str3`)) END) = `str3` THEN 0 ELSE NULL END) AS `none_z_startswith_str_str__copy__nk` FROM Calcs","columns":4,"rows":17}
{"id":"550","value":"SELECT `key` AS `none_key_nk`, `str2` AS `none_strC_nk`, `str3` AS `none_strD_nk`, (CASE WHEN (LOCATE(`str3`,`str2`,1) > 0) THEN 1 WHEN NOT (LOCATE(`str3`,`str2`,1) > 0) THEN 0 ELSE NULL END) AS `none_z_startswith_str_str__copy__nk` FROM Calcs","columns":4,"rows":17}
{"id":"551","value":"SELECT `key` AS `none_key_nk`, `str1` AS `none_strB_nk`, (CASE WHEN (CASE WHEN (1 IS NULL) OR (LENGTH('BI') IS NULL) THEN NULL   WHEN LENGTH('BI') < 1 THEN ''   WHEN 1 < 1 THEN SUBSTRING(`str1`,1,LENGTH('BI'))   ELSE SUBSTRING(`str1`,1,LENGTH('BI')) END) = 'BI' THEN 1 WHEN NOT (CASE WHEN (1 IS NULL) OR (LENGTH('BI') IS NULL) THEN NULL   WHEN LENGTH('BI') < 1 THEN ''   WHEN 1 < 1 THEN SUBSTRING(`str1`,1,LENGTH('BI'))   ELSE SUBSTRING(`str1`,1,LENGTH('BI')) END) = 'BI' THEN 0 ELSE NULL END) AS `none_z_startswith_str_str_nk` FROM Calcs","columns":3,"rows":17}
{"id":"552","value":"SELECT `key` AS `none_key_nk`, `str1` AS `none_strB_nk`, (CASE WHEN (CASE WHEN ((CASE WHEN (LENGTH(`str1`) - LENGTH('ES')) < 0 THEN 1   ELSE LENGTH(`str1`) - LENGTH('ES') + 1 END)  IS NULL) OR (LENGTH('ES') IS NULL) THEN NULL   WHEN LENGTH('ES') < 1 THEN ''   WHEN (CASE WHEN (LENGTH(`str1`) - LENGTH('ES')) < 0 THEN 1   ELSE LENGTH(`str1`) - LENGTH('ES') + 1 END)  < 1 THEN SUBSTRING(RTRIM(`str1`),1,LENGTH('ES'))   ELSE SUBSTRING(RTRIM(`str1`),(CASE WHEN (LENGTH(`str1`) - LENGTH('ES')) < 0 THEN 1   ELSE LENGTH(`str1`) - LENGTH('ES') + 1 END) ,LENGTH('ES')) END) = 'ES' THEN 1 WHEN NOT (CASE WHEN ((CASE WHEN (LENGTH(`str1`) - LENGTH('ES')) < 0 THEN 1   ELSE LENGTH(`str1`) - LENGTH('ES') + 1 END)  IS NULL) OR (LENGTH('ES') IS NULL) THEN NULL   WHEN LENGTH('ES') < 1 THEN ''   WHEN (CASE WHEN (LENGTH(`str1`) - LENGTH('ES')) < 0 THEN 1   ELSE LENGTH(`str1`) - LENGTH('ES') + 1 END)  < 1 THEN SUBSTRING(RTRIM(`str1`),1,LENGTH('ES'))   ELSE SUBSTRING(RTRIM(`str1`),(CASE WHEN (LENGTH(`str1`) - LENGTH('ES')) < 0 THEN 1   ELSE LENGTH(`str1`) - LENGTH('ES') + 1 END) ,LENGTH('ES')) END) = 'ES' THEN 0 ELSE NULL END) AS `none_z_startswith_str_str_nk` FROM Calcs","columns":3,"rows":17}
{"id":"556","value":"SELECT SUM(CONVERT(`Budget COGS`, SQL_BIGINT)) AS `sum_Budget_COGS_ok`, SUM(`Sales`) AS `sum_Sales_ok`, SUM(CONVERT((`Budget COGS` - `Budget Margin`), SQL_BIGINT)) AS `sum_Stupid_Calc_ok`, SUM(`Total Expenses`) AS `sum_Total_Expenses_ok` FROM Starbucks HAVING (COUNT(1) > 0)","columns":4,"rows":1}
{"id":"557","value":"SELECT FLOOR(`Pop_SQ_Mile` / 50) AS `Pop_Bins` FROM Election GROUP BY FLOOR(`Pop_SQ_Mile` / 50) ORDER BY 1 ASC","columns":1,"rows":1}
{"id":"558","value":"SELECT FLOOR(`Pop_SQ_Mile` / 50) AS `Pop_Bins`, `Candidate` AS `none_Candidate_nk`, SUM(CONVERT(`Votes`, SQL_BIGINT)) AS `sum_Votes_ok` FROM Election WHERE (FLOOR(`Pop_SQ_Mile` / 50) IN (13, 15, 19, 21)) GROUP BY FLOOR(`Pop_SQ_Mile` / 50), `Candidate`","columns":3,"rows":0}
{"id":"561","value":"SELECT FLOOR(`Width` / 10) AS `Width_Buckets`, `ID` AS `none_ID_ok`, `Organ` AS `none_Organ_nk`, `Species` AS `none_Species_nk`, `Length` AS `sum_Length_ok`, `Width` AS `sum_Width_ok` FROM Fischeriris","columns":6,"rows":300}
{"id":"564","value":"SELECT `MONTH` AS `none_MONTH_nk`, SUM(CONVERT(`MURDER`, SQL_BIGINT)) AS `sum_MURDER_ok` FROM SeattleCrime GROUP BY `MONTH`","columns":2,"rows":1}
{"id":"566","value":"SELECT FLOOR(`THEFT` / 10) AS `Theft_Buckets`, COUNT(`TRACT`) AS `cnt_TRACT_ok` FROM SeattleCrime GROUP BY FLOOR(`THEFT` / 10)","columns":2,"rows":1}
{"id":"567","value":"SELECT `MONTH` AS `none_MONTH_nk`, SUM(CONVERT(`AGG_ASSAULT`, SQL_BIGINT)) AS `sum_AGG_ASSAULT_ok` FROM SeattleCrime GROUP BY `MONTH`","columns":2,"rows":1}
{"id":"568","value":"SELECT COUNT(`TRACT`) AS `TEMP_Avg_Rape_Per_Tract__DGDBIHAADB__A_`, SUM(CONVERT(`RAPE`, SQL_BIGINT)) AS `TEMP_Avg_Rape_Per_Tract__HDEJFCFIH__A_`, `PRECINCT` AS `none_PRECINCT_nk` FROM SeattleCrime GROUP BY `PRECINCT` HAVING ((CASE WHEN COUNT(`TRACT`) = 0 THEN NULL ELSE CONVERT(SUM(CONVERT(`RAPE`, SQL_BIGINT)), SQL_DOUBLE) / COUNT(`TRACT`) END) < 0.12)","columns":3,"rows":1}
{"id":"569","value":"SELECT `MONTH` AS `none_MONTH_nk`, SUM(CONVERT(`AUTOTHEFT`, SQL_BIGINT)) AS `sum_AUTOTHEFT_ok` FROM SeattleCrime WHERE ((`ARSON` >= 4) AND (`ARSON` <= 16)) GROUP BY `MONTH` HAVING ((SUM(CONVERT(`ARSON`, SQL_BIGINT)) >= 40) AND (SUM(CONVERT(`ARSON`, SQL_BIGINT)) <= 55))","columns":2,"rows":0}
{"id":"571","value":"SELECT `MONTH` AS `none_MONTH_nk`, `PRECINCT` AS `none_PRECINCT_nk`, `YEAR` AS `none_YEAR_ok`, SUM(CONVERT(`ARSON`, SQL_BIGINT)) AS `sum_ARSON_ok`, SUM(CONVERT(`RAPE`, SQL_BIGINT)) AS `sum_RAPE_ok` FROM SeattleCrime INNER JOIN ( SELECT COUNT(1) AS `XTableau_join_flag`,   `MONTH` AS `none_MONTH_nk` FROM SeattleCrime GROUP BY `MONTH` HAVING (SUM(CONVERT(`RAPE`, SQL_BIGINT)) >= 14) ) t0 ON (`MONTH` = t0.none_MONTH_nk) GROUP BY `MONTH`, `PRECINCT`, `YEAR`","columns":5,"rows":0}
{"id":"578","value":"SELECT `keyName` AS `none_keyName_nk`, CONVERT(`val2`, SQL_BIGINT) AS `sum_valC_ok`, CONVERT(`val3`, SQL_BIGINT) AS `sum_valD_ok` FROM SpecialData","columns":3,"rows":16}
{"id":"579","value":"SELECT `keyName` AS `none_keyName_nk`, `val1` AS `sum_valB_ok`, CONVERT(`val2`, SQL_BIGINT) AS `sum_valC_ok` FROM SpecialData","columns":3,"rows":16}
{"id":"582","value":"SELECT `Customer Name` AS `none_Customer_Name_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok`, SUM(CONVERT(`Item Count`, SQL_BIGINT)) AS `sum_Item_Count_ok` FROM Staples GROUP BY `Customer Name` HAVING ((SUM(`Discount`) >= 0.059999999999999401) AND (SUM(`Discount`) <= 48.330000000000481))","columns":3,"rows":0}
{"id":"586","value":"SELECT `Customer Name` AS `none_Customer_Name_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok` FROM Staples WHERE (((`Customer Name` >= 'Barbara Fisher') AND (`Customer Name` <= 'Roy Skaria')) OR ((`Customer Name` >= 'Sarah Jordon-Smith') AND (`Customer Name` <= 'Zyzzy Zzuyzyzyk'))) GROUP BY `Customer Name`","columns":2,"rows":1}
{"id":"600","value":"SELECT `Customer Name` AS `none_Customer_Name_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok`, SUM(CONVERT(`Item Count`, SQL_BIGINT)) AS `sum_Item_Count_ok` FROM Staples WHERE ((`Discount` >= 0.105905) AND (`Discount` <= 0.39100000000000001)) GROUP BY `Customer Name` HAVING ((SUM(`Discount`) >= 0.059999999999999401) AND (SUM(`Discount`) <= 48.330000000000481))","columns":3,"rows":0}
{"id":"601","value":"SELECT SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok`, SUM(CONVERT(`Order Quantity`, SQL_BIGINT)) AS `sum_Order_Quantity_ok` FROM Staples HAVING (COUNT(1) > 0)","columns":2,"rows":1}
{"id":"602","value":"SELECT `Customer Name` AS `none_Customer_Name_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok` FROM Staples GROUP BY `Customer Name` HAVING ((SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) >= (-746)) AND (SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) <= 2384363))","columns":2,"rows":1}
{"id":"604","value":"SELECT MONTH(`Order Date`) AS `mn_Order_Date_ok`, `Customer Segment` AS `none_Customer_Segment_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok`, SUM(`Discount`) AS `sum_Discount_ok` FROM Staples GROUP BY MONTH(`Order Date`), `Customer Segment`","columns":4,"rows":1}
{"id":"607","value":"SELECT `Customer Name` AS `none_Customer_Name_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok` FROM Staples GROUP BY `Customer Name`","columns":2,"rows":1}
{"id":"613","value":"SELECT `Customer Name` AS `none_Customer_Name_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok`, SUM(CONVERT(`Order Quantity`, SQL_BIGINT)) AS `sum_Order_Quantity_ok` FROM Staples WHERE ((`Discount` >= -0.001) AND (`Discount` <= 0.215172)) GROUP BY `Customer Name` HAVING (((COUNT(`Discount`) >= 0) AND (COUNT(`Discount`) <= 822)) AND ((SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) >= (-746)) AND (SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) <= 4074689)))","columns":3,"rows":0}
{"id":"616","value":"SELECT `Call Center Region` AS `none_Call_Center_Region_nk`, `Customer Name` AS `none_Customer_Name_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok`, SUM(CONVERT(`Order Quantity`, SQL_BIGINT)) AS `sum_Order_Quantity_ok` FROM Staples GROUP BY `Call Center Region`, `Customer Name`","columns":4,"rows":1}
{"id":"620","value":"SELECT `Order Date` AS `none_Order_Date_ok`, `PID` AS `none_PID_ok`, `Product In Stock` AS `none_Product_In_Stock_nk`, `Product Name` AS `none_Product_Name_nk`, `Fill Time` AS `sum_Fill_Time_ok` FROM Staples WHERE (((`Fill Time` >= 5) AND (`Fill Time` <= 12)) AND ((`Order Date` >=  '2001-01-01') AND (`Order Date` <=  '2001-09-01')) AND (`Product Container` IN ('SMALL BOX', 'SMALL PACK', 'WRAP BAG')) AND (`Product In Stock` = 'YES') AND ((LOCATE('Eldon',`Product Name`,1) = 0) AND (LOCATE('Manco',`Product Name`,1) = 0)))","columns":5,"rows":0}
{"id":"627","value":"SELECT MONTH(`Order Date`) AS `mn_Order_Date_ok`, SUM(`Gross Profit`) AS `sum_Gross_Profit_ok` FROM Staples GROUP BY MONTH(`Order Date`)","columns":2,"rows":1}
{"id":"631","value":"SELECT `Customer Name` AS `none_Customer_Name_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok`, SUM(CONVERT(`Order Quantity`, SQL_BIGINT)) AS `sum_Order_Quantity_ok` FROM Staples GROUP BY `Customer Name` HAVING ((AVG(`Discount`) >= 0.049244999999999504) AND (AVG(`Discount`) <= 0.060000000000000595))","columns":3,"rows":0}
{"id":"635","value":"SELECT `Call Center Region` AS `none_Call_Center_Region_nk`, `Prod Type1` AS `none_Prod_TypeB_nk`, `Supplier Region` AS `none_Supplier_Region_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok`, SUM(`Gross Profit`) AS `sum_Gross_Profit_ok` FROM Staples GROUP BY `Call Center Region`, `Prod Type1`, `Supplier Region`","columns":5,"rows":1}
{"id":"640","value":"SELECT AVG(CONVERT(`Customer Balance`, SQL_DOUBLE)) AS `avg_Customer_Balance_ok`, `Customer Name` AS `none_Customer_Name_nk` FROM Staples GROUP BY `Customer Name` HAVING ((AVG(CONVERT(`Customer Balance`, SQL_DOUBLE)) >= 252.99999999999747) AND (AVG(CONVERT(`Customer Balance`, SQL_DOUBLE)) <= 3702.7330280000369))","columns":2,"rows":0}
{"id":"647","value":"SELECT (((YEAR(`Order Date`) * 10000) + (MONTH(`Order Date`) * 100)) + DAYOFMONTH(`Order Date`)) AS `md_Order_Date_ok`, SUM(`Gross Profit`) AS `sum_Gross_Profit_ok` FROM Staples GROUP BY (((YEAR(`Order Date`) * 10000) + (MONTH(`Order Date`) * 100)) + DAYOFMONTH(`Order Date`))","columns":2,"rows":1}
{"id":"651","value":"SELECT `Customer Name` AS `none_Customer_Name_nk`, SUM(CONVERT(`Customer Balance`, SQL_BIGINT)) AS `sum_Customer_Balance_ok`, SUM(CONVERT(`Item Count`, SQL_BIGINT)) AS `sum_Item_Count_ok` FROM Staples WHERE ((`Call Center Region` NOT IN ('CENTRAL')) AND ((`Discount` >= 0.105905) AND (`Discount` <= 0.39100000000000001))) GROUP BY `Customer Name` HAVING ((SUM(`Discount`) >= 0.059999999999999401) AND (SUM(`Discount`) <= 48.330000000000481))","columns":3,"rows":0}
{"id":"654","value":"SELECT `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`Budget COGS`, SQL_BIGINT)) AS `sum_Budget_COGS_ok` FROM Starbucks GROUP BY `Market`, `Product Type`","columns":3,"rows":1}
{"id":"655","value":"SELECT `Product` AS `none_Product_nk`, SUM(CONVERT(`Budget COGS`, SQL_BIGINT)) AS `sum_Budget_COGS_ok`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok` FROM Starbucks GROUP BY `Product`","columns":3,"rows":1}
{"id":"657","value":"SELECT `Market Size` AS `none_Market_Size_nk`, `Market` AS `none_Market_nk`, SUM(CONVERT(`Budget COGS`, SQL_BIGINT)) AS `sum_Budget_COGS_ok` FROM Starbucks GROUP BY `Market Size`, `Market`","columns":3,"rows":1}
{"id":"658","value":"SELECT `Market` AS `none_Market_nk` FROM Starbucks GROUP BY `Market` HAVING (SUM(CONVERT(`COGS`, SQL_BIGINT)) < 1000)","columns":1,"rows":1}
{"id":"659","value":"SELECT `Market Size` AS `none_Market_Size_nk`, `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, `Product` AS `none_Product_nk`, `State` AS `none_State_nk`, `Type` AS `none_Type_nk`, SUM(CONVERT(`Budget COGS`, SQL_BIGINT)) AS `sum_Budget_COGS_ok` FROM Starbucks GROUP BY `Market Size`, `Market`, `Product Type`, `Product`, `State`, `Type`","columns":7,"rows":1}
{"id":"665","value":"SELECT `Date` AS `none_Date_ok`, `Market Size` AS `none_Market_Size_nk`, `Type` AS `none_Type_nk`, SUM(CONVERT(`Budget Additions`, SQL_BIGINT)) AS `sum_Budget_Additions_ok` FROM Starbucks GROUP BY `Date`, `Market Size`, `Type`","columns":4,"rows":1}
{"id":"667","value":"SELECT `State` AS `none_State_nk`, SUM(CONVERT(`Inventory`, SQL_BIGINT)) AS `sum_Inventory_ok`, SUM(CONVERT(`Marketing`, SQL_BIGINT)) AS `sum_Marketing_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY `State`","columns":4,"rows":1}
{"id":"668","value":"SELECT `Market Size` AS `none_Market_Size_nk`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`Budget Profit`, SQL_BIGINT)) AS `sum_Budget_Profit_ok`, SUM(CONVERT(`Budget Sales`, SQL_BIGINT)) AS `sum_Budget_Sales_ok`, SUM(`Profit`) AS `sum_Profit_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY `Market Size`, `Product Type`","columns":6,"rows":1}
{"id":"669","value":"SELECT `Market` AS `none_Market_nk`, `Product` AS `none_Product_nk`, SUM(CONVERT(`Budget Payroll`, SQL_BIGINT)) AS `sum_Budget_Payroll_ok`, SUM(CONVERT(`Ending`, SQL_BIGINT)) AS `sum_Ending_ok` FROM Starbucks GROUP BY `Market`, `Product`","columns":4,"rows":1}
{"id":"670","value":"SELECT `Market` AS `none_Market_nk`, `Product` AS `none_Product_nk`, SUM(CONVERT(`Margin`, SQL_BIGINT)) AS `sum_Margin_ok`, SUM(CONVERT(`Marketing`, SQL_BIGINT)) AS `sum_Marketing_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY `Market`, `Product`","columns":5,"rows":1}
{"id":"672","value":"SELECT MONTH(`Date`) AS `mn_Date_ok`, `Type` AS `none_Type_nk`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY MONTH(`Date`), `Type`","columns":3,"rows":1}
{"id":"674","value":"SELECT `Type` AS `none_Type_nk`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok`, SUM(`Profit`) AS `sum_Profit_ok` FROM Starbucks GROUP BY `Type`","columns":3,"rows":1}
{"id":"676","value":"SELECT `Market` AS `none_Market_nk`, `Product` AS `none_Product_nk`, SUM(CONVERT(`Marketing`, SQL_BIGINT)) AS `sum_Marketing_ok`, SUM(`Profit`) AS `sum_Profit_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY `Market`, `Product`","columns":5,"rows":1}
{"id":"677","value":"SELECT `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok` FROM Starbucks GROUP BY `Market`, `Product Type`","columns":3,"rows":1}
{"id":"679","value":"SELECT `Date` AS `none_Date_ok`, `Market` AS `none_Market_nk`, SUM(CONVERT(`COGS`, SQL_BIGINT)) AS `sum_COGS_ok` FROM Starbucks GROUP BY `Date`, `Market`","columns":3,"rows":1}
{"id":"680","value":"SELECT DAYOFWEEK(`Date`) AS `wd_Date_ok`, WEEK(`Date`) AS `wk_Date_ok` FROM Starbucks GROUP BY DAYOFWEEK(`Date`), WEEK(`Date`)","columns":2,"rows":1}
{"id":"681","value":"SELECT COUNT(`Sales`) AS `cnt_Sales_ok`, MAX(`Sales`) AS `max_Sales_ok`, MIN(`Sales`) AS `min_Sales_ok`, `Market` AS `none_Market_nk`, (CASE WHEN COUNT(`Sales`) > 1 THEN SQRT((COUNT(`Sales`) * SUM(POWER(`Sales`,2)) - POWER(SUM(`Sales`), 2) ) / (COUNT(`Sales`)*(COUNT(`Sales`) - 1))) ELSE NULL END) AS `std_Sales_ok`, SUM(`Sales`) AS `sum_Sales_ok`, (CASE WHEN COUNT(`Sales`) > 1 THEN ((COUNT(`Sales`) * SUM(POWER(`Sales`,2)) - POWER(SUM(`Sales`), 2) ) / (COUNT(`Sales`)*(COUNT(`Sales`) - 1))) ELSE NULL END) AS `var_Sales_ok` FROM Starbucks GROUP BY `Market`","columns":7,"rows":1}
{"id":"682","value":"SELECT `Market` AS `none_Market_nk`, `Product Type` AS `none_Product_Type_nk`, SUM(CONVERT(`Budget COGS`, SQL_BIGINT)) AS `sum_Budget_COGS_ok`, SUM(`Sales`) AS `sum_Sales_ok` FROM Starbucks GROUP BY `Market`, `Product Type`","columns":4,"rows":1}
{"id":"685","value":"SELECT SUM(ABS(`Gross Profit`)) AS `sum_ABS_Test_ok`, SUM(`Gross Profit`) AS `sum_Gross_Profit_ok` FROM Staples HAVING (COUNT(1) > 0)","columns":2,"rows":1}
{"id":"686","value":"SELECT (CASE WHEN `Gross Profit` > 0 THEN LOG10(`Gross Profit`) ELSE NULL END) AS `sum_LOG_Test_ok` FROM Staples","columns":1,"rows":54860}
{"id":"687","value":"SELECT MIN(`date3`) AS `TEMP_z_min_dateD___CAIFDBAFGG__A_`, MIN(CONVERT(`date3`, SQL_DOUBLE)) AS `min_float_dateD__ok`, `key` AS `none_key_nk` FROM Calcs GROUP BY `key`","columns":3,"rows":1}
{"id":"688","value":"SELECT MAX(`date3`) AS `TEMP_z_max_dateD___EAFIDBBGB__A_`, MAX(CONVERT(`date3`, SQL_DOUBLE)) AS `max_float_dateD__ok` FROM Calcs HAVING (COUNT(1) > 0)","columns":2,"rows":1}
{"id":"690","value":"SELECT MIN(`date3`) AS `TEMP_z_min_dateD___CAIFDBAFGG__A_`, MIN(CONVERT(`date3`, SQL_DOUBLE)) AS `min_float_dateD__ok` FROM Calcs HAVING (COUNT(1) > 0)","columns":2,"rows":1}
{"id":"691","value":"SELECT `date3` AS `TEMP_z_max_dateD___EAFIDBBGB__A_`, CONVERT(`date3`, SQL_DOUBLE) AS `max_float_dateD__ok`, `key` AS `none_key_nk` FROM Calcs","columns":3,"rows":17}
{"id":"695","value":"SELECT MIN(`str2`) AS `TEMP_z_min_strC___DJJCFEABJH__A_`, MIN(LENGTH(`str2`)) AS `min_len_strC__ok` FROM Calcs HAVING (COUNT(1) > 0)","columns":2,"rows":1}
{"id":"696","value":"SELECT MAX(`str2`) AS `TEMP_z_max_strC___DFJIBAEFCD__A_`, MAX(LENGTH(`str2`)) AS `max_len_strC__ok`, `key` AS `none_key_nk`, `str2` AS `none_strC_nk` FROM Calcs GROUP BY `key`, `str2`","columns":4,"rows":1}
{"id":"698","value":"SELECT `str2` AS `TEMP_z_min_strC___DJJCFEABJH__A_`, LENGTH(`str2`) AS `min_len_strC__ok`, `key` AS `none_key_nk`, `str2` AS `none_strC_nk` FROM Calcs","columns":4,"rows":17}
{"id":"700","value":"SELECT `date3` AS `TEMP_z_min_dateD___CAIFDBAFGG__A_`, `key` AS `none_key_nk`, CONVERT(`date3`, SQL_DOUBLE) AS `sum_float_dateD__ok` FROM Calcs","columns":3,"rows":17}
{"id":"701","value":"SELECT `date3` AS `none_dateD_nk`, `key` AS `none_key_nk`, CONVERT(`date3`, SQL_DOUBLE) AS `sum_z_float_date_ok` FROM Calcs","columns":3,"rows":17}
{"id":"702","value":"SELECT `key` AS `none_key_nk`, LTRIM(CONVERT(`int0`, SQL_VARCHAR)) AS `none_str_intA__nk`, LTRIM(CONVERT(`num4`, SQL_VARCHAR)) AS `none_str_numE__nk`, CONVERT(CONCAT(LTRIM(CONVERT(`num4`, SQL_VARCHAR)), LTRIM(CONVERT(`int0`, SQL_VARCHAR))), SQL_DOUBLE) AS `sum_z_float_str_ok` FROM Calcs","columns":4,"rows":17}
{"id":"704","value":"SELECT `key` AS `none_key_nk`, `str2` AS `none_strC_nk`, LTRIM(CONVERT(`str2`, SQL_VARCHAR)) AS `none_z_str_str_nk` FROM Calcs GROUP BY `key`, `str2`, LTRIM(CONVERT(`str2`, SQL_VARCHAR))","columns":3,"rows":1}
{"id":"705","value":"SELECT `key` AS `none_key_nk`, LTRIM(CONVERT(`int0`, SQL_VARCHAR)) AS `none_str_intA__nk`, LTRIM(CONVERT(`num4`, SQL_VARCHAR)) AS `none_str_numE__nk`, CONVERT(CONCAT(LTRIM(CONVERT(`num4`, SQL_VARCHAR)), LTRIM(CONVERT(`int0`, SQL_VARCHAR))), SQL_BIGINT) AS `sum_z_int_str_ok` FROM Calcs","columns":4,"rows":17}
{"id":"708","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, TIMESTAMPADD(SQL_TSI_DAY,-(DAYOFWEEK(`datetime0`) - 1),CONVERT(`datetime0`, SQL_DATE)) AS `none_z_datetrunc_week_ok` FROM Calcs","columns":3,"rows":17}
{"id":"709","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, WEEK(`datetime0`) AS `sum_z_datepart_week_ok` FROM Calcs","columns":3,"rows":17}
{"id":"710","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, DAYOFMONTH(`datetime0`) AS `none_z_day_ok`, DAYOFMONTH(`datetime0`) AS `sum_z_datepart_day_ok` FROM Calcs","columns":4,"rows":17}
{"id":"711","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, LTRIM(CONVERT(SECOND(CONVERT(`datetime0`, SQL_TIMESTAMP)), SQL_VARCHAR)) AS `none_z_datename_second_nk` FROM Calcs","columns":3,"rows":17}
{"id":"712","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, CONVERT(`datetime0`, SQL_DATE) AS `none_z_datetrunc_day_ok`, DAYOFMONTH(`datetime0`) AS `none_z_day_ok` FROM Calcs","columns":4,"rows":17}
{"id":"713","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, HOUR(CONVERT(`datetime0`, SQL_TIMESTAMP)) AS `sum_z_datepart_hour_ok` FROM Calcs","columns":3,"rows":17}
{"id":"714","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, TIMESTAMPDIFF(SQL_TSI_MONTH, '2004-07-04',`datetime0`) AS `sum_z_datediff_month_ok` FROM Calcs","columns":3,"rows":17}
{"id":"715","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, TIMESTAMPDIFF(SQL_TSI_HOUR, '2004-07-04',`datetime0`) AS `sum_z_datediff_hour_ok` FROM Calcs","columns":3,"rows":17}
{"id":"716","value":"SELECT `key` AS `none_key_nk`, TIMESTAMPDIFF(SQL_TSI_YEAR,CURRENT_DATE(),CURRENT_DATE()) AS `sum_z_today_ok` FROM Calcs","columns":2,"rows":17}
{"id":"718","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, LTRIM(CONVERT(DAYOFMONTH(`datetime0`), SQL_VARCHAR)) AS `none_z_datename_day_nk` FROM Calcs","columns":3,"rows":17}
{"id":"719","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, MINUTE(CONVERT(`datetime0`, SQL_TIMESTAMP)) AS `sum_z_datepart_minute_ok` FROM Calcs","columns":3,"rows":17}
{"id":"720","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, SECOND(CONVERT(`datetime0`, SQL_TIMESTAMP)) AS `sum_z_datepart_second_ok` FROM Calcs","columns":3,"rows":17}
{"id":"722","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, TIMESTAMPDIFF(SQL_TSI_DAY, '2004-07-04',`datetime0`) AS `sum_z_datediff_dayofyear_ok` FROM Calcs","columns":3,"rows":17}
{"id":"723","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, DAYOFYEAR(`datetime0`) AS `sum_z_datepart_dayofyear_ok` FROM Calcs","columns":3,"rows":17}
{"id":"724","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, TIMESTAMPADD(SQL_TSI_HOUR,HOUR(`datetime0`),CONVERT(`datetime0`, SQL_DATE)) AS `none_z_datetrunc_hour_ok` FROM Calcs","columns":3,"rows":17}
{"id":"726","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, TIMESTAMPDIFF(SQL_TSI_YEAR, '2004-07-04',`datetime0`) AS `sum_z_datediff_year_ok` FROM Calcs","columns":3,"rows":17}
{"id":"727","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, LTRIM(CONVERT(QUARTER(`datetime0`), SQL_VARCHAR)) AS `none_z_datename_quarter_nk` FROM Calcs","columns":3,"rows":17}
{"id":"728","value":"SELECT `datetime0` AS `none_datetimeA_ok`, `key` AS `none_key_nk`, CONVERT(`datetime0`, SQL_DATE) AS `none_z_datetrunc_weekday_ok` FROM Calcs","columns":3,"rows":17}
{"id":"732","value":"SELECT `date1` AS `none_dateB_ok`, `key` AS `none_key_nk`, (CASE WHEN (DAYOFWEEK(`date1`) IN (1, 7)) THEN NULL ELSE `date1` END) AS `none_z_case_null_null_date_ok` FROM Calcs GROUP BY `date1`, `key`, (CASE WHEN (DAYOFWEEK(`date1`) IN (1, 7)) THEN NULL ELSE `date1` END)","columns":3,"rows":1}
{"id":"735","value":"SELECT `key` AS `none_key_nk`, `int2` AS `sum_intC_ok`, `int3` AS `sum_intD_ok`, (CASE WHEN `int2` = 0 THEN NULL ELSE CONVERT(`int3`, SQL_DOUBLE) / `int2` END) AS `sum_z_int_div_zero_ok` FROM Calcs","columns":4,"rows":17}
{"id":"738","value":"SELECT `key` AS `none_key_nk`, `str0` AS `none_strA_nk`, `str2` AS `none_strC_nk`, `str3` AS `none_strD_nk`, (CASE WHEN (`str2` < (CASE WHEN (`num3` > 0) THEN LCASE(`str0`) WHEN NOT (`num3` > 0) THEN `str3` ELSE NULL END)) THEN 1 WHEN NOT (`str2` < (CASE WHEN (`num3` > 0) THEN LCASE(`str0`) WHEN NOT (`num3` > 0) THEN `str3` ELSE NULL END)) THEN 0 ELSE NULL END) AS `none_z_str_lt_str_nk`, `num3` AS `sum_numD_ok` FROM Calcs","columns":6,"rows":17}
{"id":"746","value":"SELECT `key` AS `none_key_nk`, `str2` AS `none_strC_nk`, LENGTH(`str2`) AS `sum_z_len_str_ok` FROM Calcs","columns":3,"rows":17}
{"id":"747","value":"SELECT `key` AS `none_key_nk`, `str1` AS `none_strB_nk`, LCASE(`str1`) AS `none_z_lower_str_nk` FROM Calcs","columns":3,"rows":17}
{"id":"748","value":"SELECT `key` AS `none_key_nk`, CONCAT(CONCAT('  ', `str2`), '  ') AS `none_padded_strC_nk`, CONCAT(CONCAT('(', LTRIM(RTRIM(CONCAT(CONCAT('  ', `str2`), '  ')))), ')') AS `none_z_trim_str_nk` FROM Calcs","columns":3,"rows":17}
}
