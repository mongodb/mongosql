normalized_catalog_schema: &normalized_catalog_schema
  tpch:
    customer:
      bsonType: 'object'
      properties:
        c_address:
          bsonType: 'string'
        c_acctbal:
          bsonType: 'double'
        c_custkey:
          bsonType: 'int'
        c_name:
          bsonType: 'string'
        _id:
          bsonType: 'objectId'
        c_nationkey:
          bsonType: 'int'
        c_phone:
          bsonType: 'string'
        c_comment:
          bsonType: 'string'
        c_mktsegment:
          bsonType: 'string'
      required: [ ]
      additionalProperties: false

    lineitem:
      bsonType: 'object'
      properties:
        l_suppkey:
          bsonType: 'int'
        l_returnflag:
          bsonType: 'string'
        l_discount:
          bsonType: 'double'
        l_quantity:
          bsonType: 'int'
        l_extendedprice:
          bsonType: 'double'
        _id:
          bsonType: 'objectId'
        l_linestatus:
          bsonType: 'string'
        l_shipmode:
          bsonType: 'string'
        l_shipdate:
          bsonType: 'date'
        l_comment:
          bsonType: 'string'
        l_orderkey:
          bsonType: 'int'
        l_receiptdate:
          bsonType: 'date'
        l_shipinstruct:
          bsonType: 'string'
        l_commitdate:
          bsonType: 'date'
        l_partkey:
          bsonType: 'int'
        l_linenumber:
          bsonType: 'int'
        l_tax:
          bsonType: 'double'
      required: [ ]
      additionalProperties: false

    nation:
      bsonType:
        - 'object'
      properties:
        n_name:
          bsonType:
            - 'string'
          additionalProperties: false
        n_regionkey:
          bsonType:
            - 'int'
          additionalProperties: false
        n_comment:
          bsonType:
            - 'string'
          additionalProperties: false
        _id:
          bsonType:
            - 'objectId'
          additionalProperties: false
        n_nationkey:
          bsonType:
            - 'int'
          additionalProperties: false
      additionalProperties: false

    orders:
      bsonType: 'object'
      properties:
        o_orderpriority:
          bsonType: 'string'
        o_comment:
          bsonType: 'string'
        o_shippriority:
          bsonType: 'int'
        o_clerk:
          bsonType: 'string'
        _id:
          bsonType: 'objectId'
        o_orderkey:
          bsonType: 'int'
        o_orderdate:
          bsonType: 'date'
        o_custkey:
          bsonType: 'int'
        o_orderstatus:
          bsonType: 'string'
        o_totalprice:
          bsonType: 'double'
      required: [ ]
      additionalProperties: false

    part:
      bsonType: 'object'
      properties:
        p_comment:
          bsonType: 'string'
        p_partkey:
          bsonType: 'int'
        p_type:
          bsonType: 'string'
        p_mfgr:
          bsonType: 'string'
        _id:
          bsonType: 'objectId'
        p_retailprice:
          bsonType: 'double'
        p_size:
          bsonType: 'int'
        p_brand:
          bsonType: 'string'
        p_container:
          bsonType: 'string'
        p_name:
          bsonType: 'string'
      required: [ ]
      additionalProperties: false

    partsupp:
      bsonType: 'object'
      properties:
        ps_supplycost:
          bsonType: 'double'
        ps_comment:
          bsonType: 'string'
        ps_availqty:
          bsonType: 'int'
        _id:
          bsonType: 'objectId'
        ps_partkey:
          bsonType: 'int'
        ps_suppkey:
          bsonType: 'int'
      required: [ ]
      additionalProperties: false

    region:
      bsonType: 'object'
      properties:
        r_comment:
          bsonType: 'string'
        r_regionkey:
          bsonType: 'int'
        _id:
          bsonType: 'objectId'
        r_name:
          bsonType: 'string'
      required: []
      additionalProperties: false

    revenue:
      bsonType: 'object'
      properties:
        supplier_no:
          bsonType: 'int'
        total_revenue:
          bsonType: 'double'
      required: [ ]
      additionalProperties: false

    supplier:
      bsonType: 'object'
      properties:
        s_nationkey:
          bsonType: 'int'
        s_phone:
          bsonType: 'string'
        s_acctbal:
          bsonType: 'double'
        s_address:
          bsonType: 'string'
        _id:
          bsonType: 'objectId'
        s_comment:
          bsonType: 'string'
        s_name:
          bsonType: 'string'
        s_suppkey:
          bsonType: 'int'
      required: [ ]
      additionalProperties: false

denormalized_catalog_schema: &denormalized_catalog_schema
  tpch:
    customer:
      bsonType: 'object'
      properties:
        orders:
          bsonType: 'array'
          items:
            bsonType: 'object'
            properties:
              o_orderdate:
                bsonType: 'date'
              o_totalprice:
                bsonType: 'double'
              lineitem:
                bsonType: 'array'
                items:
                  bsonType: 'object'
                  properties:
                    l_shipmode:
                      bsonType: 'string'
                    l_tax:
                      bsonType: 'double'
                    l_linestatus:
                      bsonType: 'string'
                    l_extendedprice:
                      bsonType: 'double'
                    l_suppkey:
                      bsonType: 'int'
                    l_linenumber:
                      bsonType: 'int'
                    l_partkey:
                      bsonType: 'int'
                    l_shipinstruct:
                      bsonType: 'string'
                    l_commitdate:
                      bsonType: 'date'
                    _id:
                      bsonType: 'objectId'
                    l_discount:
                      bsonType: 'double'
                    l_orderkey:
                      bsonType: 'int'
                    l_quantity:
                      bsonType: 'int'
                    l_comment:
                      bsonType: 'string'
                    l_shipdate:
                      bsonType: 'date'
                    l_receiptdate:
                      bsonType: 'date'
                    l_returnflag:
                      bsonType: 'string'
                  required: [ ]
                  additionalProperties: false
              o_orderstatus:
                bsonType: 'string'
              o_orderpriority:
                bsonType: 'string'
              o_comment:
                bsonType: 'string'
              _id:
                bsonType: 'objectId'
              o_custkey:
                bsonType: 'int'
              o_orderkey:
                bsonType: 'int'
              o_shippriority:
                bsonType: 'int'
              o_clerk:
                bsonType: 'string'
            required: [ ]
            additionalProperties: false
        c_acctbal:
          bsonType: 'double'
        c_mktsegment:
          bsonType: 'string'
        c_custkey:
          bsonType: 'int'
        c_name:
          bsonType: 'string'
        _id:
          bsonType: 'objectId'
        c_address:
          bsonType: 'string'
        c_phone:
          bsonType: 'string'
        nation:
          bsonType: 'object'
          properties:
            _id:
              bsonType: 'objectId'
            n_comment:
              bsonType: 'string'
            n_name:
              bsonType: 'string'
            n_nationkey:
              bsonType: 'int'
            region:
              bsonType: 'object'
              properties:
                r_comment:
                  bsonType: 'string'
                r_name:
                  bsonType: 'string'
                _id:
                  bsonType: 'objectId'
                r_regionkey:
                  bsonType: 'int'
              required: [ ]
              additionalProperties: false
          required: [ ]
          additionalProperties: false
        c_comment:
          bsonType: 'string'
      required: [ ]
      additionalProperties: false
    part:
      bsonType: 'object'
      properties:
        part:
          bsonType: 'object'
          properties:
            p_size:
              bsonType: 'int'
            _id:
              bsonType: 'objectId'
            p_mfgr:
              bsonType: 'string'
            p_name:
              bsonType: 'string'
            p_type:
              bsonType: 'string'
            p_retailprice:
              bsonType: 'double'
            p_container:
              bsonType: 'string'
            p_brand:
              bsonType: 'string'
            p_comment:
              bsonType: 'string'
            p_partkey:
              bsonType: 'int'
          required: [ ]
          additionalProperties: false
      required: [ ]
      additionalProperties: false
    partsupp:
      bsonType: 'object'
      properties:
        partsupp:
          bsonType: 'object'
          properties:
            _id:
              bsonType: 'objectId'
            ps_suppkey:
              bsonType: 'int'
            ps_supplycost:
              bsonType: 'double'
            ps_availqty:
              bsonType: 'int'
            ps_partkey:
              bsonType: 'int'
            ps_comment:
              bsonType: 'string'
          required: [ ]
          additionalProperties: false
      required: [ ]
      additionalProperties: false
    supplier:
      bsonType: 'object'
      properties:
        supplier:
          bsonType: 'object'
          properties:
            s_address:
              bsonType: 'string'
            nation:
              bsonType: 'object'
              properties:
                _id:
                  bsonType: 'objectId'
                n_name:
                  bsonType: 'string'
                n_nationkey:
                  bsonType: 'int'
                n_comment:
                  bsonType: 'string'
                region:
                  bsonType: 'object'
                  properties:
                    r_name:
                      bsonType: 'string'
                    r_comment:
                      bsonType: 'string'
                    r_regionkey:
                      bsonType: 'int'
                    _id:
                      bsonType: 'objectId'
                  required: [ ]
                  additionalProperties: false
              required: [ ]
              additionalProperties: false
            s_suppkey:
              bsonType: 'int'
            s_comment:
              bsonType: 'string'
            _id:
              bsonType: 'objectId'
            s_acctbal:
              bsonType: 'double'
            s_name:
              bsonType: 'string'
            s_phone:
              bsonType: 'string'
          required: [ ]
          additionalProperties: false
      required: [ ]
      additionalProperties: false

workloads:

  # ----- Normalized Queries -----
  - name: q1_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          l_returnflag,
          l_linestatus,
          sum(l_quantity) as sum_qty,
          sum(l_extendedprice) as sum_base_price,
          sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
          sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
          avg(l_quantity) as avg_qty,
          avg(l_extendedprice) as avg_price,
          avg(l_discount) as avg_disc,
          count(*) as count_order
      FROM
          lineitem
      WHERE
          l_shipdate <= '1998-9-01T00:00:00.000Z'::TIMESTAMP
      GROUP BY
          l_returnflag,
          l_linestatus
      ORDER BY
          l_returnflag,
          l_linestatus

  # SQL-1530: Update like clause argument to '%STEEL' after fix
  - name: q2_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          s_acctbal,
          s_name,
          n_name,
          p_partkey,
          p_mfgr,
          s_address,
          s_phone,
          s_comment
      FROM
          part,
          supplier,
          partsupp,
          nation,
          region
      WHERE
          p_partkey = ps_partkey
          and supplier.s_suppkey = partsupp.ps_suppkey
          and p_size = 20
          and p_type like '%STEEL'
          and supplier.s_nationkey = nation.n_nationkey
          and nation.n_regionkey = r_regionkey
          and region.r_name = 'AMERICA'
          and partsupp.ps_supplycost = (
              SELECT
                  min(partsupp.ps_supplycost)
              FROM
                  partsupp,
                  supplier,
                  nation,
                  region
              WHERE
                  p_partkey = partsupp.ps_partkey
                  and supplier.s_suppkey = partsupp.ps_suppkey
                  and supplier.s_nationkey = nation.n_nationkey
                  and nation.n_regionkey = region.r_regionkey
                  and region.r_name = 'AMERICA'
          )
      ORDER BY
          s_acctbal desc,
          n_name,
          s_name,
          p_partkey
      LIMIT 100


  - name: q3_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          l_orderkey,
          sum(l_extendedprice*(1-l_discount)) as revenue,
          o_orderdate,
          o_shippriority
      FROM
          customer,
          orders,
          lineitem
      WHERE
          customer.c_mktsegment = 'BUILDING'
          and customer.c_custkey = orders.o_custkey
          and l_orderkey = o_orderkey
          and o_orderdate < '1995-03-15T00:00:00.000Z'::TIMESTAMP
          and l_shipdate > '1995-03-15T00:00:00.000Z'::TIMESTAMP
      GROUP BY
          l_orderkey,
          o_orderdate,
          o_shippriority
      ORDER BY
          revenue desc,
          o_orderdate

  - name: q4_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          o_orderpriority,
          count(*) as order_count
      FROM
          orders
      WHERE
          o_orderdate >= '1993-07-01T00:00:00.000Z'::TIMESTAMP
          and o_orderdate < '1993-10-01T00:00:00.000Z'::TIMESTAMP
          and exists (
              SELECT
                  *
              FROM
                  lineitem
              WHERE
                  l_orderkey = o_orderkey
                  and l_commitdate < l_receiptdate
          )
      GROUP BY
          o_orderpriority
      ORDER BY
          o_orderpriority

  - name: q5_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      select
          n_name,
          sum(l_extendedprice * (1 - l_discount)) as revenue
      from
          customer, orders, lineitem, supplier, nation, region
      where
          c_custkey = o_custkey
          and l_orderkey = o_orderkey
          and l_suppkey = s_suppkey
          and c_nationkey = s_nationkey
          and s_nationkey = n_nationkey
          and n_regionkey = r_regionkey
          and r_name = 'AFRICA'
          and o_orderdate >= '1994-01-01T00:00:00.000Z'::TIMESTAMP
          and o_orderdate < '1995-01-01T00:00:00.000Z'::TIMESTAMP
      group by
          n_name
      order by
          revenue
      desc

  - name: q6_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      select
          sum(l_extendedprice*l_discount) as revenue
      from
          lineitem
      where
          l_shipdate >= '1994-01-01T00:00:00.000Z'::TIMESTAMP
          and l_shipdate < '1995-01-01T00:00:00.000Z'::TIMESTAMP
          and l_discount between 0.06 - 0.01 and 0.06 + 0.011 and l_quantity < 24

  - name: q7_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          supp_nation,
          cust_nation,
          l_year,
          sum(volume) as revenue
      FROM (
          SELECT
              n1.n_name as supp_nation,
              n2.n_name as cust_nation,
              EXTRACT(year from l_shipdate) as l_year,
              l_extendedprice * (1 - l_discount) as volume
          FROM
              supplier,
              lineitem,
              orders,
              customer,
              nation n1,
              nation n2
          WHERE
              s_suppkey = l_suppkey
              and o_orderkey = l_orderkey
              and c_custkey = o_custkey
              and s_nationkey = n1.n_nationkey
              and c_nationkey = n2.n_nationkey
              and ((n1.n_name = 'UNITED STATES' and n2.n_name = 'JAPAN')
              or (n1.n_name = 'JAPAN' and n2.n_name = 'UNITED STATES'))
              and l_shipdate between '1995-01-01T00:00:00.000Z'::TIMESTAMP
              and '1996-12-31T00:00:00.000Z'::TIMESTAMP
      ) as shipping
      GROUP BY
          supp_nation,
          cust_nation,
          l_year
      ORDER BY
          supp_nation,
          cust_nation,
          l_year

  - name: q8_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          o_year,
          sum(case
                when nation = 'UNITED STATES'
                then volume
                else 0
          end) / sum(volume) as mkt_share
      FROM (
          SELECT
              EXTRACT(year from o_orderdate) as o_year,
              l_extendedprice * (1-l_discount) as volume,
              n2.n_name as nation
          FROM
              part,
              supplier,
              lineitem,
              orders,
              customer,
              nation n1,
              nation n2,
              region
          WHERE
              p_partkey = l_partkey
              and s_suppkey = l_suppkey
              and l_orderkey = o_orderkey
              and o_custkey = c_custkey
              and c_nationkey = n1.n_nationkey
              and n1.n_regionkey = r_regionkey
              and r_name = 'EUROPE'
              and s_nationkey = n2.n_nationkey
              and o_orderdate between '1995-01-01T00:00:00.000Z'::TIMESTAMP
              and '1996-12-31T00:00:00.000Z'::TIMESTAMP
              and p_type = 'ECONOMY BRUSHED STEEL'
              ) as all_nations
          GROUP BY
              o_year
          ORDER BY
              o_year

  # SQL-1530: Update like clause argument to '%pink%' after fix
  - name: q9_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          nation,
          o_year,
          SUM(amount) AS sum_profit
      FROM (
          SELECT
              n_name AS nation,
              EXTRACT(YEAR FROM o_orderdate) AS o_year,
              l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity AS amount
          FROM
              part,
              supplier,
              lineitem,
              partsupp,
              orders,
              nation
          WHERE
              s_suppkey = l_suppkey
              AND ps_suppkey = l_suppkey
              AND ps_partkey = l_partkey
              AND p_partkey = l_partkey
              AND o_orderkey = l_orderkey
              AND s_nationkey = n_nationkey
              AND p_name LIKE '%pink%'
      ) AS profit
      GROUP BY
          nation,
          o_year
      ORDER BY
          nation,
          o_year DESC

  - name: q10_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          c_custkey,
          c_name,
          SUM(l_extendedprice * (1 - l_discount)) AS revenue,
          c_acctbal,
          n_name,
          c_address,
          c_phone,
          c_comment
      FROM
          customer,
          orders,
          lineitem,
          nation
      WHERE
          c_custkey = o_custkey
          AND l_orderkey = o_orderkey
          AND o_orderdate >= '1993-10-01T00:00:00.000Z'::TIMESTAMP
          AND o_orderdate < '1994-01-01T00:00:00.000Z'::TIMESTAMP
          AND l_returnflag = 'R'
          AND c_nationkey = n_nationkey
      GROUP BY
          c_custkey,
          c_name,
          c_acctbal,
          c_phone,
          n_name,
          c_address,
          c_comment
      ORDER BY
          revenue DESC
      LIMIT 20

  - name: q11_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          ps_partkey,
          SUM(ps_supplycost * ps_availqty) AS `value`
      FROM
          partsupp,
          supplier,
          nation
      WHERE
          ps_suppkey = s_suppkey
          AND s_nationkey = n_nationkey
          AND n_name = 'PERU'
      GROUP BY
          ps_partkey
      HAVING
          SUM(ps_supplycost * ps_availqty) > (
              SELECT
                  SUM(ps_supplycost * ps_availqty) * 0.0001
              FROM
                  partsupp,
                  supplier,
                  nation
              WHERE
                  ps_suppkey = s_suppkey
                  AND s_nationkey = n_nationkey
                  AND n_name = 'PERU'
          )
      ORDER BY
          `value` DESC

  - name: q12_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          l_shipmode,
          SUM(
              CASE
                  WHEN o_orderpriority ='1-URGENT' OR o_orderpriority ='2-HIGH'
                  THEN 1
                  ELSE 0
              END
          ) AS high_line_count,
          SUM(
              CASE
                  WHEN o_orderpriority <> '1-URGENT' AND o_orderpriority <> '2-HIGH'
                  THEN 1
                  ELSE 0
              END
          ) AS low_line_count
      FROM
          orders,
          lineitem
      WHERE
          o_orderkey = l_orderkey
          AND l_shipmode IN ('MAIL', 'SHIP')
          AND l_commitdate < l_receiptdate
          AND l_shipdate < l_commitdate
          AND l_receiptdate >= '1994-01-01T00:00:00.000Z'::TIMESTAMP
          AND l_receiptdate < '1995-01-01T00:00:00.000Z'::TIMESTAMP
      GROUP BY
          l_shipmode
      ORDER BY
          l_shipmode

  - name: q13_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          c_count,
          count(*) as custdist
      FROM (
          SELECT
              c_custkey,
              count(o_orderkey) as c_count
          FROM
              customer
          LEFT OUTER JOIN
              orders
          ON
              c_custkey = o_custkey
              and o_comment not like '%special%requests%'
          GROUP BY
              c_custkey
      ) as c_orders
      GROUP BY
          c_count
      ORDER BY
          custdist desc,
          c_count desc

  - name: q14_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          100.00 * sum(case
              when p_type like 'PROMO%'
              then l_extendedprice*(1-l_discount)
              else 0 end
          ) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
      FROM
          lineitem,
          part
      WHERE
          l_partkey = p_partkey
          and l_shipdate >= '1995-09-01T00:00:00.000Z'::TIMESTAMP
          and l_shipdate < '1995-10-01T00:00:00.000Z'::TIMESTAMP

  - name: q15_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_q15_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          s_suppkey,
          s_name,
          s_address,
          s_phone,
          total_revenue
      FROM
          supplier,
          revenue
      WHERE
          s_suppkey = supplier_no AND total_revenue = (
              SELECT
                  MAX(revenue.total_revenue)
              FROM
                  revenue
          )
      ORDER BY
          s_suppkey

  - name: q16_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          p_brand,
          p_type,
          p_size,
          COUNT(DISTINCT ps_suppkey) AS supplier_cnt
      FROM
          partsupp,
          part
      WHERE
          p_partkey = ps_partkey
          AND p_brand <> 'Brand#45'
          AND p_type NOT LIKE 'MEDIUM POLISHED%'
          AND p_size IN (49, 14, 23, 45, 19, 3, 36, 9)
          AND ps_suppkey NOT IN (
              SELECT
                  s_suppkey
              FROM
                  supplier
              WHERE
                  s_comment LIKE '%Customer%Complaints%'
          )
      GROUP BY
          p_brand, p_type, p_size
      ORDER BY
          supplier_cnt DESC,
          p_brand,
          p_type,
          p_size

  - name: q17_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          sum(l_extendedprice) / 7.0 as avg_yearly
      FROM
          lineitem,
          part
      WHERE
          p_partkey = l_partkey
          and p_brand = 'Brand#53'
          and p_container = 'MED BOX'
          and l_quantity < (
              SELECT
                  0.2 * avg(l.l_quantity)
              FROM
                  lineitem as l
              WHERE
                  l.l_partkey = p_partkey
          )

  # skip reason: SQL-1635 - query fails to parse
  - name: q18_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          c_name,
          c_custkey,
          o_orderkey,
          o_orderdate,
          o_totalprice,
          sum(l_quantity) as `sum(l_quantity)`
      FROM
          customer,
          orders,
          lineitem
      WHERE
          o_orderkey in (
              SELECT
                  l.l_orderkey
              FROM
                  lineitem as l
              GROUP BY
                  l.l_orderkey
              HAVING
                  sum(l.l_quantity) > 260
          )
          and c_custkey = o_custkey
          and o_orderkey = l_orderkey
      GROUP BY
          c_name,
          c_custkey,
          o_orderkey,
          o_orderdate,
          o_totalprice
      ORDER BY
          o_totalprice desc,
          o_orderdate
      LIMIT 100

  - name: q19_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          sum(l_extendedprice * (1 - l_discount) ) as revenue
      FROM
          lineitem,
          part
      WHERE
          (
              p_partkey = l_partkey
              and p_brand = 'Brand#12'
              and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
              and l_quantity >= 1
              and l_quantity <= 1 + 10
              and p_size between 1 and 5
              and l_shipmode in ('AIR', 'AIR REG')
              and l_shipinstruct = 'DELIVER IN PERSON'
          )
          or (
              p_partkey = l_partkey
              and p_brand = 'Brand#24'
              and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
              and l_quantity >= 30
              and l_quantity <= 30 + 10
              and p_size between 1 and 10
              and l_shipmode in ('AIR', 'AIR REG')
              and l_shipinstruct = 'DELIVER IN PERSON'
          )
          or (
              p_partkey = l_partkey
              and p_brand = 'Brand#34'
              and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG', 'WRAP BOX')
              and l_quantity >= 20
              and l_quantity <= 20 + 10
              and p_size between 1 and 15
              and l_shipmode in ('AIR', 'AIR REG')
              and l_shipinstruct = 'DELIVER IN PERSON'
          )

  - name: q20_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
        SELECT
            s_name,
            s_address
        FROM
            supplier,
            nation
        WHERE
            s_suppkey IN (
                SELECT
                    ps_suppkey
                FROM
                    partsupp
                WHERE
                    ps_partkey IN (
                        SELECT
                            p_partkey
                        FROM
                            part
                        WHERE
                            p_name like '%lavender%'
                    )
                    and ps_availqty > (
                        SELECT
                            0.5 * sum(l_quantity)
                        FROM
                            lineitem
                        WHERE
                            l_partkey = ps_partkey
                            and l_suppkey = ps_suppkey
                            and l_shipdate >= '1994-01-01T00:00:00.000Z'::TIMESTAMP
                            and l_shipdate < '1995-01-01T00:00:00.000Z'::TIMESTAMP
                    )
            )
            and s_nationkey = n_nationkey
            and n_name = 'KENYA'
        ORDER BY
            s_name

  - name: q21_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          s_name,
          COUNT(*) AS numwait
      FROM
          supplier,
          lineitem l1,
          orders,
          nation
      WHERE
          s_suppkey = l1.l_suppkey
          AND o_orderkey = l1.l_orderkey
          AND o_orderstatus = 'F'
          AND l1.l_receiptdate > l1.l_commitdate
          AND EXISTS (
              SELECT
                  *
              FROM
                  lineitem l2
              WHERE
                  l2.l_orderkey = l1.l_orderkey
                  AND l2.l_suppkey <> l1.l_suppkey
          )
          AND NOT EXISTS (
              SELECT
                  *
              FROM
                  lineitem l3
              WHERE
                  l3.l_orderkey = l1.l_orderkey
                  AND l3.l_suppkey <> l1.l_suppkey
                  AND l3.l_receiptdate > l3.l_commitdate
          )
          AND s_nationkey = n_nationkey
          AND n_name = 'ARGENTINA'
      GROUP BY
          s_name
      ORDER BY
          numwait DESC,
          s_name

  - name: q22_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
        SELECT
            cntrycode,
            count(*) as numcust,
            sum(c_acctbal) as totacctbal
        FROM
            (
            SELECT
                substring(customer.c_phone, 0, 2) as cntrycode, c_acctbal
            FROM
                customer
            WHERE
                substring(customer.c_phone, 0, 2) IN ('13','31','23','29','30','18','17')
                AND customer.c_acctbal > (
                    SELECT
                        avg(c.c_acctbal)
                    FROM
                        customer as c
                    WHERE
                        c.c_acctbal > 0.00
                        AND substring(c.c_phone, 0, 2) IN ('13','31','23','29','30','18','17')
                )
                AND NOT EXISTS (
                    SELECT
                        *
                    FROM
                        orders
                    WHERE
                        o_custkey = c_custkey
                )
            ) as custsale
        GROUP BY
            cntrycode
        ORDER BY
            cntrycode


  - name: q19_custom_normalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT
          sum(l_extendedprice * (1 - l_discount) ) as revenue
      FROM
          part,
          lineitem
      WHERE
          (
              p_partkey = l_partkey
              and p_brand = 'Brand#12'
              and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
              and l_quantity >= 1
              and l_quantity <= 1 + 10
              and p_size between 1 and 5
              and l_shipmode in ('AIR', 'AIR REG')
              and l_shipinstruct = 'DELIVER IN PERSON'
          )
          or (
              p_partkey = l_partkey
              and p_brand = 'Brand#24'
              and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
              and l_quantity >= 30
              and l_quantity <= 30 + 10
              and p_size between 1 and 10
              and l_shipmode in ('AIR', 'AIR REG')
              and l_shipinstruct = 'DELIVER IN PERSON'
          )
          or (
              p_partkey = l_partkey
              and p_brand = 'Brand#34'
              and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG', 'WRAP BOX')
              and l_quantity >= 20
              and l_quantity <= 20 + 10
              and p_size between 1 and 15
              and l_shipmode in ('AIR', 'AIR REG')
              and l_shipinstruct = 'DELIVER IN PERSON'
          )

  - name: q1_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          l_returnflag,
          l_linestatus,
          sum(l_quantity) as sum_qty,
          sum(l_extendedprice) as sum_base_price,
          sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
          sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
          avg(l_quantity) as avg_qty,
          avg(l_extendedprice) as avg_price,
          avg(l_discount) as avg_disc,
          count(*) as count_order
      FROM
          lineitem
      WHERE
          l_shipdate <= '1998-9-01T00:00:00.000Z'::TIMESTAMP
      GROUP BY
          l_returnflag,
          l_linestatus
      ORDER BY
          l_returnflag,
          l_linestatus

  - name: q2_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          s_acctbal,
          s_name,
          n_name,
          p_partkey,
          p_mfgr,
          s_address,
          s_phone,
          s_comment
      FROM
          part,
          supplier,
          partsupp,
          nation,
          region
      WHERE
          p_partkey = ps_partkey
          and supplier.s_suppkey = partsupp.ps_suppkey
          and p_size = 20
          and p_type like '%STEEL'
          and supplier.s_nationkey = nation.n_nationkey
          and nation.n_regionkey = r_regionkey
          and region.r_name = 'AMERICA'
          and partsupp.ps_supplycost = (
              SELECT
                  min(partsupp.ps_supplycost)
              FROM
                  partsupp,
                  supplier,
                  nation,
                  region
              WHERE
                  p_partkey = partsupp.ps_partkey
                  and supplier.s_suppkey = partsupp.ps_suppkey
                  and supplier.s_nationkey = nation.n_nationkey
                  and nation.n_regionkey = region.r_regionkey
                  and region.r_name = 'AMERICA'
          )
      ORDER BY
          s_acctbal desc,
          n_name,
          s_name,
          p_partkey
      LIMIT 100


  - name: q3_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          l_orderkey,
          sum(l_extendedprice*(1-l_discount)) as revenue,
          o_orderdate,
          o_shippriority
      FROM
          customer,
          orders,
          lineitem
      WHERE
          customer.c_mktsegment = 'BUILDING'
          and customer.c_custkey = orders.o_custkey
          and l_orderkey = o_orderkey
          and o_orderdate < '1995-03-15T00:00:00.000Z'::TIMESTAMP
          and l_shipdate > '1995-03-15T00:00:00.000Z'::TIMESTAMP
      GROUP BY
          l_orderkey,
          o_orderdate,
          o_shippriority
      ORDER BY
          revenue desc,
          o_orderdate

  - name: q4_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          o_orderpriority,
          count(*) as order_count
      FROM
          orders
      WHERE
          o_orderdate >= '1993-07-01T00:00:00.000Z'::TIMESTAMP
          and o_orderdate < '1993-10-01T00:00:00.000Z'::TIMESTAMP
          and exists (
              SELECT
                  *
              FROM
                  lineitem
              WHERE
                  l_orderkey = o_orderkey
                  and l_commitdate < l_receiptdate
          )
      GROUP BY
          o_orderpriority
      ORDER BY
          o_orderpriority

  - name: q5_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      select DISTINCT
          n_name,
          sum(l_extendedprice * (1 - l_discount)) as revenue
      from
          customer, orders, lineitem, supplier, nation, region
      where
          c_custkey = o_custkey
          and l_orderkey = o_orderkey
          and l_suppkey = s_suppkey
          and c_nationkey = s_nationkey
          and s_nationkey = n_nationkey
          and n_regionkey = r_regionkey
          and r_name = 'AFRICA'
          and o_orderdate >= '1994-01-01T00:00:00.000Z'::TIMESTAMP
          and o_orderdate < '1995-01-01T00:00:00.000Z'::TIMESTAMP
      group by
          n_name
      order by
          revenue
      desc

  - name: q6_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      select DISTINCT
          sum(l_extendedprice*l_discount) as revenue
      from
          lineitem
      where
          l_shipdate >= '1994-01-01T00:00:00.000Z'::TIMESTAMP
          and l_shipdate < '1995-01-01T00:00:00.000Z'::TIMESTAMP
          and l_discount between 0.06 - 0.01 and 0.06 + 0.011 and l_quantity < 24

  - name: q7_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          supp_nation,
          cust_nation,
          l_year,
          sum(volume) as revenue
      FROM (
          SELECT
              n1.n_name as supp_nation,
              n2.n_name as cust_nation,
              EXTRACT(year from l_shipdate) as l_year,
              l_extendedprice * (1 - l_discount) as volume
          FROM
              supplier,
              lineitem,
              orders,
              customer,
              nation n1,
              nation n2
          WHERE
              s_suppkey = l_suppkey
              and o_orderkey = l_orderkey
              and c_custkey = o_custkey
              and s_nationkey = n1.n_nationkey
              and c_nationkey = n2.n_nationkey
              and ((n1.n_name = 'UNITED STATES' and n2.n_name = 'JAPAN')
              or (n1.n_name = 'JAPAN' and n2.n_name = 'UNITED STATES'))
              and l_shipdate between '1995-01-01T00:00:00.000Z'::TIMESTAMP
              and '1996-12-31T00:00:00.000Z'::TIMESTAMP
      ) as shipping
      GROUP BY
          supp_nation,
          cust_nation,
          l_year
      ORDER BY
          supp_nation,
          cust_nation,
          l_year

  - name: q8_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          o_year,
          sum(case
                when nation = 'UNITED STATES'
                then volume
                else 0
          end) / sum(volume) as mkt_share
      FROM (
          SELECT
              EXTRACT(year from o_orderdate) as o_year,
              l_extendedprice * (1-l_discount) as volume,
              n2.n_name as nation
          FROM
              part,
              supplier,
              lineitem,
              orders,
              customer,
              nation n1,
              nation n2,
              region
          WHERE
              p_partkey = l_partkey
              and s_suppkey = l_suppkey
              and l_orderkey = o_orderkey
              and o_custkey = c_custkey
              and c_nationkey = n1.n_nationkey
              and n1.n_regionkey = r_regionkey
              and r_name = 'EUROPE'
              and s_nationkey = n2.n_nationkey
              and o_orderdate between '1995-01-01T00:00:00.000Z'::TIMESTAMP
              and '1996-12-31T00:00:00.000Z'::TIMESTAMP
              and p_type = 'ECONOMY BRUSHED STEEL'
              ) as all_nations
          GROUP BY
              o_year
          ORDER BY
              o_year

  - name: q9_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          nation,
          o_year,
          SUM(amount) AS sum_profit
      FROM (
          SELECT
              n_name AS nation,
              EXTRACT(YEAR FROM o_orderdate) AS o_year,
              l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity AS amount
          FROM
              part,
              supplier,
              lineitem,
              partsupp,
              orders,
              nation
          WHERE
              s_suppkey = l_suppkey
              AND ps_suppkey = l_suppkey
              AND ps_partkey = l_partkey
              AND p_partkey = l_partkey
              AND o_orderkey = l_orderkey
              AND s_nationkey = n_nationkey
              AND p_name LIKE '%pink%'
      ) AS profit
      GROUP BY
          nation,
          o_year
      ORDER BY
          nation,
          o_year DESC

  - name: q10_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          c_custkey,
          c_name,
          SUM(l_extendedprice * (1 - l_discount)) AS revenue,
          c_acctbal,
          n_name,
          c_address,
          c_phone,
          c_comment
      FROM
          customer,
          orders,
          lineitem,
          nation
      WHERE
          c_custkey = o_custkey
          AND l_orderkey = o_orderkey
          AND o_orderdate >= '1993-10-01T00:00:00.000Z'::TIMESTAMP
          AND o_orderdate < '1994-01-01T00:00:00.000Z'::TIMESTAMP
          AND l_returnflag = 'R'
          AND c_nationkey = n_nationkey
      GROUP BY
          c_custkey,
          c_name,
          c_acctbal,
          c_phone,
          n_name,
          c_address,
          c_comment
      ORDER BY
          revenue DESC
      LIMIT 20

  - name: q11_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          ps_partkey,
          SUM(ps_supplycost * ps_availqty) AS `value`
      FROM
          partsupp,
          supplier,
          nation
      WHERE
          ps_suppkey = s_suppkey
          AND s_nationkey = n_nationkey
          AND n_name = 'PERU'
      GROUP BY
          ps_partkey
      HAVING
          SUM(ps_supplycost * ps_availqty) > (
              SELECT
                  SUM(ps_supplycost * ps_availqty) * 0.0001
              FROM
                  partsupp,
                  supplier,
                  nation
              WHERE
                  ps_suppkey = s_suppkey
                  AND s_nationkey = n_nationkey
                  AND n_name = 'PERU'
          )
      ORDER BY
          `value` DESC

  - name: q12_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          l_shipmode,
          SUM(
              CASE
                  WHEN o_orderpriority ='1-URGENT' OR o_orderpriority ='2-HIGH'
                  THEN 1
                  ELSE 0
              END
          ) AS high_line_count,
          SUM(
              CASE
                  WHEN o_orderpriority <> '1-URGENT' AND o_orderpriority <> '2-HIGH'
                  THEN 1
                  ELSE 0
              END
          ) AS low_line_count
      FROM
          orders,
          lineitem
      WHERE
          o_orderkey = l_orderkey
          AND l_shipmode IN ('MAIL', 'SHIP')
          AND l_commitdate < l_receiptdate
          AND l_shipdate < l_commitdate
          AND l_receiptdate >= '1994-01-01T00:00:00.000Z'::TIMESTAMP
          AND l_receiptdate < '1995-01-01T00:00:00.000Z'::TIMESTAMP
      GROUP BY
          l_shipmode
      ORDER BY
          l_shipmode

  - name: q13_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          c_count,
          count(*) as custdist
      FROM (
          SELECT
              c_custkey,
              count(o_orderkey) as c_count
          FROM
              customer
          LEFT OUTER JOIN
              orders
          ON
              c_custkey = o_custkey
              and o_comment not like '%special%requests%'
          GROUP BY
              c_custkey
      ) as c_orders
      GROUP BY
          c_count
      ORDER BY
          custdist desc,
          c_count desc

  - name: q14_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          100.00 * sum(case
              when p_type like 'PROMO%'
              then l_extendedprice*(1-l_discount)
              else 0 end
          ) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
      FROM
          lineitem,
          part
      WHERE
          l_partkey = p_partkey
          and l_shipdate >= '1995-09-01T00:00:00.000Z'::TIMESTAMP
          and l_shipdate < '1995-10-01T00:00:00.000Z'::TIMESTAMP

  - name: q15_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_q15_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          s_suppkey,
          s_name,
          s_address,
          s_phone,
          total_revenue
      FROM
          supplier,
          revenue
      WHERE
          s_suppkey = supplier_no AND total_revenue = (
              SELECT
                  MAX(revenue.total_revenue)
              FROM
                  revenue
          )
      ORDER BY
          s_suppkey

  - name: q16_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          p_brand,
          p_type,
          p_size,
          COUNT(DISTINCT ps_suppkey) AS supplier_cnt
      FROM
          partsupp,
          part
      WHERE
          p_partkey = ps_partkey
          AND p_brand <> 'Brand#45'
          AND p_type NOT LIKE 'MEDIUM POLISHED%'
          AND p_size IN (49, 14, 23, 45, 19, 3, 36, 9)
          AND ps_suppkey NOT IN (
              SELECT
                  s_suppkey
              FROM
                  supplier
              WHERE
                  s_comment LIKE '%Customer%Complaints%'
          )
      GROUP BY
          p_brand, p_type, p_size
      ORDER BY
          supplier_cnt DESC,
          p_brand,
          p_type,
          p_size

  - name: q17_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          sum(l_extendedprice) / 7.0 as avg_yearly
      FROM
          lineitem,
          part
      WHERE
          p_partkey = l_partkey
          and p_brand = 'Brand#53'
          and p_container = 'MED BOX'
          and l_quantity < (
              SELECT
                  0.2 * avg(l.l_quantity)
              FROM
                  lineitem as l
              WHERE
                  l.l_partkey = p_partkey
          )

  # skip reason: SQL-1635 - query fails to parse
  - name: q18_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          c_name,
          c_custkey,
          o_orderkey,
          o_orderdate,
          o_totalprice,
          sum(l_quantity) as `sum(l_quantity)`
      FROM
          customer,
          orders,
          lineitem
      WHERE
          o_orderkey in (
              SELECT
                  l.l_orderkey
              FROM
                  lineitem as l
              GROUP BY
                  l.l_orderkey
              HAVING
                  sum(l.l_quantity) > 260
          )
          and c_custkey = o_custkey
          and o_orderkey = l_orderkey
      GROUP BY
          c_name,
          c_custkey,
          o_orderkey,
          o_orderdate,
          o_totalprice
      ORDER BY
          o_totalprice desc,
          o_orderdate
      LIMIT 100

  - name: q19_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          sum(l_extendedprice * (1 - l_discount) ) as revenue
      FROM
          lineitem,
          part
      WHERE
          (
              p_partkey = l_partkey
              and p_brand = 'Brand#12'
              and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
              and l_quantity >= 1
              and l_quantity <= 1 + 10
              and p_size between 1 and 5
              and l_shipmode in ('AIR', 'AIR REG')
              and l_shipinstruct = 'DELIVER IN PERSON'
          )
          or (
              p_partkey = l_partkey
              and p_brand = 'Brand#24'
              and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
              and l_quantity >= 30
              and l_quantity <= 30 + 10
              and p_size between 1 and 10
              and l_shipmode in ('AIR', 'AIR REG')
              and l_shipinstruct = 'DELIVER IN PERSON'
          )
          or (
              p_partkey = l_partkey
              and p_brand = 'Brand#34'
              and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG', 'WRAP BOX')
              and l_quantity >= 20
              and l_quantity <= 20 + 10
              and p_size between 1 and 15
              and l_shipmode in ('AIR', 'AIR REG')
              and l_shipinstruct = 'DELIVER IN PERSON'
          )

  - name: q20_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
        SELECT DISTINCT
            s_name,
            s_address
        FROM
            supplier,
            nation
        WHERE
            s_suppkey IN (
                SELECT
                    ps_suppkey
                FROM
                    partsupp
                WHERE
                    ps_partkey IN (
                        SELECT
                            p_partkey
                        FROM
                            part
                        WHERE
                            p_name like '%lavender%'
                    )
                    and ps_availqty > (
                        SELECT
                            0.5 * sum(l_quantity)
                        FROM
                            lineitem
                        WHERE
                            l_partkey = ps_partkey
                            and l_suppkey = ps_suppkey
                            and l_shipdate >= '1994-01-01T00:00:00.000Z'::TIMESTAMP
                            and l_shipdate < '1995-01-01T00:00:00.000Z'::TIMESTAMP
                    )
            )
            and s_nationkey = n_nationkey
            and n_name = 'KENYA'
        ORDER BY
            s_name

  - name: q21_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          s_name,
          COUNT(*) AS numwait
      FROM
          supplier,
          lineitem l1,
          orders,
          nation
      WHERE
          s_suppkey = l1.l_suppkey
          AND o_orderkey = l1.l_orderkey
          AND o_orderstatus = 'F'
          AND l1.l_receiptdate > l1.l_commitdate
          AND EXISTS (
              SELECT
                  *
              FROM
                  lineitem l2
              WHERE
                  l2.l_orderkey = l1.l_orderkey
                  AND l2.l_suppkey <> l1.l_suppkey
          )
          AND NOT EXISTS (
              SELECT
                  *
              FROM
                  lineitem l3
              WHERE
                  l3.l_orderkey = l1.l_orderkey
                  AND l3.l_suppkey <> l1.l_suppkey
                  AND l3.l_receiptdate > l3.l_commitdate
          )
          AND s_nationkey = n_nationkey
          AND n_name = 'ARGENTINA'
      GROUP BY
          s_name
      ORDER BY
          numwait DESC,
          s_name

  - name: q22_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
        SELECT DISTINCT
            cntrycode,
            count(*) as numcust,
            sum(c_acctbal) as totacctbal
        FROM
            (
            SELECT
                substring(customer.c_phone, 0, 2) as cntrycode, c_acctbal
            FROM
                customer
            WHERE
                substring(customer.c_phone, 0, 2) IN ('13','31','23','29','30','18','17')
                AND customer.c_acctbal > (
                    SELECT
                        avg(c.c_acctbal)
                    FROM
                        customer as c
                    WHERE
                        c.c_acctbal > 0.00
                        AND substring(c.c_phone, 0, 2) IN ('13','31','23','29','30','18','17')
                )
                AND NOT EXISTS (
                    SELECT
                        *
                    FROM
                        orders
                    WHERE
                        o_custkey = c_custkey
                )
            ) as custsale
        GROUP BY
            cntrycode
        ORDER BY
            cntrycode


  - name: q19_custom_normalized_distinct
    db: tpch
    phase_template: ./benchmark/atlas_sql/normalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/normalized/phase/
    catalog_schema: *normalized_catalog_schema
    query: >
      SELECT DISTINCT
          sum(l_extendedprice * (1 - l_discount) ) as revenue
      FROM
          part,
          lineitem
      WHERE
          (
              p_partkey = l_partkey
              and p_brand = 'Brand#12'
              and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
              and l_quantity >= 1
              and l_quantity <= 1 + 10
              and p_size between 1 and 5
              and l_shipmode in ('AIR', 'AIR REG')
              and l_shipinstruct = 'DELIVER IN PERSON'
          )
          or (
              p_partkey = l_partkey
              and p_brand = 'Brand#24'
              and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
              and l_quantity >= 30
              and l_quantity <= 30 + 10
              and p_size between 1 and 10
              and l_shipmode in ('AIR', 'AIR REG')
              and l_shipinstruct = 'DELIVER IN PERSON'
          )
          or (
              p_partkey = l_partkey
              and p_brand = 'Brand#34'
              and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG', 'WRAP BOX')
              and l_quantity >= 20
              and l_quantity <= 20 + 10
              and p_size between 1 and 15
              and l_shipmode in ('AIR', 'AIR REG')
              and l_shipinstruct = 'DELIVER IN PERSON'
          )

  # ----- Denormalized Queries -----
  - name: q1_denormalized
    db: tpch
    phase_template: ./benchmark/atlas_sql/denormalized/phase_template.yml
    workload_dir: ./benchmark/atlas_sql/denormalized/phase/
    catalog_schema: *denormalized_catalog_schema
    query: >
      SELECT
          orders_lineitem_l_returnflag as l_returnflag,
          orders_lineitem_l_linestatus as l_linestatus,
          sum(orders_lineitem_l_quantity) as sum_quantity,
          sum(orders_lineitem_l_extendedprice) as sum_base_price,
          sum(orders_lineitem_l_extendedprice * (1 - orders_lineitem_l_discount)) as sum_disc_price,
          sum(orders_lineitem_l_extendedprice * (1 - orders_lineitem_l_discount) * (1 + orders_lineitem_l_tax)) as sum_charge,
          avg(orders_lineitem_l_quantity) as avg_qty,
          avg(orders_lineitem_l_extendedprice) as avg_price,
          avg(orders_lineitem_l_discount) as avg_disc,
          count(*) as count_order
      FROM
          FLATTEN(UNWIND(
              FLATTEN(UNWIND(customer WITH PATH => orders))
          WITH PATH => orders_lineitem))
      WHERE
          orders_lineitem_l_shipdate <= DATEADD(DAY, -90, '1998-12-01T00:00:00.000Z'::TIMESTAMP)
      GROUP BY
          l_returnflag, l_linestatus
      ORDER BY
          l_returnflag, l_linestatus
