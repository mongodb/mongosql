functions:
  "run mongodb schema builder test":
    - command: shell.exec
      type: test
      params:
        shell: bash
        working_dir: mongosql-rs
        script: |
          ${prepare_shell}
          cargo test --package schema-builder-tool
          cargo test --package schema-builder-library --lib

  "upload schema builder executable":
    - command: s3.put
      params:
        build_variants:
          [ "dcsb-macos", "dcsb-macos-arm","dcsb-ubuntu2004" ]
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: mongosql-rs/target/release/schema-builder-tool
        remote_file: mongosql-rs/artifacts/${version_id}/${build_variant}/schema-builder-tool
        bucket: mciuploads
        permissions: public-read
        content_type: application/octet-stream
    - command: s3.put
      params:
        build_variants:
          - dcsb-windows-64
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: mongosql-rs/target/release/schema-builder-tool.exe
        remote_file: mongosql-rs/artifacts/${version_id}/${build_variant}/schema-builder-tool.exe
        bucket: mciuploads
        permissions: public-read
        content_type: application/octet-stream

  "sign dcsb windows":
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        remote_file: mongosql-rs/artifacts/${version_id}/dcsb-windows-64/schema-builder-tool.exe
        local_file: mongosql-rs/schema-builder-tool.exe
        bucket: mciuploads
    - command: shell.exec
      type: system
      retry_on_failure: true
      params:
        silent: true
        script: |
          docker login --username ${sql_engines_artifactory_username} --password ${sql_engines_artifactory_auth_token} ${release_tools_container_registry}
    - command: shell.exec
      type: system
      params:
        silent: true
        env:
          GRS_CONFIG_USER1_USERNAME: "${garasign_username}"
          GRS_CONFIG_USER1_PASSWORD: "${garasign_password}"
        working_dir: mongosql-rs
        script: |
          docker run \
            -e GRS_CONFIG_USER1_USERNAME \
            -e GRS_CONFIG_USER1_PASSWORD \
            --rm \
            -v $(pwd):$(pwd) -w $(pwd) \
            ${garasign_jsign_image} \
            /bin/bash -c "jsign -a mongo-authenticode-2021 --replace --tsaurl http://timestamp.digicert.com -d SHA-256 schema-builder-tool.exe"
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: mongosql-rs/schema-builder-tool.exe
        remote_file: mongosql-rs/artifacts/${version_id}/dcsb-windows-64/schema-builder-tool-signed.exe
        bucket: mciuploads
        permissions: public-read
        content_type: application/octet-stream

  "sign dcsb linux":
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        remote_file: mongosql-rs/artifacts/${version_id}/dcsb-ubuntu2004/schema-builder-tool
        local_file: mongosql-rs/schema-builder-tool-linux
        bucket: mciuploads
    - command: shell.exec
      type: system
      retry_on_failure: true
      params:
        silent: true
        script: |
          docker login --username ${sql_engines_artifactory_username} --password ${sql_engines_artifactory_auth_token} ${release_tools_container_registry}
    - command: shell.exec
      type: system
      params:
        silent: true
        env:
          GRS_CONFIG_USER1_USERNAME: "${garasign_username}"
          GRS_CONFIG_USER1_PASSWORD: "${garasign_password}"
        working_dir: mongosql-rs
        script: |
          docker run \
            -e GRS_CONFIG_USER1_USERNAME \
            -e GRS_CONFIG_USER1_PASSWORD \
            --rm \
            -v $(pwd):$(pwd) -w $(pwd) \
            ${garasign_gpg_image} \
            /bin/bash -c "gpgloader && gpg --yes -v --armor -o schema-builder-tool-linux.sig --detach-sign schema-builder-tool-linux"
    - command: shell.exec
      type: system
      params:
        silent: false
        env:
          GRS_CONFIG_USER1_USERNAME: "${garasign_username}"
          GRS_CONFIG_USER1_PASSWORD: "${garasign_password}"
        working_dir: mongosql-rs
        script: |
          docker run \
            -e GRS_CONFIG_USER1_USERNAME \
            -e GRS_CONFIG_USER1_PASSWORD \
            --rm \
            -v $(pwd):$(pwd) -w $(pwd) \
            ${garasign_gpg_image} \
            /bin/bash -c "gpgloader && gpg --verify schema-builder-tool-linux.sig schema-builder-tool-linux"
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: mongosql-rs/schema-builder-tool-linux.sig
        remote_file: mongosql-rs/artifacts/${version_id}/dcsb-ubuntu2004/schema-builder-tool-linux.sig
        bucket: mciuploads
        permissions: public-read
        content_type: application/octet-stream

  "sign dcsb macos":
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        remote_file: mongosql-rs/artifacts/${version_id}/${build_variant}/schema-builder-tool
        local_file: mongosql-rs/schema-builder-tool-macos
        bucket: mciuploads
    - command: subprocess.exec
      params:
        binary: bash
        working_dir: mongosql-rs
        args:
          - "./evergreen/resources/sign_macos_dcsb_zip.sh"
        add_expansions_to_env: true
    - command: s3.put
      params:
        build_variants: [ "dcsb-macos" ]
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: mongosql-rs/schema-builder-tool-macos
        remote_file: mongosql-rs/artifacts/${version_id}/${build_variant}/schema-builder-tool-macos-signed
        bucket: mciuploads
        permissions: public-read
        content_type: application/octet-stream
        display_name: schema-builder-tool-macos-signed
    - command: s3.put
      params:
        build_variants: [ "dcsb-macos-arm" ]
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: mongosql-rs/schema-builder-tool-macos
        remote_file: mongosql-rs/artifacts/${version_id}/${build_variant}/schema-builder-tool-macos-arm-signed
        bucket: mciuploads
        permissions: public-read
        content_type: application/octet-stream
        display_name: schema-builder-tool-macos-arm-signed

  "perform schema builder release":
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        remote_file: mongosql-rs/artifacts/${version_id}/dcsb-macos/schema-builder-tool-macos-signed
        local_file: mongosql-rs/release/dcsb-macos/schema-builder-tool-macos-signed
        bucket: mciuploads
    - command: s3.put
      params:
        aws_key: ${release_aws_key}
        aws_secret: ${release_aws_secret}
        local_file: mongosql-rs/release/dcsb-macos/schema-builder-tool-macos-signed
        remote_file: schema-builder-tool/schema-builder-tool-macos
        bucket: translators-connectors-releases
        permissions: public-read
        skip_existing: false
        content_type: application/octet-stream
        display_name: schema-builder-tool-macos
    - command: s3.put
      params:
        aws_key: ${release_aws_key}
        aws_secret: ${release_aws_secret}
        local_file: mongosql-rs/release/dcsb-macos/schema-builder-tool-macos-signed
        remote_file: schema-builder-tool/schema-builder-tool-v${release_version}-macos
        bucket: translators-connectors-releases
        permissions: public-read
        content_type: application/octet-stream
        display_name: schema-builder-tool-v${release_version}-macos
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        remote_file: mongosql-rs/artifacts/${version_id}/dcsb-macos-arm/schema-builder-tool-macos-arm-signed
        local_file: mongosql-rs/release/dcsb-macos-arm/schema-builder-tool-macos-arm-signed
        bucket: mciuploads
    - command: s3.put
      params:
        aws_key: ${release_aws_key}
        aws_secret: ${release_aws_secret}
        local_file: mongosql-rs/release/dcsb-macos-arm/schema-builder-tool-macos-arm-signed
        remote_file: schema-builder-tool/schema-builder-tool-macos-arm
        bucket: translators-connectors-releases
        permissions: public-read
        skip_existing: false
        content_type: application/octet-stream
        display_name: schema-builder-tool-macos-arm
    - command: s3.put
      params:
        aws_key: ${release_aws_key}
        aws_secret: ${release_aws_secret}
        local_file: mongosql-rs/release/dcsb-macos-arm/schema-builder-tool-macos-arm-signed
        remote_file: schema-builder-tool/schema-builder-tool-v${release_version}-macos-arm
        bucket: translators-connectors-releases
        permissions: public-read
        content_type: application/octet-stream
        display_name: schema-builder-tool-v${release_version}-macos-arm
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        remote_file: mongosql-rs/artifacts/${version_id}/dcsb-ubuntu2004/schema-builder-tool
        local_file: mongosql-rs/release/dcsb-ubuntu2004/schema-builder-tool
        bucket: mciuploads
    - command: s3.put
      params:
        aws_key: ${release_aws_key}
        aws_secret: ${release_aws_secret}
        local_file: mongosql-rs/release/dcsb-ubuntu2004/schema-builder-tool
        remote_file: schema-builder-tool/schema-builder-tool-linux
        bucket: translators-connectors-releases
        permissions: public-read
        skip_existing: false
        content_type: application/octet-stream
        display_name: schema-builder-tool-linux
    - command: s3.put
      params:
        aws_key: ${release_aws_key}
        aws_secret: ${release_aws_secret}
        local_file: mongosql-rs/release/dcsb-ubuntu2004/schema-builder-tool
        remote_file: schema-builder-tool/schema-builder-tool-v${release_version}-linux
        bucket: translators-connectors-releases
        permissions: public-read
        content_type: application/octet-stream
        display_name: schema-builder-tool-v${release_version}-linux
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        remote_file: mongosql-rs/artifacts/${version_id}/dcsb-ubuntu2004/schema-builder-tool-linux.sig
        local_file: mongosql-rs/release/dcsb-ubuntu2004/schema-builder-tool-linux.sig
        bucket: mciuploads
    - command: s3.put
      params:
        aws_key: ${release_aws_key}
        aws_secret: ${release_aws_secret}
        local_file: mongosql-rs/release/dcsb-ubuntu2004/schema-builder-tool-linux.sig
        remote_file: schema-builder-tool/schema-builder-tool-linux.sig
        bucket: translators-connectors-releases
        permissions: public-read
        skip_existing: false
        content_type: application/octet-stream
        display_name: schema-builder-tool-linux.sig
    - command: s3.put
      params:
        aws_key: ${release_aws_key}
        aws_secret: ${release_aws_secret}
        local_file: mongosql-rs/release/dcsb-ubuntu2004/schema-builder-tool-linux.sig
        remote_file: schema-builder-tool/schema-builder-tool-v${release_version}-linux.sig
        bucket: translators-connectors-releases
        permissions: public-read
        content_type: application/octet-stream
        display_name: schema-builder-tool-v${release_version}-linux.sig
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        remote_file: mongosql-rs/artifacts/${version_id}/dcsb-windows-64/schema-builder-tool.exe
        local_file: mongosql-rs/release/dcsb-windows-64/schema-builder-tool-signed.exe
        bucket: mciuploads
    - command: s3.put
      params:
        aws_key: ${release_aws_key}
        aws_secret: ${release_aws_secret}
        local_file: mongosql-rs/release/dcsb-windows-64/schema-builder-tool-signed.exe
        remote_file: schema-builder-tool/schema-builder-tool-win.exe
        bucket: translators-connectors-releases
        permissions: public-read
        skip_existing: false
        content_type: application/octet-stream
        display_name: schema-builder-tool-win.exe
    - command: s3.put
      params:
        aws_key: ${release_aws_key}
        aws_secret: ${release_aws_secret}
        local_file: mongosql-rs/release/dcsb-windows-64/schema-builder-tool-signed.exe
        remote_file: schema-builder-tool/schema-builder-tool-v${release_version}-win.exe
        bucket: translators-connectors-releases
        permissions: public-read
        content_type: application/octet-stream
        display_name: schema-builder-tool-v${release_version}-win.exe


tasks:
  - name: test-schema-builder
    depends_on:
      - name: compile-dcsb
    commands:
      - func: "install rust toolchain"
      - func: "run mongodb schema builder test"

  - name: test-schema-builder-library-integration
    commands:
      - func: "install rust toolchain"
      - func: "run rust integration tests"
        retry_on_failure: true
        vars:
          description: "run schema-builder-library integration tests"
          load_data_cmd: "cargo run --bin data-loader"
          cargo_test_flags: >-
            --features=integration
            --package=schema-builder-library
            --lib internal_integration_tests
            -- --test-threads=1

  - name: test-schema-builder-tool-e2e-enterprise
    commands:
      - func: "install rust toolchain"
      - func: "run rust integration tests"
        vars:
          mdb: "enterprise"
          description: "run schema-builder-tool e2e enterprise tests"
          cargo_test_flags: >-
            --features=enterprise
            --package=schema-builder-tool
            --test e2e
            -- --test-threads=1

  - name: test-schema-builder-tool-e2e-community
    commands:
      - func: "install rust toolchain"
      - func: "run rust integration tests"
        vars:
          description: "run schema-builder-tool e2e community tests"
          cargo_test_flags: >-
            --features=community
            --package=schema-builder-tool
            --test e2e
            -- --test-threads=1

  - name: sign-schema-builder-tool-executables
    depends_on:
      - name: compile-dcsb
    commands:
      - func: "sign dcsb windows"
        variants: [ dcsb-windows-64 ]
      - func: "sign dcsb linux"
        variants: [ dcsb-ubuntu2004 ]
      - func: "sign dcsb macos"
        variants: [ dcsb-macos, dcsb-macos-arm ]

  - name: compile-dcsb
    commands:
      - func: "install rust toolchain"
      - func: "compile release"
      - func: "upload schema builder executable"

  - name: dcsb-release
    git_tag_only: true
    depends_on:
      - name: dcsb-sbom
        variant: "dcsb-code-quality-security"
      - name: compile-dcsb
        variant: ".dcsb-release-variant"
      - name: sign-schema-builder-tool-executables
        variant: ".dcsb-release-variant"
    commands:
      - func: "perform schema builder release"

buildvariants:
  - name: dcsb-macos
    tags: [ "dcsb-release-variant" ]
    display_name: "MongoDB Schema Builder - macOS"
    run_on: [ macos-1100 ]
    tasks:
      - name: compile-dcsb
      - name: test-schema-builder
      - name: sign-schema-builder-tool-executables

  - name: dcsb-integration-test
    tags: [ "schema-builder-test" ]
    display_name: "MongoDB Schema Builder Integration Test"
    run_on: [ rhel76-large ]
    tasks:
      - name: compile-dcsb
      - name: test-schema-builder
      - name: test-schema-builder-library-integration

  - name: dcsb-e2e-test
    tags: [ "schema-builder-test" ]
    display_name: "MongoDB Schema Builder Tool End-to-End Test"
    run_on: [ rhel76-large ]
    tasks:
      - name: compile-dcsb
      - name: test-schema-builder-tool-e2e-enterprise
      - name: test-schema-builder-tool-e2e-community

  - name: dcsb-macos-arm
    tags: [ "dcsb-release-variant" ]
    display_name: "MongoDB Schema Builder - macOS arm"
    run_on: [ macos-1100-arm64 ]
    tasks:
      - name: compile-dcsb
      - name: test-schema-builder
      - name: sign-schema-builder-tool-executables

  - name: dcsb-windows-64
    tags: [ "dcsb-release-variant" ]
    display_name: "MongoDB Schema Builder - windows"
    run_on: [ windows-64-vs2019-large ]
    tasks:
      - name: compile-dcsb
      - name: test-schema-builder
      - name: sign-schema-builder-tool-executables
        run_on: ubuntu2204-large

  - name: dcsb-ubuntu2004
    tags: [ "dcsb-release-variant" ]
    display_name: "MongoDB Schema Builder - linux"
    run_on: [ ubuntu2004-large ]
    tasks:
      - name: compile-dcsb
      - name: test-schema-builder
      - name: sign-schema-builder-tool-executables

  - name: dcsb-release
    display_name: "MongoDB Schema Builder Release"
    run_on: [ ubuntu2004-large ]
    tasks:
      - name: dcsb-release
