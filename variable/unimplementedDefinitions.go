package variable

import (
	"github.com/10gen/sqlproxy/log"
	"github.com/10gen/sqlproxy/mysqlerrors"
	"github.com/10gen/sqlproxy/schema"
)

/*
 This slice represents all the system variables available in mysql which are
 currently unsupported by sqlproxy.

 Example behavior:
 	- "SELECT @@<SESSION|GLOBAL>.<sys_var>" returns the default value, if one exists
 	- "SET @@<SESSION|GLOBAL>.<sys_var>=<val>" will have no effect, unless "sys_var"
		is not a dynamic variable, in which case an error is raised
*/
var unimplementedDefinitions = []*definition{
	&definition{
		Name:             "audit_log_buffer_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1048576, "audit_log_buffer_size"),
		SetValue:         setDummyValueErr("audit_log_buffer_size"),
	},
	&definition{
		Name:             "audit_log_connection_policy",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("ALL", "audit_log_connection_policy"),
		SetValue:         setDummyValue("audit_log_connection_policy"),
	},
	&definition{
		Name:             "audit_log_current_session",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "audit_log_current_session"),
		SetValue:         setDummyValueErr("audit_log_current_session"),
	},
	&definition{
		Name:             "audit_log_exclude_accounts",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("NULL", "audit_log_exclude_accounts"),
		SetValue:         setDummyValue("audit_log_exclude_accounts"),
	},
	&definition{
		Name:             "audit_log_file",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("audit.log", "audit_log_file"),
		SetValue:         setDummyValueErr("audit_log_file"),
	},
	&definition{
		Name:             "audit_log_filter_id",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "audit_log_filter_id"),
		SetValue:         setDummyValueErr("audit_log_filter_id"),
	},
	&definition{
		Name:             "audit_log_flush",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "audit_log_flush"),
		SetValue:         setDummyValue("audit_log_flush"),
	},
	&definition{
		Name:             "audit_log_format",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("NEW", "audit_log_format"),
		SetValue:         setDummyValueErr("audit_log_format"),
	},
	&definition{
		Name:             "audit_log_include_accounts",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("NULL", "audit_log_include_accounts"),
		SetValue:         setDummyValue("audit_log_include_accounts"),
	},
	&definition{
		Name:             "audit_log_policy",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("ALL", "audit_log_policy"),
		SetValue:         setDummyValueErr("audit_log_policy"),
	},
	&definition{
		Name:             "audit_log_rotate_on_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "audit_log_rotate_on_size"),
		SetValue:         setDummyValue("audit_log_rotate_on_size"),
	},
	&definition{
		Name:             "audit_log_statement_policy",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("ALL", "audit_log_statement_policy"),
		SetValue:         setDummyValue("audit_log_statement_policy"),
	},
	&definition{
		Name:             "audit_log_strategy",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("ASYNCHRONOUS", "audit_log_strategy"),
		SetValue:         setDummyValueErr("audit_log_strategy"),
	},
	&definition{
		Name:             "auto_generate_certs",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "auto_generate_certs"),
		SetValue:         setDummyValueErr("auto_generate_certs"),
	},
	&definition{
		Name:             "auto_increment_increment",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "auto_increment_increment"),
		SetValue:         setDummyValue("auto_increment_increment"),
	},
	&definition{
		Name:             "auto_increment_offset",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "auto_increment_offset"),
		SetValue:         setDummyValue("auto_increment_offset"),
	},
	&definition{
		Name:             "automatic_sp_privileges",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "automatic_sp_privileges"),
		SetValue:         setDummyValue("automatic_sp_privileges"),
	},
	&definition{
		Name:             "avoid_temporal_upgrade",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "avoid_temporal_upgrade"),
		SetValue:         setDummyValue("avoid_temporal_upgrade"),
	},
	&definition{
		Name:             "back_log",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "back_log"),
		SetValue:         setDummyValueErr("back_log"),
	},
	&definition{
		Name:             "basedir",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "basedir"),
		SetValue:         setDummyValueErr("basedir"),
	},
	&definition{
		Name:             "big_tables",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "big_tables"),
		SetValue:         setDummyValue("big_tables"),
	},
	&definition{
		Name:             "bind_address",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("*", "bind_address"),
		SetValue:         setDummyValueErr("bind_address"),
	},
	&definition{
		Name:             "binlog_cache_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(32768, "binlog_cache_size"),
		SetValue:         setDummyValue("binlog_cache_size"),
	},
	&definition{
		Name:             "binlog_checksum",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("CRC32", "binlog_checksum"),
		SetValue:         setDummyValue("binlog_checksum"),
	},
	&definition{
		Name:             "binlog_direct_non_transactional_updates",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "binlog_direct_non_transactional_updates"),
		SetValue:         setDummyValue("binlog_direct_non_transactional_updates"),
	},
	&definition{
		Name:             "binlog_error_action",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("IGNORE_ERROR", "binlog_error_action"),
		SetValue:         setDummyValue("binlog_error_action"),
	},
	&definition{
		Name:             "binlog_format",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("STATEMENT", "binlog_format"),
		SetValue:         setDummyValue("binlog_format"),
	},
	&definition{
		Name:             "binlog_group_commit_sync_delay",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "binlog_group_commit_sync_delay"),
		SetValue:         setDummyValue("binlog_group_commit_sync_delay"),
	},
	&definition{
		Name:             "binlog_group_commit_sync_no_delay_count",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "binlog_group_commit_sync_no_delay_count"),
		SetValue:         setDummyValue("binlog_group_commit_sync_no_delay_count"),
	},
	&definition{
		Name:             "binlog_gtid_simple_recovery",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "binlog_gtid_simple_recovery"),
		SetValue:         setDummyValueErr("binlog_gtid_simple_recovery"),
	},
	&definition{
		Name:             "binlog_max_flush_queue_time",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "binlog_max_flush_queue_time"),
		SetValue:         setDummyValue("binlog_max_flush_queue_time"),
	},
	&definition{
		Name:             "binlog_order_commits",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "binlog_order_commits"),
		SetValue:         setDummyValue("binlog_order_commits"),
	},
	&definition{
		Name:             "binlog_row_image",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("full", "binlog_row_image"),
		SetValue:         setDummyValue("binlog_row_image"),
	},
	&definition{
		Name:             "binlog_rows_query_log_events",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "binlog_rows_query_log_events"),
		SetValue:         setDummyValue("binlog_rows_query_log_events"),
	},
	&definition{
		Name:             "binlog_stmt_cache_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(32768, "binlog_stmt_cache_size"),
		SetValue:         setDummyValue("binlog_stmt_cache_size"),
	},
	&definition{
		Name:             "binlogging_impossible_mode",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("IGNORE_ERROR", "binlogging_impossible_mode"),
		SetValue:         setDummyValue("binlogging_impossible_mode"),
	},
	&definition{
		Name:             "block_encryption_mode",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("aes-128-ecb", "block_encryption_mode"),
		SetValue:         setDummyValue("block_encryption_mode"),
	},
	&definition{
		Name:             "bulk_insert_buffer_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(8388608, "bulk_insert_buffer_size"),
		SetValue:         setDummyValue("bulk_insert_buffer_size"),
	},
	&definition{
		Name:             "character_set_filesystem",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("binary", "character_set_filesystem"),
		SetValue:         setDummyValue("character_set_filesystem"),
	},
	&definition{
		Name:             "character_set_server",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("latin1", "character_set_server"),
		SetValue:         setDummyValue("character_set_server"),
	},
	&definition{
		Name:             "character_set_system",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("utf8", "character_set_system"),
		SetValue:         setDummyValueErr("character_set_system"),
	},
	&definition{
		Name:             "character_sets_dir",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "character_sets_dir"),
		SetValue:         setDummyValueErr("character_sets_dir"),
	},
	&definition{
		Name:             "check_proxy_users",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "check_proxy_users"),
		SetValue:         setDummyValue("check_proxy_users"),
	},
	&definition{
		Name:             "completion_type",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("NO_CHAIN", "completion_type"),
		SetValue:         setDummyValue("completion_type"),
	},
	&definition{
		Name:             "concurrent_insert",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("AUTO", "concurrent_insert"),
		SetValue:         setDummyValue("concurrent_insert"),
	},
	&definition{
		Name:             "connect_timeout",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(10, "connect_timeout"),
		SetValue:         setDummyValue("connect_timeout"),
	},
	&definition{
		Name:             "core_file",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "core_file"),
		SetValue:         setDummyValueErr("core_file"),
	},
	&definition{
		Name:             "daemon_memcached_enable_binlog",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "daemon_memcached_enable_binlog"),
		SetValue:         setDummyValueErr("daemon_memcached_enable_binlog"),
	},
	&definition{
		Name:             "daemon_memcached_engine_lib_name",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("innodb_engine.so", "daemon_memcached_engine_lib_name"),
		SetValue:         setDummyValueErr("daemon_memcached_engine_lib_name"),
	},
	&definition{
		Name:             "daemon_memcached_engine_lib_path",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("NULL", "daemon_memcached_engine_lib_path"),
		SetValue:         setDummyValueErr("daemon_memcached_engine_lib_path"),
	},
	&definition{
		Name:             "daemon_memcached_option",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "daemon_memcached_option"),
		SetValue:         setDummyValueErr("daemon_memcached_option"),
	},
	&definition{
		Name:             "daemon_memcached_r_batch_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "daemon_memcached_r_batch_size"),
		SetValue:         setDummyValueErr("daemon_memcached_r_batch_size"),
	},
	&definition{
		Name:             "daemon_memcached_w_batch_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "daemon_memcached_w_batch_size"),
		SetValue:         setDummyValueErr("daemon_memcached_w_batch_size"),
	},
	&definition{
		Name:             "datadir",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "datadir"),
		SetValue:         setDummyValueErr("datadir"),
	},
	&definition{
		Name:             "debug",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("d:t:i:o,/tmp/mysqld.trace", "debug"),
		SetValue:         setDummyValue("debug"),
	},
	&definition{
		Name:             "debug_sync",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "debug_sync"),
		SetValue:         setDummyValue("debug_sync"),
	},
	&definition{
		Name:             "default_authentication_plugin",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("mysql_native_password", "default_authentication_plugin"),
		SetValue:         setDummyValueErr("default_authentication_plugin"),
	},
	&definition{
		Name:             "default_password_lifetime",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(360, "default_password_lifetime"),
		SetValue:         setDummyValue("default_password_lifetime"),
	},
	&definition{
		Name:             "default_storage_engine",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("InnoDB", "default_storage_engine"),
		SetValue:         setDummyValue("default_storage_engine"),
	},
	&definition{
		Name:             "default_tmp_storage_engine",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("InnoDB", "default_tmp_storage_engine"),
		SetValue:         setDummyValue("default_tmp_storage_engine"),
	},
	&definition{
		Name:             "default_week_format",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "default_week_format"),
		SetValue:         setDummyValue("default_week_format"),
	},
	&definition{
		Name:             "delay_key_write",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("ON", "delay_key_write"),
		SetValue:         setDummyValue("delay_key_write"),
	},
	&definition{
		Name:             "delayed_insert_limit",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(100, "delayed_insert_limit"),
		SetValue:         setDummyValue("delayed_insert_limit"),
	},
	&definition{
		Name:             "delayed_insert_timeout",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(300, "delayed_insert_timeout"),
		SetValue:         setDummyValue("delayed_insert_timeout"),
	},
	&definition{
		Name:             "delayed_queue_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1000, "delayed_queue_size"),
		SetValue:         setDummyValue("delayed_queue_size"),
	},
	&definition{
		Name:             "disabled_storage_engines",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("empty string", "disabled_storage_engines"),
		SetValue:         setDummyValueErr("disabled_storage_engines"),
	},
	&definition{
		Name:             "disconnect_on_expired_password",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "disconnect_on_expired_password"),
		SetValue:         setDummyValueErr("disconnect_on_expired_password"),
	},
	&definition{
		Name:             "div_precision_increment",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(4, "div_precision_increment"),
		SetValue:         setDummyValue("div_precision_increment"),
	},
	&definition{
		Name:             "end_markers_in_json",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "end_markers_in_json"),
		SetValue:         setDummyValue("end_markers_in_json"),
	},
	&definition{
		Name:             "enforce_gtid_consistency",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "enforce_gtid_consistency"),
		SetValue:         setDummyValueErr("enforce_gtid_consistency"),
	},
	&definition{
		Name:             "eq_range_index_dive_limit",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(10, "eq_range_index_dive_limit"),
		SetValue:         setDummyValue("eq_range_index_dive_limit"),
	},
	&definition{
		Name:             "error_count",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "error_count"),
		SetValue:         setDummyValueErr("error_count"),
	},
	&definition{
		Name:             "event_scheduler",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("OFF", "event_scheduler"),
		SetValue:         setDummyValue("event_scheduler"),
	},
	&definition{
		Name:             "executed_gtids_compression_period",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1000, "executed_gtids_compression_period"),
		SetValue:         setDummyValue("executed_gtids_compression_period"),
	},
	&definition{
		Name:             "expire_logs_days",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "expire_logs_days"),
		SetValue:         setDummyValue("expire_logs_days"),
	},
	&definition{
		Name:             "explicit_defaults_for_timestamp",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "explicit_defaults_for_timestamp"),
		SetValue:         setDummyValueErr("explicit_defaults_for_timestamp"),
	},
	&definition{
		Name:             "external_user",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "external_user"),
		SetValue:         setDummyValueErr("external_user"),
	},
	&definition{
		Name:             "flush",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "flush"),
		SetValue:         setDummyValue("flush"),
	},
	&definition{
		Name:             "flush_time",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "flush_time"),
		SetValue:         setDummyValue("flush_time"),
	},
	&definition{
		Name:             "foreign_key_checks",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "foreign_key_checks"),
		SetValue:         setDummyValue("foreign_key_checks"),
	},
	&definition{
		Name:             "ft_boolean_syntax",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("+ -><()~*:\"\"&|", "ft_boolean_syntax"),
		SetValue:         setDummyValue("ft_boolean_syntax"),
	},
	&definition{
		Name:             "ft_max_word_len",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "ft_max_word_len"),
		SetValue:         setDummyValueErr("ft_max_word_len"),
	},
	&definition{
		Name:             "ft_min_word_len",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(4, "ft_min_word_len"),
		SetValue:         setDummyValueErr("ft_min_word_len"),
	},
	&definition{
		Name:             "ft_query_expansion_limit",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(20, "ft_query_expansion_limit"),
		SetValue:         setDummyValueErr("ft_query_expansion_limit"),
	},
	&definition{
		Name:             "ft_stopword_file",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "ft_stopword_file"),
		SetValue:         setDummyValueErr("ft_stopword_file"),
	},
	&definition{
		Name:             "general_log",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "general_log"),
		SetValue:         setDummyValue("general_log"),
	},
	&definition{
		Name:             "general_log_file",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("host_name.log", "general_log_file"),
		SetValue:         setDummyValue("general_log_file"),
	},
	&definition{
		Name:             "group_concat_max_len",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1024, "group_concat_max_len"),
		SetValue:         setDummyValue("group_concat_max_len"),
	},
	&definition{
		Name:             "gtid_executed",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "gtid_executed"),
		SetValue:         setDummyValueErr("gtid_executed"),
	},
	&definition{
		Name:             "gtid_executed_compression_period",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1000, "gtid_executed_compression_period"),
		SetValue:         setDummyValue("gtid_executed_compression_period"),
	},
	&definition{
		Name:             "gtid_mode",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("OFF", "gtid_mode"),
		SetValue:         setDummyValueErr("gtid_mode"),
	},
	&definition{
		Name:             "gtid_next",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("AUTOMATIC", "gtid_next"),
		SetValue:         setDummyValue("gtid_next"),
	},
	&definition{
		Name:             "gtid_owned",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "gtid_owned"),
		SetValue:         setDummyValueErr("gtid_owned"),
	},
	&definition{
		Name:             "gtid_purged",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "gtid_purged"),
		SetValue:         setDummyValue("gtid_purged"),
	},
	&definition{
		Name:             "have_compress",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "have_compress"),
		SetValue:         setDummyValueErr("have_compress"),
	},
	&definition{
		Name:             "have_crypt",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "have_crypt"),
		SetValue:         setDummyValueErr("have_crypt"),
	},
	&definition{
		Name:             "have_dynamic_loading",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "have_dynamic_loading"),
		SetValue:         setDummyValueErr("have_dynamic_loading"),
	},
	&definition{
		Name:             "have_geometry",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "have_geometry"),
		SetValue:         setDummyValueErr("have_geometry"),
	},
	&definition{
		Name:             "have_openssl",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "have_openssl"),
		SetValue:         setDummyValueErr("have_openssl"),
	},
	&definition{
		Name:             "have_profiling",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "have_profiling"),
		SetValue:         setDummyValueErr("have_profiling"),
	},
	&definition{
		Name:             "have_query_cache",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "have_query_cache"),
		SetValue:         setDummyValueErr("have_query_cache"),
	},
	&definition{
		Name:             "have_rtree_keys",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "have_rtree_keys"),
		SetValue:         setDummyValueErr("have_rtree_keys"),
	},
	&definition{
		Name:             "have_ssl",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "have_ssl"),
		SetValue:         setDummyValueErr("have_ssl"),
	},
	&definition{
		Name:             "have_statement_timeout",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "have_statement_timeout"),
		SetValue:         setDummyValueErr("have_statement_timeout"),
	},
	&definition{
		Name:             "have_symlink",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "have_symlink"),
		SetValue:         setDummyValueErr("have_symlink"),
	},
	&definition{
		Name:             "host_cache_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "host_cache_size"),
		SetValue:         setDummyValue("host_cache_size"),
	},
	&definition{
		Name:             "hostname",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "hostname"),
		SetValue:         setDummyValueErr("hostname"),
	},
	&definition{
		Name:             "identity",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "identity"),
		SetValue:         setDummyValue("identity"),
	},
	&definition{
		Name:             "ignore_builtin_innodb",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "ignore_builtin_innodb"),
		SetValue:         setDummyValueErr("ignore_builtin_innodb"),
	},
	&definition{
		Name:             "ignore_db_dirs",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "ignore_db_dirs"),
		SetValue:         setDummyValueErr("ignore_db_dirs"),
	},
	&definition{
		Name:             "init_connect",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "init_connect"),
		SetValue:         setDummyValue("init_connect"),
	},
	&definition{
		Name:             "init_file",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "init_file"),
		SetValue:         setDummyValueErr("init_file"),
	},
	&definition{
		Name:             "init_slave",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "init_slave"),
		SetValue:         setDummyValue("init_slave"),
	},
	&definition{
		Name:             "innodb_adaptive_flushing",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "innodb_adaptive_flushing"),
		SetValue:         setDummyValue("innodb_adaptive_flushing"),
	},
	&definition{
		Name:             "innodb_adaptive_flushing_lwm",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(10, "innodb_adaptive_flushing_lwm"),
		SetValue:         setDummyValue("innodb_adaptive_flushing_lwm"),
	},
	&definition{
		Name:             "innodb_adaptive_hash_index",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "innodb_adaptive_hash_index"),
		SetValue:         setDummyValue("innodb_adaptive_hash_index"),
	},
	&definition{
		Name:             "innodb_adaptive_hash_index_parts",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLNumeric,
		GetValue:         getDummyValue(8, "innodb_adaptive_hash_index_parts"),
		SetValue:         setDummyValueErr("innodb_adaptive_hash_index_parts"),
	},
	&definition{
		Name:             "innodb_adaptive_max_sleep_delay",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(150000, "innodb_adaptive_max_sleep_delay"),
		SetValue:         setDummyValue("innodb_adaptive_max_sleep_delay"),
	},
	&definition{
		Name:             "innodb_additional_mem_pool_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(8388608, "innodb_additional_mem_pool_size"),
		SetValue:         setDummyValueErr("innodb_additional_mem_pool_size"),
	},
	&definition{
		Name:             "innodb_api_bk_commit_interval",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(5, "innodb_api_bk_commit_interval"),
		SetValue:         setDummyValue("innodb_api_bk_commit_interval"),
	},
	&definition{
		Name:             "innodb_api_disable_rowlock",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_api_disable_rowlock"),
		SetValue:         setDummyValueErr("innodb_api_disable_rowlock"),
	},
	&definition{
		Name:             "innodb_api_enable_binlog",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_api_enable_binlog"),
		SetValue:         setDummyValueErr("innodb_api_enable_binlog"),
	},
	&definition{
		Name:             "innodb_api_enable_mdl",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_api_enable_mdl"),
		SetValue:         setDummyValueErr("innodb_api_enable_mdl"),
	},
	&definition{
		Name:             "innodb_api_trx_level",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "innodb_api_trx_level"),
		SetValue:         setDummyValue("innodb_api_trx_level"),
	},
	&definition{
		Name:             "innodb_autoextend_increment",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(64, "innodb_autoextend_increment"),
		SetValue:         setDummyValue("innodb_autoextend_increment"),
	},
	&definition{
		Name:             "innodb_autoinc_lock_mode",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "innodb_autoinc_lock_mode"),
		SetValue:         setDummyValueErr("innodb_autoinc_lock_mode"),
	},
	&definition{
		Name:             "innodb_background_drop_list_empty",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_background_drop_list_empty"),
		SetValue:         setDummyValue("innodb_background_drop_list_empty"),
	},
	&definition{
		Name:             "innodb_buffer_pool_chunk_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(134217728, "innodb_buffer_pool_chunk_size"),
		SetValue:         setDummyValueErr("innodb_buffer_pool_chunk_size"),
	},
	&definition{
		Name:             "innodb_buffer_pool_dump_at_shutdown",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_buffer_pool_dump_at_shutdown"),
		SetValue:         setDummyValue("innodb_buffer_pool_dump_at_shutdown"),
	},
	&definition{
		Name:             "innodb_buffer_pool_dump_now",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_buffer_pool_dump_now"),
		SetValue:         setDummyValue("innodb_buffer_pool_dump_now"),
	},
	&definition{
		Name:             "innodb_buffer_pool_dump_pct",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(100, "innodb_buffer_pool_dump_pct"),
		SetValue:         setDummyValue("innodb_buffer_pool_dump_pct"),
	},
	&definition{
		Name:             "innodb_buffer_pool_filename",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("ib_buffer_pool", "innodb_buffer_pool_filename"),
		SetValue:         setDummyValue("innodb_buffer_pool_filename"),
	},
	&definition{
		Name:             "innodb_buffer_pool_instances",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "innodb_buffer_pool_instances"),
		SetValue:         setDummyValueErr("innodb_buffer_pool_instances"),
	},
	&definition{
		Name:             "innodb_buffer_pool_load_abort",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_buffer_pool_load_abort"),
		SetValue:         setDummyValue("innodb_buffer_pool_load_abort"),
	},
	&definition{
		Name:             "innodb_buffer_pool_load_at_startup",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_buffer_pool_load_at_startup"),
		SetValue:         setDummyValueErr("innodb_buffer_pool_load_at_startup"),
	},
	&definition{
		Name:             "innodb_buffer_pool_load_now",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_buffer_pool_load_now"),
		SetValue:         setDummyValue("innodb_buffer_pool_load_now"),
	},
	&definition{
		Name:             "innodb_buffer_pool_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(134217728, "innodb_buffer_pool_size"),
		SetValue:         setDummyValueErr("innodb_buffer_pool_size"),
	},
	&definition{
		Name:             "innodb_change_buffer_max_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(25, "innodb_change_buffer_max_size"),
		SetValue:         setDummyValue("innodb_change_buffer_max_size"),
	},
	&definition{
		Name:             "innodb_change_buffering",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("all", "innodb_change_buffering"),
		SetValue:         setDummyValue("innodb_change_buffering"),
	},
	&definition{
		Name:             "innodb_change_buffering_debug",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "innodb_change_buffering_debug"),
		SetValue:         setDummyValue("innodb_change_buffering_debug"),
	},
	&definition{
		Name:             "innodb_checksum_algorithm",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("innodb", "innodb_checksum_algorithm"),
		SetValue:         setDummyValue("innodb_checksum_algorithm"),
	},
	&definition{
		Name:             "innodb_checksums",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "innodb_checksums"),
		SetValue:         setDummyValueErr("innodb_checksums"),
	},
	&definition{
		Name:             "innodb_cmp_per_index_enabled",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_cmp_per_index_enabled"),
		SetValue:         setDummyValue("innodb_cmp_per_index_enabled"),
	},
	&definition{
		Name:             "innodb_commit_concurrency",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "innodb_commit_concurrency"),
		SetValue:         setDummyValue("innodb_commit_concurrency"),
	},
	&definition{
		Name:             "innodb_compress_debug",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("none", "innodb_compress_debug"),
		SetValue:         setDummyValue("innodb_compress_debug"),
	},
	&definition{
		Name:             "innodb_compression_failure_threshold_pct",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(5, "innodb_compression_failure_threshold_pct"),
		SetValue:         setDummyValue("innodb_compression_failure_threshold_pct"),
	},
	&definition{
		Name:             "innodb_compression_level",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(6, "innodb_compression_level"),
		SetValue:         setDummyValue("innodb_compression_level"),
	},
	&definition{
		Name:             "innodb_compression_pad_pct_max",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(50, "innodb_compression_pad_pct_max"),
		SetValue:         setDummyValue("innodb_compression_pad_pct_max"),
	},
	&definition{
		Name:             "innodb_concurrency_tickets",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(5000, "innodb_concurrency_tickets"),
		SetValue:         setDummyValue("innodb_concurrency_tickets"),
	},
	&definition{
		Name:             "innodb_create_intrinsic",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_create_intrinsic"),
		SetValue:         setDummyValue("innodb_create_intrinsic"),
	},
	&definition{
		Name:             "innodb_data_file_path",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("ibdata1:12M:autoextend", "innodb_data_file_path"),
		SetValue:         setDummyValueErr("innodb_data_file_path"),
	},
	&definition{
		Name:             "innodb_data_home_dir",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "innodb_data_home_dir"),
		SetValue:         setDummyValueErr("innodb_data_home_dir"),
	},
	&definition{
		Name:             "innodb_deadlock_detect",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "innodb_deadlock_detect"),
		SetValue:         setDummyValue("innodb_deadlock_detect"),
	},
	&definition{
		Name:             "innodb_default_row_format",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("DYNAMIC", "innodb_default_row_format"),
		SetValue:         setDummyValue("innodb_default_row_format"),
	},
	&definition{
		Name:             "innodb_disable_resize_buffer_pool_debug",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "innodb_disable_resize_buffer_pool_debug"),
		SetValue:         setDummyValue("innodb_disable_resize_buffer_pool_debug"),
	},
	&definition{
		Name:             "innodb_disable_sort_file_cache",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_disable_sort_file_cache"),
		SetValue:         setDummyValue("innodb_disable_sort_file_cache"),
	},
	&definition{
		Name:             "innodb_doublewrite",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "innodb_doublewrite"),
		SetValue:         setDummyValueErr("innodb_doublewrite"),
	},
	&definition{
		Name:             "innodb_fast_shutdown",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "innodb_fast_shutdown"),
		SetValue:         setDummyValue("innodb_fast_shutdown"),
	},
	&definition{
		Name:             "innodb_fil_make_page_dirty_debug",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "innodb_fil_make_page_dirty_debug"),
		SetValue:         setDummyValue("innodb_fil_make_page_dirty_debug"),
	},
	&definition{
		Name:             "innodb_file_format",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("Antelope", "innodb_file_format"),
		SetValue:         setDummyValue("innodb_file_format"),
	},
	&definition{
		Name:             "innodb_file_format_check",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "innodb_file_format_check"),
		SetValue:         setDummyValueErr("innodb_file_format_check"),
	},
	&definition{
		Name:             "innodb_file_format_max",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("Antelope", "innodb_file_format_max"),
		SetValue:         setDummyValue("innodb_file_format_max"),
	},
	&definition{
		Name:             "innodb_file_per_table",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "innodb_file_per_table"),
		SetValue:         setDummyValue("innodb_file_per_table"),
	},
	&definition{
		Name:             "innodb_fill_factor",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(100, "innodb_fill_factor"),
		SetValue:         setDummyValue("innodb_fill_factor"),
	},
	&definition{
		Name:             "innodb_flush_log_at_timeout",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "innodb_flush_log_at_timeout"),
		SetValue:         setDummyValue("innodb_flush_log_at_timeout"),
	},
	&definition{
		Name:             "innodb_flush_log_at_trx_commit",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("1", "innodb_flush_log_at_trx_commit"),
		SetValue:         setDummyValue("innodb_flush_log_at_trx_commit"),
	},
	&definition{
		Name:             "innodb_flush_method",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("NULL", "innodb_flush_method"),
		SetValue:         setDummyValueErr("innodb_flush_method"),
	},
	&definition{
		Name:             "innodb_flush_neighbors",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("1", "innodb_flush_neighbors"),
		SetValue:         setDummyValue("innodb_flush_neighbors"),
	},
	&definition{
		Name:             "innodb_flush_sync",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "innodb_flush_sync"),
		SetValue:         setDummyValue("innodb_flush_sync"),
	},
	&definition{
		Name:             "innodb_flushing_avg_loops",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(30, "innodb_flushing_avg_loops"),
		SetValue:         setDummyValue("innodb_flushing_avg_loops"),
	},
	&definition{
		Name:             "innodb_force_load_corrupted",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_force_load_corrupted"),
		SetValue:         setDummyValueErr("innodb_force_load_corrupted"),
	},
	&definition{
		Name:             "innodb_force_recovery",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "innodb_force_recovery"),
		SetValue:         setDummyValueErr("innodb_force_recovery"),
	},
	&definition{
		Name:             "innodb_ft_aux_table",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "innodb_ft_aux_table"),
		SetValue:         setDummyValue("innodb_ft_aux_table"),
	},
	&definition{
		Name:             "innodb_ft_cache_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(8000000, "innodb_ft_cache_size"),
		SetValue:         setDummyValueErr("innodb_ft_cache_size"),
	},
	&definition{
		Name:             "innodb_ft_enable_diag_print",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_ft_enable_diag_print"),
		SetValue:         setDummyValue("innodb_ft_enable_diag_print"),
	},
	&definition{
		Name:             "innodb_ft_enable_stopword",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "innodb_ft_enable_stopword"),
		SetValue:         setDummyValue("innodb_ft_enable_stopword"),
	},
	&definition{
		Name:             "innodb_ft_max_token_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(84, "innodb_ft_max_token_size"),
		SetValue:         setDummyValueErr("innodb_ft_max_token_size"),
	},
	&definition{
		Name:             "innodb_ft_min_token_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(3, "innodb_ft_min_token_size"),
		SetValue:         setDummyValueErr("innodb_ft_min_token_size"),
	},
	&definition{
		Name:             "innodb_ft_num_word_optimize",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(2000, "innodb_ft_num_word_optimize"),
		SetValue:         setDummyValue("innodb_ft_num_word_optimize"),
	},
	&definition{
		Name:             "innodb_ft_result_cache_limit",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(2000000000, "innodb_ft_result_cache_limit"),
		SetValue:         setDummyValue("innodb_ft_result_cache_limit"),
	},
	&definition{
		Name:             "innodb_ft_server_stopword_table",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("NULL", "innodb_ft_server_stopword_table"),
		SetValue:         setDummyValue("innodb_ft_server_stopword_table"),
	},
	&definition{
		Name:             "innodb_ft_sort_pll_degree",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(2, "innodb_ft_sort_pll_degree"),
		SetValue:         setDummyValueErr("innodb_ft_sort_pll_degree"),
	},
	&definition{
		Name:             "innodb_ft_total_cache_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(640000000, "innodb_ft_total_cache_size"),
		SetValue:         setDummyValueErr("innodb_ft_total_cache_size"),
	},
	&definition{
		Name:             "innodb_ft_user_stopword_table",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("NULL", "innodb_ft_user_stopword_table"),
		SetValue:         setDummyValue("innodb_ft_user_stopword_table"),
	},
	&definition{
		Name:             "innodb_io_capacity",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(200, "innodb_io_capacity"),
		SetValue:         setDummyValue("innodb_io_capacity"),
	},
	&definition{
		Name:             "innodb_io_capacity_max",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "innodb_io_capacity_max"),
		SetValue:         setDummyValue("innodb_io_capacity_max"),
	},
	&definition{
		Name:             "innodb_large_prefix",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_large_prefix"),
		SetValue:         setDummyValue("innodb_large_prefix"),
	},
	&definition{
		Name:             "innodb_limit_optimistic_insert_debug",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "innodb_limit_optimistic_insert_debug"),
		SetValue:         setDummyValue("innodb_limit_optimistic_insert_debug"),
	},
	&definition{
		Name:             "innodb_lock_wait_timeout",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(50, "innodb_lock_wait_timeout"),
		SetValue:         setDummyValue("innodb_lock_wait_timeout"),
	},
	&definition{
		Name:             "innodb_locks_unsafe_for_binlog",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_locks_unsafe_for_binlog"),
		SetValue:         setDummyValueErr("innodb_locks_unsafe_for_binlog"),
	},
	&definition{
		Name:             "innodb_log_buffer_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(8388608, "innodb_log_buffer_size"),
		SetValue:         setDummyValueErr("innodb_log_buffer_size"),
	},
	&definition{
		Name:             "innodb_log_checksum_algorithm",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("innodb", "innodb_log_checksum_algorithm"),
		SetValue:         setDummyValue("innodb_log_checksum_algorithm"),
	},
	&definition{
		Name:             "innodb_log_checksums",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "innodb_log_checksums"),
		SetValue:         setDummyValue("innodb_log_checksums"),
	},
	&definition{
		Name:             "innodb_log_compressed_pages",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "innodb_log_compressed_pages"),
		SetValue:         setDummyValue("innodb_log_compressed_pages"),
	},
	&definition{
		Name:             "innodb_log_file_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(50331648, "innodb_log_file_size"),
		SetValue:         setDummyValueErr("innodb_log_file_size"),
	},
	&definition{
		Name:             "innodb_log_files_in_group",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(2, "innodb_log_files_in_group"),
		SetValue:         setDummyValueErr("innodb_log_files_in_group"),
	},
	&definition{
		Name:             "innodb_log_group_home_dir",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "innodb_log_group_home_dir"),
		SetValue:         setDummyValueErr("innodb_log_group_home_dir"),
	},
	&definition{
		Name:             "innodb_log_write_ahead_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(8192, "innodb_log_write_ahead_size"),
		SetValue:         setDummyValue("innodb_log_write_ahead_size"),
	},
	&definition{
		Name:             "innodb_lru_scan_depth",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1024, "innodb_lru_scan_depth"),
		SetValue:         setDummyValue("innodb_lru_scan_depth"),
	},
	&definition{
		Name:             "innodb_max_dirty_pages_pct",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLNumeric,
		GetValue:         getDummyValue(75, "innodb_max_dirty_pages_pct"),
		SetValue:         setDummyValue("innodb_max_dirty_pages_pct"),
	},
	&definition{
		Name:             "innodb_max_dirty_pages_pct_lwm",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLNumeric,
		GetValue:         getDummyValue(0, "innodb_max_dirty_pages_pct_lwm"),
		SetValue:         setDummyValue("innodb_max_dirty_pages_pct_lwm"),
	},
	&definition{
		Name:             "innodb_max_purge_lag",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "innodb_max_purge_lag"),
		SetValue:         setDummyValue("innodb_max_purge_lag"),
	},
	&definition{
		Name:             "innodb_max_purge_lag_delay",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "innodb_max_purge_lag_delay"),
		SetValue:         setDummyValue("innodb_max_purge_lag_delay"),
	},
	&definition{
		Name:             "innodb_max_undo_log_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1073741824, "innodb_max_undo_log_size"),
		SetValue:         setDummyValue("innodb_max_undo_log_size"),
	},
	&definition{
		Name:             "innodb_merge_threshold_set_all_debug",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(50, "innodb_merge_threshold_set_all_debug"),
		SetValue:         setDummyValue("innodb_merge_threshold_set_all_debug"),
	},
	&definition{
		Name:             "innodb_monitor_disable",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "innodb_monitor_disable"),
		SetValue:         setDummyValue("innodb_monitor_disable"),
	},
	&definition{
		Name:             "innodb_monitor_enable",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "innodb_monitor_enable"),
		SetValue:         setDummyValue("innodb_monitor_enable"),
	},
	&definition{
		Name:             "innodb_monitor_reset",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "innodb_monitor_reset"),
		SetValue:         setDummyValue("innodb_monitor_reset"),
	},
	&definition{
		Name:             "innodb_monitor_reset_all",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "innodb_monitor_reset_all"),
		SetValue:         setDummyValue("innodb_monitor_reset_all"),
	},
	&definition{
		Name:             "innodb_numa_interleave",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_numa_interleave"),
		SetValue:         setDummyValueErr("innodb_numa_interleave"),
	},
	&definition{
		Name:             "innodb_old_blocks_pct",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(37, "innodb_old_blocks_pct"),
		SetValue:         setDummyValue("innodb_old_blocks_pct"),
	},
	&definition{
		Name:             "innodb_old_blocks_time",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1000, "innodb_old_blocks_time"),
		SetValue:         setDummyValue("innodb_old_blocks_time"),
	},
	&definition{
		Name:             "innodb_online_alter_log_max_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(134217728, "innodb_online_alter_log_max_size"),
		SetValue:         setDummyValue("innodb_online_alter_log_max_size"),
	},
	&definition{
		Name:             "innodb_open_files",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "innodb_open_files"),
		SetValue:         setDummyValueErr("innodb_open_files"),
	},
	&definition{
		Name:             "innodb_optimize_fulltext_only",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_optimize_fulltext_only"),
		SetValue:         setDummyValue("innodb_optimize_fulltext_only"),
	},
	&definition{
		Name:             "innodb_optimize_point_storage",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_optimize_point_storage"),
		SetValue:         setDummyValue("innodb_optimize_point_storage"),
	},
	&definition{
		Name:             "innodb_page_cleaners",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "innodb_page_cleaners"),
		SetValue:         setDummyValueErr("innodb_page_cleaners"),
	},
	&definition{
		Name:             "innodb_page_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("16384", "innodb_page_size"),
		SetValue:         setDummyValueErr("innodb_page_size"),
	},
	&definition{
		Name:             "innodb_print_all_deadlocks",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_print_all_deadlocks"),
		SetValue:         setDummyValue("innodb_print_all_deadlocks"),
	},
	&definition{
		Name:             "innodb_purge_batch_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(300, "innodb_purge_batch_size"),
		SetValue:         setDummyValue("innodb_purge_batch_size"),
	},
	&definition{
		Name:             "innodb_purge_rseg_truncate_frequency",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(128, "innodb_purge_rseg_truncate_frequency"),
		SetValue:         setDummyValue("innodb_purge_rseg_truncate_frequency"),
	},
	&definition{
		Name:             "innodb_purge_threads",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "innodb_purge_threads"),
		SetValue:         setDummyValueErr("innodb_purge_threads"),
	},
	&definition{
		Name:             "innodb_random_read_ahead",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_random_read_ahead"),
		SetValue:         setDummyValue("innodb_random_read_ahead"),
	},
	&definition{
		Name:             "innodb_read_ahead_threshold",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(56, "innodb_read_ahead_threshold"),
		SetValue:         setDummyValue("innodb_read_ahead_threshold"),
	},
	&definition{
		Name:             "innodb_read_io_threads",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(4, "innodb_read_io_threads"),
		SetValue:         setDummyValueErr("innodb_read_io_threads"),
	},
	&definition{
		Name:             "innodb_read_only",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_read_only"),
		SetValue:         setDummyValueErr("innodb_read_only"),
	},
	&definition{
		Name:             "innodb_replication_delay",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "innodb_replication_delay"),
		SetValue:         setDummyValue("innodb_replication_delay"),
	},
	&definition{
		Name:             "innodb_rollback_on_timeout",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_rollback_on_timeout"),
		SetValue:         setDummyValueErr("innodb_rollback_on_timeout"),
	},
	&definition{
		Name:             "innodb_rollback_segments",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(128, "innodb_rollback_segments"),
		SetValue:         setDummyValue("innodb_rollback_segments"),
	},
	&definition{
		Name:             "innodb_saved_page_number_debug",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "innodb_saved_page_number_debug"),
		SetValue:         setDummyValue("innodb_saved_page_number_debug"),
	},
	&definition{
		Name:             "innodb_sort_buffer_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1048576, "innodb_sort_buffer_size"),
		SetValue:         setDummyValueErr("innodb_sort_buffer_size"),
	},
	&definition{
		Name:             "innodb_spin_wait_delay",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(6, "innodb_spin_wait_delay"),
		SetValue:         setDummyValue("innodb_spin_wait_delay"),
	},
	&definition{
		Name:             "innodb_stats_auto_recalc",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "innodb_stats_auto_recalc"),
		SetValue:         setDummyValue("innodb_stats_auto_recalc"),
	},
	&definition{
		Name:             "innodb_stats_include_delete_marked",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_stats_include_delete_marked"),
		SetValue:         setDummyValue("innodb_stats_include_delete_marked"),
	},
	&definition{
		Name:             "innodb_stats_method",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("nulls_equal", "innodb_stats_method"),
		SetValue:         setDummyValue("innodb_stats_method"),
	},
	&definition{
		Name:             "innodb_stats_on_metadata",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_stats_on_metadata"),
		SetValue:         setDummyValue("innodb_stats_on_metadata"),
	},
	&definition{
		Name:             "innodb_stats_persistent",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "innodb_stats_persistent"),
		SetValue:         setDummyValue("innodb_stats_persistent"),
	},
	&definition{
		Name:             "innodb_stats_persistent_sample_pages",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(20, "innodb_stats_persistent_sample_pages"),
		SetValue:         setDummyValue("innodb_stats_persistent_sample_pages"),
	},
	&definition{
		Name:             "innodb_stats_sample_pages",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(8, "innodb_stats_sample_pages"),
		SetValue:         setDummyValue("innodb_stats_sample_pages"),
	},
	&definition{
		Name:             "innodb_stats_transient_sample_pages",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(8, "innodb_stats_transient_sample_pages"),
		SetValue:         setDummyValue("innodb_stats_transient_sample_pages"),
	},
	&definition{
		Name:             "innodb_status_output",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_status_output"),
		SetValue:         setDummyValue("innodb_status_output"),
	},
	&definition{
		Name:             "innodb_status_output_locks",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_status_output_locks"),
		SetValue:         setDummyValue("innodb_status_output_locks"),
	},
	&definition{
		Name:             "innodb_strict_mode",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_strict_mode"),
		SetValue:         setDummyValue("innodb_strict_mode"),
	},
	&definition{
		Name:             "innodb_support_xa",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "innodb_support_xa"),
		SetValue:         setDummyValue("innodb_support_xa"),
	},
	&definition{
		Name:             "innodb_sync_array_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "innodb_sync_array_size"),
		SetValue:         setDummyValueErr("innodb_sync_array_size"),
	},
	&definition{
		Name:             "innodb_sync_debug",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_sync_debug"),
		SetValue:         setDummyValueErr("innodb_sync_debug"),
	},
	&definition{
		Name:             "innodb_sync_spin_loops",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(30, "innodb_sync_spin_loops"),
		SetValue:         setDummyValue("innodb_sync_spin_loops"),
	},
	&definition{
		Name:             "innodb_table_locks",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "innodb_table_locks"),
		SetValue:         setDummyValue("innodb_table_locks"),
	},
	&definition{
		Name:             "innodb_temp_data_file_path",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("ibtmp1:12M:autoextend", "innodb_temp_data_file_path"),
		SetValue:         setDummyValueErr("innodb_temp_data_file_path"),
	},
	&definition{
		Name:             "innodb_thread_concurrency",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "innodb_thread_concurrency"),
		SetValue:         setDummyValue("innodb_thread_concurrency"),
	},
	&definition{
		Name:             "innodb_thread_sleep_delay",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(10000, "innodb_thread_sleep_delay"),
		SetValue:         setDummyValue("innodb_thread_sleep_delay"),
	},
	&definition{
		Name:             "innodb_tmpdir",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("NULL", "innodb_tmpdir"),
		SetValue:         setDummyValue("innodb_tmpdir"),
	},
	&definition{
		Name:             "innodb_trx_purge_view_update_only_debug",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_trx_purge_view_update_only_debug"),
		SetValue:         setDummyValue("innodb_trx_purge_view_update_only_debug"),
	},
	&definition{
		Name:             "innodb_trx_rseg_n_slots_debug",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "innodb_trx_rseg_n_slots_debug"),
		SetValue:         setDummyValue("innodb_trx_rseg_n_slots_debug"),
	},
	&definition{
		Name:             "innodb_undo_directory",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue(".", "innodb_undo_directory"),
		SetValue:         setDummyValueErr("innodb_undo_directory"),
	},
	&definition{
		Name:             "innodb_undo_log_truncate",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "innodb_undo_log_truncate"),
		SetValue:         setDummyValue("innodb_undo_log_truncate"),
	},
	&definition{
		Name:             "innodb_undo_logs",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(128, "innodb_undo_logs"),
		SetValue:         setDummyValue("innodb_undo_logs"),
	},
	&definition{
		Name:             "innodb_undo_tablespaces",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "innodb_undo_tablespaces"),
		SetValue:         setDummyValueErr("innodb_undo_tablespaces"),
	},
	&definition{
		Name:             "innodb_use_native_aio",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "innodb_use_native_aio"),
		SetValue:         setDummyValueErr("innodb_use_native_aio"),
	},
	&definition{
		Name:             "innodb_use_sys_malloc",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "innodb_use_sys_malloc"),
		SetValue:         setDummyValueErr("innodb_use_sys_malloc"),
	},
	&definition{
		Name:             "innodb_version",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("unimplemented", "innodb_version"),
		SetValue:         setDummyValueErr("innodb_version"),
	},
	&definition{
		Name:             "innodb_write_io_threads",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(4, "innodb_write_io_threads"),
		SetValue:         setDummyValueErr("innodb_write_io_threads"),
	},
	&definition{
		Name:             "insert_id",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "insert_id"),
		SetValue:         setDummyValue("insert_id"),
	},
	&definition{
		Name:             "internal_tmp_disk_storage_engine",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("MYISAM", "internal_tmp_disk_storage_engine"),
		SetValue:         setDummyValue("internal_tmp_disk_storage_engine"),
	},
	&definition{
		Name:             "join_buffer_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(262144, "join_buffer_size"),
		SetValue:         setDummyValue("join_buffer_size"),
	},
	&definition{
		Name:             "keep_files_on_create",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "keep_files_on_create"),
		SetValue:         setDummyValue("keep_files_on_create"),
	},
	&definition{
		Name:             "key_buffer_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(8388608, "key_buffer_size"),
		SetValue:         setDummyValue("key_buffer_size"),
	},
	&definition{
		Name:             "key_cache_age_threshold",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(300, "key_cache_age_threshold"),
		SetValue:         setDummyValue("key_cache_age_threshold"),
	},
	&definition{
		Name:             "key_cache_block_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1024, "key_cache_block_size"),
		SetValue:         setDummyValue("key_cache_block_size"),
	},
	&definition{
		Name:             "key_cache_division_limit",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(100, "key_cache_division_limit"),
		SetValue:         setDummyValue("key_cache_division_limit"),
	},
	&definition{
		Name:             "keyring_file_data",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("platform specific", "keyring_file_data"),
		SetValue:         setDummyValue("keyring_file_data"),
	},
	&definition{
		Name:             "keyring_okv_conf_dir",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("empty string", "keyring_okv_conf_dir"),
		SetValue:         setDummyValue("keyring_okv_conf_dir"),
	},
	&definition{
		Name:             "language",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("/usr/local/mysql/share/mysql/english/", "language"),
		SetValue:         setDummyValueErr("language"),
	},
	&definition{
		Name:             "large_files_support",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLNone,
		GetValue:         getDummyValue(nil, "large_files_support"),
		SetValue:         setDummyValueErr("large_files_support"),
	},
	&definition{
		Name:             "large_page_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "large_page_size"),
		SetValue:         setDummyValueErr("large_page_size"),
	},
	&definition{
		Name:             "large_pages",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "large_pages"),
		SetValue:         setDummyValueErr("large_pages"),
	},
	&definition{
		Name:             "last_insert_id",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "last_insert_id"),
		SetValue:         setDummyValue("last_insert_id"),
	},
	&definition{
		Name:             "lc_messages",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("en_US", "lc_messages"),
		SetValue:         setDummyValue("lc_messages"),
	},
	&definition{
		Name:             "lc_messages_dir",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "lc_messages_dir"),
		SetValue:         setDummyValueErr("lc_messages_dir"),
	},
	&definition{
		Name:             "lc_time_names",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "lc_time_names"),
		SetValue:         setDummyValue("lc_time_names"),
	},
	&definition{
		Name:             "license",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("GPL", "license"),
		SetValue:         setDummyValueErr("license"),
	},
	&definition{
		Name:             "local_infile",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "local_infile"),
		SetValue:         setDummyValue("local_infile"),
	},
	&definition{
		Name:             "lock_wait_timeout",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(31536000, "lock_wait_timeout"),
		SetValue:         setDummyValue("lock_wait_timeout"),
	},
	&definition{
		Name:             "locked_in_memory",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLNone,
		GetValue:         getDummyValue(nil, "locked_in_memory"),
		SetValue:         setDummyValueErr("locked_in_memory"),
	},
	&definition{
		Name:             "log_backward_compatible_user_definitions",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "log_backward_compatible_user_definitions"),
		SetValue:         setDummyValue("log_backward_compatible_user_definitions"),
	},
	&definition{
		Name:             "log_bin",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "log_bin"),
		SetValue:         setDummyValueErr("log_bin"),
	},
	&definition{
		Name:             "log_bin_basename",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("datadir + '/' + hostname + '-bin'", "log_bin_basename"),
		SetValue:         setDummyValueErr("log_bin_basename"),
	},
	&definition{
		Name:             "log_bin_index",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "log_bin_index"),
		SetValue:         setDummyValueErr("log_bin_index"),
	},
	&definition{
		Name:             "log_bin_trust_function_creators",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "log_bin_trust_function_creators"),
		SetValue:         setDummyValue("log_bin_trust_function_creators"),
	},
	&definition{
		Name:             "log_bin_use_v1_row_events",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "log_bin_use_v1_row_events"),
		SetValue:         setDummyValueErr("log_bin_use_v1_row_events"),
	},
	&definition{
		Name:             "log_builtin_as_identified_by_password",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "log_builtin_as_identified_by_password"),
		SetValue:         setDummyValue("log_builtin_as_identified_by_password"),
	},
	&definition{
		Name:             "log_error",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "log_error"),
		SetValue:         setDummyValueErr("log_error"),
	},
	&definition{
		Name:             "log_error_verbosity",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(3, "log_error_verbosity"),
		SetValue:         setDummyValue("log_error_verbosity"),
	},
	&definition{
		Name:             "log_output",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("FILE", "log_output"),
		SetValue:         setDummyValue("log_output"),
	},
	&definition{
		Name:             "log_queries_not_using_indexes",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "log_queries_not_using_indexes"),
		SetValue:         setDummyValue("log_queries_not_using_indexes"),
	},
	&definition{
		Name:             "log_slave_updates",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "log_slave_updates"),
		SetValue:         setDummyValueErr("log_slave_updates"),
	},
	&definition{
		Name:             "log_slow_admin_statements",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "log_slow_admin_statements"),
		SetValue:         setDummyValue("log_slow_admin_statements"),
	},
	&definition{
		Name:             "log_slow_slave_statements",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "log_slow_slave_statements"),
		SetValue:         setDummyValue("log_slow_slave_statements"),
	},
	&definition{
		Name:             "log_statements_unsafe_for_binlog",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "log_statements_unsafe_for_binlog"),
		SetValue:         setDummyValue("log_statements_unsafe_for_binlog"),
	},
	&definition{
		Name:             "log_syslog",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "log_syslog"),
		SetValue:         setDummyValue("log_syslog"),
	},
	&definition{
		Name:             "log_syslog_facility",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("daemon", "log_syslog_facility"),
		SetValue:         setDummyValue("log_syslog_facility"),
	},
	&definition{
		Name:             "log_syslog_include_pid",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "log_syslog_include_pid"),
		SetValue:         setDummyValue("log_syslog_include_pid"),
	},
	&definition{
		Name:             "log_syslog_tag",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("empty string", "log_syslog_tag"),
		SetValue:         setDummyValue("log_syslog_tag"),
	},
	&definition{
		Name:             "log_throttle_queries_not_using_indexes",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "log_throttle_queries_not_using_indexes"),
		SetValue:         setDummyValue("log_throttle_queries_not_using_indexes"),
	},
	&definition{
		Name:             "log_timestamps",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("UTC", "log_timestamps"),
		SetValue:         setDummyValue("log_timestamps"),
	},
	&definition{
		Name:             "log_warnings",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "log_warnings"),
		SetValue:         setDummyValue("log_warnings"),
	},
	&definition{
		Name:             "long_query_time",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLNumeric,
		GetValue:         getDummyValue(10, "long_query_time"),
		SetValue:         setDummyValue("long_query_time"),
	},
	&definition{
		Name:             "low_priority_updates",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "low_priority_updates"),
		SetValue:         setDummyValue("low_priority_updates"),
	},
	&definition{
		Name:             "lower_case_file_system",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "lower_case_file_system"),
		SetValue:         setDummyValueErr("lower_case_file_system"),
	},
	&definition{
		Name:             "lower_case_table_names",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "lower_case_table_names"),
		SetValue:         setDummyValueErr("lower_case_table_names"),
	},
	&definition{
		Name:             "master_info_repository",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("FILE", "master_info_repository"),
		SetValue:         setDummyValue("master_info_repository"),
	},
	&definition{
		Name:             "master_verify_checksum",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "master_verify_checksum"),
		SetValue:         setDummyValue("master_verify_checksum"),
	},
	&definition{
		Name:             "max_binlog_cache_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "max_binlog_cache_size"),
		SetValue:         setDummyValue("max_binlog_cache_size"),
	},
	&definition{
		Name:             "max_binlog_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1073741824, "max_binlog_size"),
		SetValue:         setDummyValue("max_binlog_size"),
	},
	&definition{
		Name:             "max_binlog_stmt_cache_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "max_binlog_stmt_cache_size"),
		SetValue:         setDummyValue("max_binlog_stmt_cache_size"),
	},
	&definition{
		Name:             "max_connect_errors",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(100, "max_connect_errors"),
		SetValue:         setDummyValue("max_connect_errors"),
	},
	&definition{
		Name:             "max_connections",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(151, "max_connections"),
		SetValue:         setDummyValue("max_connections"),
	},
	&definition{
		Name:             "max_delayed_threads",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(20, "max_delayed_threads"),
		SetValue:         setDummyValue("max_delayed_threads"),
	},
	&definition{
		Name:             "max_digest_length",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1024, "max_digest_length"),
		SetValue:         setDummyValueErr("max_digest_length"),
	},
	&definition{
		Name:             "max_error_count",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(64, "max_error_count"),
		SetValue:         setDummyValue("max_error_count"),
	},
	&definition{
		Name:             "max_execution_time",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "max_execution_time"),
		SetValue:         setDummyValue("max_execution_time"),
	},
	&definition{
		Name:             "max_heap_table_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(16777216, "max_heap_table_size"),
		SetValue:         setDummyValue("max_heap_table_size"),
	},
	&definition{
		Name:             "max_insert_delayed_threads",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "max_insert_delayed_threads"),
		SetValue:         setDummyValue("max_insert_delayed_threads"),
	},
	&definition{
		Name:             "max_join_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "max_join_size"),
		SetValue:         setDummyValue("max_join_size"),
	},
	&definition{
		Name:             "max_length_for_sort_data",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1024, "max_length_for_sort_data"),
		SetValue:         setDummyValue("max_length_for_sort_data"),
	},
	&definition{
		Name:             "max_points_in_geometry",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(65536, "max_points_in_geometry"),
		SetValue:         setDummyValue("max_points_in_geometry"),
	},
	&definition{
		Name:             "max_prepared_stmt_count",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(16382, "max_prepared_stmt_count"),
		SetValue:         setDummyValue("max_prepared_stmt_count"),
	},
	&definition{
		Name:             "max_relay_log_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "max_relay_log_size"),
		SetValue:         setDummyValue("max_relay_log_size"),
	},
	&definition{
		Name:             "max_seeks_for_key",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(4294967295, "max_seeks_for_key"),
		SetValue:         setDummyValue("max_seeks_for_key"),
	},
	&definition{
		Name:             "max_sort_length",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1024, "max_sort_length"),
		SetValue:         setDummyValue("max_sort_length"),
	},
	&definition{
		Name:             "max_sp_recursion_depth",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "max_sp_recursion_depth"),
		SetValue:         setDummyValue("max_sp_recursion_depth"),
	},
	&definition{
		Name:             "max_statement_time",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "max_statement_time"),
		SetValue:         setDummyValue("max_statement_time"),
	},
	&definition{
		Name:             "max_user_connections",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "max_user_connections"),
		SetValue:         setDummyValue("max_user_connections"),
	},
	&definition{
		Name:             "max_write_lock_count",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(4294967295, "max_write_lock_count"),
		SetValue:         setDummyValue("max_write_lock_count"),
	},
	&definition{
		Name:             "mecab_rc_file",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "mecab_rc_file"),
		SetValue:         setDummyValueErr("mecab_rc_file"),
	},
	&definition{
		Name:             "metadata_locks_cache_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1024, "metadata_locks_cache_size"),
		SetValue:         setDummyValueErr("metadata_locks_cache_size"),
	},
	&definition{
		Name:             "metadata_locks_hash_instances",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(8, "metadata_locks_hash_instances"),
		SetValue:         setDummyValueErr("metadata_locks_hash_instances"),
	},
	&definition{
		Name:             "min_examined_row_limit",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "min_examined_row_limit"),
		SetValue:         setDummyValue("min_examined_row_limit"),
	},
	&definition{
		Name:             "multi_range_count",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(256, "multi_range_count"),
		SetValue:         setDummyValue("multi_range_count"),
	},
	&definition{
		Name:             "myisam_data_pointer_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(6, "myisam_data_pointer_size"),
		SetValue:         setDummyValue("myisam_data_pointer_size"),
	},
	&definition{
		Name:             "myisam_max_sort_file_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(2147483648, "myisam_max_sort_file_size"),
		SetValue:         setDummyValue("myisam_max_sort_file_size"),
	},
	&definition{
		Name:             "myisam_mmap_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(4294967295, "myisam_mmap_size"),
		SetValue:         setDummyValueErr("myisam_mmap_size"),
	},
	&definition{
		Name:             "myisam_recover_options",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLNone,
		GetValue:         getDummyValue(nil, "myisam_recover_options"),
		SetValue:         setDummyValueErr("myisam_recover_options"),
	},
	&definition{
		Name:             "myisam_repair_threads",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "myisam_repair_threads"),
		SetValue:         setDummyValue("myisam_repair_threads"),
	},
	&definition{
		Name:             "myisam_sort_buffer_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(8388608, "myisam_sort_buffer_size"),
		SetValue:         setDummyValue("myisam_sort_buffer_size"),
	},
	&definition{
		Name:             "myisam_stats_method",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("nulls_unequal", "myisam_stats_method"),
		SetValue:         setDummyValue("myisam_stats_method"),
	},
	&definition{
		Name:             "myisam_use_mmap",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "myisam_use_mmap"),
		SetValue:         setDummyValue("myisam_use_mmap"),
	},
	&definition{
		Name:             "mysql_firewall_mode",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "mysql_firewall_mode"),
		SetValue:         setDummyValue("mysql_firewall_mode"),
	},
	&definition{
		Name:             "mysql_firewall_trace",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "mysql_firewall_trace"),
		SetValue:         setDummyValue("mysql_firewall_trace"),
	},
	&definition{
		Name:             "mysql_native_password_proxy_users",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "mysql_native_password_proxy_users"),
		SetValue:         setDummyValue("mysql_native_password_proxy_users"),
	},
	&definition{
		Name:             "mysqlx_connect_timeout",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(30, "mysqlx_connect_timeout"),
		SetValue:         setDummyValue("mysqlx_connect_timeout"),
	},
	&definition{
		Name:             "mysqlx_max_connections",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(100, "mysqlx_max_connections"),
		SetValue:         setDummyValue("mysqlx_max_connections"),
	},
	&definition{
		Name:             "mysqlx_port",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(33060, "mysqlx_port"),
		SetValue:         setDummyValueErr("mysqlx_port"),
	},
	&definition{
		Name:             "mysqlx_ssl",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "mysqlx_ssl"),
		SetValue:         setDummyValueErr("mysqlx_ssl"),
	},
	&definition{
		Name:             "mysqlx_ssl_ca",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "mysqlx_ssl_ca"),
		SetValue:         setDummyValueErr("mysqlx_ssl_ca"),
	},
	&definition{
		Name:             "mysqlx_ssl_capath",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "mysqlx_ssl_capath"),
		SetValue:         setDummyValueErr("mysqlx_ssl_capath"),
	},
	&definition{
		Name:             "mysqlx_ssl_cert",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "mysqlx_ssl_cert"),
		SetValue:         setDummyValueErr("mysqlx_ssl_cert"),
	},
	&definition{
		Name:             "mysqlx_ssl_crl",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "mysqlx_ssl_crl"),
		SetValue:         setDummyValueErr("mysqlx_ssl_crl"),
	},
	&definition{
		Name:             "mysqlx_ssl_crlpath",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "mysqlx_ssl_crlpath"),
		SetValue:         setDummyValueErr("mysqlx_ssl_crlpath"),
	},
	&definition{
		Name:             "mysqlx_ssl_key",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "mysqlx_ssl_key"),
		SetValue:         setDummyValueErr("mysqlx_ssl_key"),
	},
	&definition{
		Name:             "named_pipe",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "named_pipe"),
		SetValue:         setDummyValueErr("named_pipe"),
	},
	&definition{
		Name:             "ndb_allow_copying_alter_table",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "ndb_allow_copying_alter_table"),
		SetValue:         setDummyValue("ndb_allow_copying_alter_table"),
	},
	&definition{
		Name:             "ndb_autoincrement_prefetch_sz",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(32, "ndb_autoincrement_prefetch_sz"),
		SetValue:         setDummyValue("ndb_autoincrement_prefetch_sz"),
	},
	&definition{
		Name:             "ndb_batch_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(32768, "ndb_batch_size"),
		SetValue:         setDummyValueErr("ndb_batch_size"),
	},
	&definition{
		Name:             "ndb_blob_read_batch_bytes",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(65536, "ndb_blob_read_batch_bytes"),
		SetValue:         setDummyValue("ndb_blob_read_batch_bytes"),
	},
	&definition{
		Name:             "ndb_blob_write_batch_bytes",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(65536, "ndb_blob_write_batch_bytes"),
		SetValue:         setDummyValue("ndb_blob_write_batch_bytes"),
	},
	&definition{
		Name:             "ndb_cache_check_time",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "ndb_cache_check_time"),
		SetValue:         setDummyValue("ndb_cache_check_time"),
	},
	&definition{
		Name:             "ndb_clear_apply_status",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "ndb_clear_apply_status"),
		SetValue:         setDummyValue("ndb_clear_apply_status"),
	},
	&definition{
		Name:             "ndb_cluster_connection_pool",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "ndb_cluster_connection_pool"),
		SetValue:         setDummyValueErr("ndb_cluster_connection_pool"),
	},
	&definition{
		Name:             "ndb_cluster_connection_pool_nodeids",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "ndb_cluster_connection_pool_nodeids"),
		SetValue:         setDummyValueErr("ndb_cluster_connection_pool_nodeids"),
	},
	&definition{
		Name:             "ndb_data_node_neighbour",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "ndb_data_node_neighbour"),
		SetValue:         setDummyValue("ndb_data_node_neighbour"),
	},
	&definition{
		Name:             "ndb_default_column_format",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("FIXED", "ndb_default_column_format"),
		SetValue:         setDummyValue("ndb_default_column_format"),
	},
	&definition{
		Name:             "ndb_deferred_constraints",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "ndb_deferred_constraints"),
		SetValue:         setDummyValue("ndb_deferred_constraints"),
	},
	&definition{
		Name:             "ndb_distribution",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("KEYHASH", "ndb_distribution"),
		SetValue:         setDummyValue("ndb_distribution"),
	},
	&definition{
		Name:             "ndb_eventbuffer_free_percent",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(20, "ndb_eventbuffer_free_percent"),
		SetValue:         setDummyValue("ndb_eventbuffer_free_percent"),
	},
	&definition{
		Name:             "ndb_eventbuffer_max_alloc",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "ndb_eventbuffer_max_alloc"),
		SetValue:         setDummyValue("ndb_eventbuffer_max_alloc"),
	},
	&definition{
		Name:             "ndb_extra_logging",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "ndb_extra_logging"),
		SetValue:         setDummyValue("ndb_extra_logging"),
	},
	&definition{
		Name:             "ndb_force_send",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "ndb_force_send"),
		SetValue:         setDummyValue("ndb_force_send"),
	},
	&definition{
		Name:             "ndb_fully_replicated",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "ndb_fully_replicated"),
		SetValue:         setDummyValue("ndb_fully_replicated"),
	},
	&definition{
		Name:             "ndb_index_stat_enable",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "ndb_index_stat_enable"),
		SetValue:         setDummyValue("ndb_index_stat_enable"),
	},
	&definition{
		Name:             "ndb_index_stat_option",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("loop_enable=1000ms,loop_idle=1000ms,loop_busy=100ms, update_batch=1,read_batch=4,idle_batch=32,check_batch=8, check_delay=10m,delete_batch=8, clean_delay=1m,error_batch=4, error_delay=1m,evict_batch=8,evict_delay=1m,cache_limit=32M, cache_lowpct=90,zero_total=0", "ndb_index_stat_option"),
		SetValue:         setDummyValue("ndb_index_stat_option"),
	},
	&definition{
		Name:             "ndb_join_pushdown",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "ndb_join_pushdown"),
		SetValue:         setDummyValue("ndb_join_pushdown"),
	},
	&definition{
		Name:             "ndb_log_apply_status",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "ndb_log_apply_status"),
		SetValue:         setDummyValueErr("ndb_log_apply_status"),
	},
	&definition{
		Name:             "ndb_log_bin",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "ndb_log_bin"),
		SetValue:         setDummyValue("ndb_log_bin"),
	},
	&definition{
		Name:             "ndb_log_binlog_index",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "ndb_log_binlog_index"),
		SetValue:         setDummyValue("ndb_log_binlog_index"),
	},
	&definition{
		Name:             "ndb_log_empty_epochs",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "ndb_log_empty_epochs"),
		SetValue:         setDummyValue("ndb_log_empty_epochs"),
	},
	&definition{
		Name:             "ndb_log_exclusive_reads",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "ndb_log_exclusive_reads"),
		SetValue:         setDummyValue("ndb_log_exclusive_reads"),
	},
	&definition{
		Name:             "ndb_log_orig",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "ndb_log_orig"),
		SetValue:         setDummyValueErr("ndb_log_orig"),
	},
	&definition{
		Name:             "ndb_log_transaction_id",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "ndb_log_transaction_id"),
		SetValue:         setDummyValueErr("ndb_log_transaction_id"),
	},
	&definition{
		Name:             "ndb_log_updated_only",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "ndb_log_updated_only"),
		SetValue:         setDummyValue("ndb_log_updated_only"),
	},
	&definition{
		Name:             "ndb_optimization_delay",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(10, "ndb_optimization_delay"),
		SetValue:         setDummyValue("ndb_optimization_delay"),
	},
	&definition{
		Name:             "ndb_optimized_node_selection",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(3, "ndb_optimized_node_selection"),
		SetValue:         setDummyValueErr("ndb_optimized_node_selection"),
	},
	&definition{
		Name:             "ndb_read_backup",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "ndb_read_backup"),
		SetValue:         setDummyValue("ndb_read_backup"),
	},
	&definition{
		Name:             "ndb_recv_thread_cpu_mask",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("unimplemented", "ndb_recv_thread_cpu_mask"),
		SetValue:         setDummyValue("ndb_recv_thread_cpu_mask"),
	},
	&definition{
		Name:             "ndb_report_thresh_binlog_epoch_slip",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(3, "ndb_report_thresh_binlog_epoch_slip"),
		SetValue:         setDummyValue("ndb_report_thresh_binlog_epoch_slip"),
	},
	&definition{
		Name:             "ndb_report_thresh_binlog_mem_usage",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(10, "ndb_report_thresh_binlog_mem_usage"),
		SetValue:         setDummyValue("ndb_report_thresh_binlog_mem_usage"),
	},
	&definition{
		Name:             "ndb_show_foreign_key_mock_tables",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "ndb_show_foreign_key_mock_tables"),
		SetValue:         setDummyValue("ndb_show_foreign_key_mock_tables"),
	},
	&definition{
		Name:             "ndb_slave_conflict_role",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("NONE", "ndb_slave_conflict_role"),
		SetValue:         setDummyValue("ndb_slave_conflict_role"),
	},
	&definition{
		Name:             "Ndb_slave_max_replicated_epoch",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("unimplemented", "Ndb_slave_max_replicated_epoch"),
		SetValue:         setDummyValueErr("Ndb_slave_max_replicated_epoch"),
	},
	&definition{
		Name:             "ndb_table_no_logging",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "ndb_table_no_logging"),
		SetValue:         setDummyValue("ndb_table_no_logging"),
	},
	&definition{
		Name:             "ndb_table_temporary",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "ndb_table_temporary"),
		SetValue:         setDummyValue("ndb_table_temporary"),
	},
	&definition{
		Name:             "ndb_use_copying_alter_table",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "ndb_use_copying_alter_table"),
		SetValue:         setDummyValueErr("ndb_use_copying_alter_table"),
	},
	&definition{
		Name:             "ndb_use_exact_count",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "ndb_use_exact_count"),
		SetValue:         setDummyValue("ndb_use_exact_count"),
	},
	&definition{
		Name:             "ndb_use_transactions",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "ndb_use_transactions"),
		SetValue:         setDummyValue("ndb_use_transactions"),
	},
	&definition{
		Name:             "ndb_version",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "ndb_version"),
		SetValue:         setDummyValueErr("ndb_version"),
	},
	&definition{
		Name:             "ndb_version_string",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "ndb_version_string"),
		SetValue:         setDummyValueErr("ndb_version_string"),
	},
	&definition{
		Name:             "ndb_wait_connected",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "ndb_wait_connected"),
		SetValue:         setDummyValueErr("ndb_wait_connected"),
	},
	&definition{
		Name:             "ndb_wait_setup",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(15, "ndb_wait_setup"),
		SetValue:         setDummyValueErr("ndb_wait_setup"),
	},
	&definition{
		Name:             "ndbinfo_database",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("ndbinfo", "ndbinfo_database"),
		SetValue:         setDummyValueErr("ndbinfo_database"),
	},
	&definition{
		Name:             "ndbinfo_max_bytes",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "ndbinfo_max_bytes"),
		SetValue:         setDummyValue("ndbinfo_max_bytes"),
	},
	&definition{
		Name:             "ndbinfo_max_rows",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(10, "ndbinfo_max_rows"),
		SetValue:         setDummyValue("ndbinfo_max_rows"),
	},
	&definition{
		Name:             "ndbinfo_offline",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "ndbinfo_offline"),
		SetValue:         setDummyValue("ndbinfo_offline"),
	},
	&definition{
		Name:             "ndbinfo_show_hidden",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "ndbinfo_show_hidden"),
		SetValue:         setDummyValue("ndbinfo_show_hidden"),
	},
	&definition{
		Name:             "ndbinfo_table_prefix",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("ndb$", "ndbinfo_table_prefix"),
		SetValue:         setDummyValue("ndbinfo_table_prefix"),
	},
	&definition{
		Name:             "ndbinfo_version",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "ndbinfo_version"),
		SetValue:         setDummyValueErr("ndbinfo_version"),
	},
	&definition{
		Name:             "net_buffer_length",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(16384, "net_buffer_length"),
		SetValue:         setDummyValue("net_buffer_length"),
	},
	&definition{
		Name:             "net_read_timeout",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(30, "net_read_timeout"),
		SetValue:         setDummyValue("net_read_timeout"),
	},
	&definition{
		Name:             "net_retry_count",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(10, "net_retry_count"),
		SetValue:         setDummyValue("net_retry_count"),
	},
	&definition{
		Name:             "net_write_timeout",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(60, "net_write_timeout"),
		SetValue:         setDummyValue("net_write_timeout"),
	},
	&definition{
		Name:             "new",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "new"),
		SetValue:         setDummyValue("new"),
	},
	&definition{
		Name:             "ngram_token_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(2, "ngram_token_size"),
		SetValue:         setDummyValueErr("ngram_token_size"),
	},
	&definition{
		Name:             "offline_mode",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "offline_mode"),
		SetValue:         setDummyValue("offline_mode"),
	},
	&definition{
		Name:             "old",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLNone,
		GetValue:         getDummyValue(nil, "old"),
		SetValue:         setDummyValueErr("old"),
	},
	&definition{
		Name:             "old_alter_table",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "old_alter_table"),
		SetValue:         setDummyValue("old_alter_table"),
	},
	&definition{
		Name:             "old_passwords",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("0", "old_passwords"),
		SetValue:         setDummyValue("old_passwords"),
	},
	&definition{
		Name:             "open_files_limit",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "open_files_limit"),
		SetValue:         setDummyValueErr("open_files_limit"),
	},
	&definition{
		Name:             "optimizer_prune_level",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "optimizer_prune_level"),
		SetValue:         setDummyValue("optimizer_prune_level"),
	},
	&definition{
		Name:             "optimizer_search_depth",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(62, "optimizer_search_depth"),
		SetValue:         setDummyValue("optimizer_search_depth"),
	},
	&definition{
		Name:             "optimizer_switch",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "optimizer_switch"),
		SetValue:         setDummyValue("optimizer_switch"),
	},
	&definition{
		Name:             "optimizer_trace",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "optimizer_trace"),
		SetValue:         setDummyValue("optimizer_trace"),
	},
	&definition{
		Name:             "optimizer_trace_features",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "optimizer_trace_features"),
		SetValue:         setDummyValue("optimizer_trace_features"),
	},
	&definition{
		Name:             "optimizer_trace_limit",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "optimizer_trace_limit"),
		SetValue:         setDummyValue("optimizer_trace_limit"),
	},
	&definition{
		Name:             "optimizer_trace_max_mem_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(16384, "optimizer_trace_max_mem_size"),
		SetValue:         setDummyValue("optimizer_trace_max_mem_size"),
	},
	&definition{
		Name:             "optimizer_trace_offset",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(-1, "optimizer_trace_offset"),
		SetValue:         setDummyValue("optimizer_trace_offset"),
	},
	&definition{
		Name:             "parser_max_mem_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(4294967295, "parser_max_mem_size"),
		SetValue:         setDummyValue("parser_max_mem_size"),
	},
	&definition{
		Name:             "performance_schema",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "performance_schema"),
		SetValue:         setDummyValueErr("performance_schema"),
	},
	&definition{
		Name:             "performance_schema_accounts_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_accounts_size"),
		SetValue:         setDummyValueErr("performance_schema_accounts_size"),
	},
	&definition{
		Name:             "performance_schema_digests_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_digests_size"),
		SetValue:         setDummyValueErr("performance_schema_digests_size"),
	},
	&definition{
		Name:             "performance_schema_events_stages_history_long_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_events_stages_history_long_size"),
		SetValue:         setDummyValueErr("performance_schema_events_stages_history_long_size"),
	},
	&definition{
		Name:             "performance_schema_events_stages_history_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_events_stages_history_size"),
		SetValue:         setDummyValueErr("performance_schema_events_stages_history_size"),
	},
	&definition{
		Name:             "performance_schema_events_statements_history_long_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_events_statements_history_long_size"),
		SetValue:         setDummyValueErr("performance_schema_events_statements_history_long_size"),
	},
	&definition{
		Name:             "performance_schema_events_statements_history_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_events_statements_history_size"),
		SetValue:         setDummyValueErr("performance_schema_events_statements_history_size"),
	},
	&definition{
		Name:             "performance_schema_events_transactions_history_long_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_events_transactions_history_long_size"),
		SetValue:         setDummyValueErr("performance_schema_events_transactions_history_long_size"),
	},
	&definition{
		Name:             "performance_schema_events_transactions_history_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_events_transactions_history_size"),
		SetValue:         setDummyValueErr("performance_schema_events_transactions_history_size"),
	},
	&definition{
		Name:             "performance_schema_events_waits_history_long_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_events_waits_history_long_size"),
		SetValue:         setDummyValueErr("performance_schema_events_waits_history_long_size"),
	},
	&definition{
		Name:             "performance_schema_events_waits_history_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_events_waits_history_size"),
		SetValue:         setDummyValueErr("performance_schema_events_waits_history_size"),
	},
	&definition{
		Name:             "performance_schema_hosts_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_hosts_size"),
		SetValue:         setDummyValueErr("performance_schema_hosts_size"),
	},
	&definition{
		Name:             "performance_schema_max_cond_classes",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(80, "performance_schema_max_cond_classes"),
		SetValue:         setDummyValueErr("performance_schema_max_cond_classes"),
	},
	&definition{
		Name:             "performance_schema_max_cond_instances",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_max_cond_instances"),
		SetValue:         setDummyValueErr("performance_schema_max_cond_instances"),
	},
	&definition{
		Name:             "performance_schema_max_digest_length",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1024, "performance_schema_max_digest_length"),
		SetValue:         setDummyValueErr("performance_schema_max_digest_length"),
	},
	&definition{
		Name:             "performance_schema_max_file_classes",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(50, "performance_schema_max_file_classes"),
		SetValue:         setDummyValueErr("performance_schema_max_file_classes"),
	},
	&definition{
		Name:             "performance_schema_max_file_handles",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(32768, "performance_schema_max_file_handles"),
		SetValue:         setDummyValueErr("performance_schema_max_file_handles"),
	},
	&definition{
		Name:             "performance_schema_max_file_instances",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_max_file_instances"),
		SetValue:         setDummyValueErr("performance_schema_max_file_instances"),
	},
	&definition{
		Name:             "performance_schema_max_index_stat",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_max_index_stat"),
		SetValue:         setDummyValueErr("performance_schema_max_index_stat"),
	},
	&definition{
		Name:             "performance_schema_max_memory_classes",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(250, "performance_schema_max_memory_classes"),
		SetValue:         setDummyValueErr("performance_schema_max_memory_classes"),
	},
	&definition{
		Name:             "performance_schema_max_metadata_locks",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_max_metadata_locks"),
		SetValue:         setDummyValueErr("performance_schema_max_metadata_locks"),
	},
	&definition{
		Name:             "performance_schema_max_mutex_classes",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(200, "performance_schema_max_mutex_classes"),
		SetValue:         setDummyValueErr("performance_schema_max_mutex_classes"),
	},
	&definition{
		Name:             "performance_schema_max_mutex_instances",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_max_mutex_instances"),
		SetValue:         setDummyValueErr("performance_schema_max_mutex_instances"),
	},
	&definition{
		Name:             "performance_schema_max_prepared_statements_instances",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_max_prepared_statements_instances"),
		SetValue:         setDummyValueErr("performance_schema_max_prepared_statements_instances"),
	},
	&definition{
		Name:             "performance_schema_max_program_instances",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(5000, "performance_schema_max_program_instances"),
		SetValue:         setDummyValueErr("performance_schema_max_program_instances"),
	},
	&definition{
		Name:             "performance_schema_max_rwlock_classes",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(30, "performance_schema_max_rwlock_classes"),
		SetValue:         setDummyValueErr("performance_schema_max_rwlock_classes"),
	},
	&definition{
		Name:             "performance_schema_max_rwlock_instances",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_max_rwlock_instances"),
		SetValue:         setDummyValueErr("performance_schema_max_rwlock_instances"),
	},
	&definition{
		Name:             "performance_schema_max_socket_classes",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(10, "performance_schema_max_socket_classes"),
		SetValue:         setDummyValueErr("performance_schema_max_socket_classes"),
	},
	&definition{
		Name:             "performance_schema_max_socket_instances",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_max_socket_instances"),
		SetValue:         setDummyValueErr("performance_schema_max_socket_instances"),
	},
	&definition{
		Name:             "performance_schema_max_sql_text_length",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1024, "performance_schema_max_sql_text_length"),
		SetValue:         setDummyValueErr("performance_schema_max_sql_text_length"),
	},
	&definition{
		Name:             "performance_schema_max_stage_classes",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(150, "performance_schema_max_stage_classes"),
		SetValue:         setDummyValueErr("performance_schema_max_stage_classes"),
	},
	&definition{
		Name:             "performance_schema_max_statement_classes",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_max_statement_classes"),
		SetValue:         setDummyValueErr("performance_schema_max_statement_classes"),
	},
	&definition{
		Name:             "performance_schema_max_statement_stack",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(10, "performance_schema_max_statement_stack"),
		SetValue:         setDummyValueErr("performance_schema_max_statement_stack"),
	},
	&definition{
		Name:             "performance_schema_max_table_handles",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_max_table_handles"),
		SetValue:         setDummyValueErr("performance_schema_max_table_handles"),
	},
	&definition{
		Name:             "performance_schema_max_table_instances",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_max_table_instances"),
		SetValue:         setDummyValueErr("performance_schema_max_table_instances"),
	},
	&definition{
		Name:             "performance_schema_max_table_lock_stat",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_max_table_lock_stat"),
		SetValue:         setDummyValueErr("performance_schema_max_table_lock_stat"),
	},
	&definition{
		Name:             "performance_schema_max_thread_classes",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(50, "performance_schema_max_thread_classes"),
		SetValue:         setDummyValueErr("performance_schema_max_thread_classes"),
	},
	&definition{
		Name:             "performance_schema_max_thread_instances",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_max_thread_instances"),
		SetValue:         setDummyValueErr("performance_schema_max_thread_instances"),
	},
	&definition{
		Name:             "performance_schema_session_connect_attrs_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_session_connect_attrs_size"),
		SetValue:         setDummyValueErr("performance_schema_session_connect_attrs_size"),
	},
	&definition{
		Name:             "performance_schema_setup_actors_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(100, "performance_schema_setup_actors_size"),
		SetValue:         setDummyValueErr("performance_schema_setup_actors_size"),
	},
	&definition{
		Name:             "performance_schema_setup_objects_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(100, "performance_schema_setup_objects_size"),
		SetValue:         setDummyValueErr("performance_schema_setup_objects_size"),
	},
	&definition{
		Name:             "performance_schema_users_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "performance_schema_users_size"),
		SetValue:         setDummyValueErr("performance_schema_users_size"),
	},
	&definition{
		Name:             "pid_file",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "pid_file"),
		SetValue:         setDummyValueErr("pid_file"),
	},
	&definition{
		Name:             "plugin_dir",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("BASEDIR/lib/plugin", "plugin_dir"),
		SetValue:         setDummyValueErr("plugin_dir"),
	},
	&definition{
		Name:             "port",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(3306, "port"),
		SetValue:         setDummyValueErr("port"),
	},
	&definition{
		Name:             "preload_buffer_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(32768, "preload_buffer_size"),
		SetValue:         setDummyValue("preload_buffer_size"),
	},
	&definition{
		Name:             "protocol_version",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "protocol_version"),
		SetValue:         setDummyValueErr("protocol_version"),
	},
	&definition{
		Name:             "proxy_user",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "proxy_user"),
		SetValue:         setDummyValueErr("proxy_user"),
	},
	&definition{
		Name:             "pseudo_slave_mode",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "pseudo_slave_mode"),
		SetValue:         setDummyValue("pseudo_slave_mode"),
	},
	&definition{
		Name:             "pseudo_thread_id",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "pseudo_thread_id"),
		SetValue:         setDummyValue("pseudo_thread_id"),
	},
	&definition{
		Name:             "query_alloc_block_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(8192, "query_alloc_block_size"),
		SetValue:         setDummyValue("query_alloc_block_size"),
	},
	&definition{
		Name:             "query_cache_limit",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1048576, "query_cache_limit"),
		SetValue:         setDummyValue("query_cache_limit"),
	},
	&definition{
		Name:             "query_cache_min_res_unit",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(4096, "query_cache_min_res_unit"),
		SetValue:         setDummyValue("query_cache_min_res_unit"),
	},
	&definition{
		Name:             "query_cache_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1048576, "query_cache_size"),
		SetValue:         setDummyValue("query_cache_size"),
	},
	&definition{
		Name:             "query_cache_type",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("0", "query_cache_type"),
		SetValue:         setDummyValue("query_cache_type"),
	},
	&definition{
		Name:             "query_cache_wlock_invalidate",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "query_cache_wlock_invalidate"),
		SetValue:         setDummyValue("query_cache_wlock_invalidate"),
	},
	&definition{
		Name:             "query_prealloc_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(8192, "query_prealloc_size"),
		SetValue:         setDummyValue("query_prealloc_size"),
	},
	&definition{
		Name:             "rand_seed1",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLNumeric,
		GetValue:         getDummyValue(0.0, "rand_seed1"),
		SetValue:         setDummyValue("rand_seed1"),
	},
	&definition{
		Name:             "rand_seed2",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLNumeric,
		GetValue:         getDummyValue(0.0, "rand_seed2"),
		SetValue:         setDummyValue("rand_seed2"),
	},
	&definition{
		Name:             "range_alloc_block_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(4096, "range_alloc_block_size"),
		SetValue:         setDummyValue("range_alloc_block_size"),
	},
	&definition{
		Name:             "range_optimizer_max_mem_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1536000, "range_optimizer_max_mem_size"),
		SetValue:         setDummyValue("range_optimizer_max_mem_size"),
	},
	&definition{
		Name:             "rbr_exec_mode",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("STRICT", "rbr_exec_mode"),
		SetValue:         setDummyValue("rbr_exec_mode"),
	},
	&definition{
		Name:             "read_buffer_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(131072, "read_buffer_size"),
		SetValue:         setDummyValue("read_buffer_size"),
	},
	&definition{
		Name:             "read_only",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "read_only"),
		SetValue:         setDummyValue("read_only"),
	},
	&definition{
		Name:             "read_rnd_buffer_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(262144, "read_rnd_buffer_size"),
		SetValue:         setDummyValue("read_rnd_buffer_size"),
	},
	&definition{
		Name:             "relay_log",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "relay_log"),
		SetValue:         setDummyValueErr("relay_log"),
	},
	&definition{
		Name:             "relay_log_basename",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("datadir + '/' + hostname + '-relay-bin'", "relay_log_basename"),
		SetValue:         setDummyValueErr("relay_log_basename"),
	},
	&definition{
		Name:             "relay_log_index",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("*host_name*-relay-bin.index", "relay_log_index"),
		SetValue:         setDummyValueErr("relay_log_index"),
	},
	&definition{
		Name:             "relay_log_info_file",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("relay-log.info", "relay_log_info_file"),
		SetValue:         setDummyValueErr("relay_log_info_file"),
	},
	&definition{
		Name:             "relay_log_info_repository",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("FILE", "relay_log_info_repository"),
		SetValue:         setDummyValue("relay_log_info_repository"),
	},
	&definition{
		Name:             "relay_log_purge",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "relay_log_purge"),
		SetValue:         setDummyValue("relay_log_purge"),
	},
	&definition{
		Name:             "relay_log_recovery",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "relay_log_recovery"),
		SetValue:         setDummyValueErr("relay_log_recovery"),
	},
	&definition{
		Name:             "relay_log_space_limit",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "relay_log_space_limit"),
		SetValue:         setDummyValueErr("relay_log_space_limit"),
	},
	&definition{
		Name:             "report_host",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "report_host"),
		SetValue:         setDummyValueErr("report_host"),
	},
	&definition{
		Name:             "report_password",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "report_password"),
		SetValue:         setDummyValueErr("report_password"),
	},
	&definition{
		Name:             "report_port",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "report_port"),
		SetValue:         setDummyValueErr("report_port"),
	},
	&definition{
		Name:             "report_user",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "report_user"),
		SetValue:         setDummyValueErr("report_user"),
	},
	&definition{
		Name:             "require_secure_transport",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "require_secure_transport"),
		SetValue:         setDummyValue("require_secure_transport"),
	},
	&definition{
		Name:             "rewriter_enabled",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "rewriter_enabled"),
		SetValue:         setDummyValue("rewriter_enabled"),
	},
	&definition{
		Name:             "rewriter_verbose",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "rewriter_verbose"),
		SetValue:         setDummyValue("rewriter_verbose"),
	},
	&definition{
		Name:             "rpl_semi_sync_master_enabled",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "rpl_semi_sync_master_enabled"),
		SetValue:         setDummyValue("rpl_semi_sync_master_enabled"),
	},
	&definition{
		Name:             "rpl_semi_sync_master_timeout",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(10000, "rpl_semi_sync_master_timeout"),
		SetValue:         setDummyValue("rpl_semi_sync_master_timeout"),
	},
	&definition{
		Name:             "rpl_semi_sync_master_trace_level",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(32, "rpl_semi_sync_master_trace_level"),
		SetValue:         setDummyValue("rpl_semi_sync_master_trace_level"),
	},
	&definition{
		Name:             "rpl_semi_sync_master_wait_for_slave_count",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "rpl_semi_sync_master_wait_for_slave_count"),
		SetValue:         setDummyValue("rpl_semi_sync_master_wait_for_slave_count"),
	},
	&definition{
		Name:             "rpl_semi_sync_master_wait_no_slave",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "rpl_semi_sync_master_wait_no_slave"),
		SetValue:         setDummyValue("rpl_semi_sync_master_wait_no_slave"),
	},
	&definition{
		Name:             "rpl_semi_sync_master_wait_point",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("AFTER_SYNC", "rpl_semi_sync_master_wait_point"),
		SetValue:         setDummyValue("rpl_semi_sync_master_wait_point"),
	},
	&definition{
		Name:             "rpl_semi_sync_slave_enabled",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "rpl_semi_sync_slave_enabled"),
		SetValue:         setDummyValue("rpl_semi_sync_slave_enabled"),
	},
	&definition{
		Name:             "rpl_semi_sync_slave_trace_level",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(32, "rpl_semi_sync_slave_trace_level"),
		SetValue:         setDummyValue("rpl_semi_sync_slave_trace_level"),
	},
	&definition{
		Name:             "rpl_stop_slave_timeout",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(31536000, "rpl_stop_slave_timeout"),
		SetValue:         setDummyValue("rpl_stop_slave_timeout"),
	},
	&definition{
		Name:             "secure_auth",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "secure_auth"),
		SetValue:         setDummyValue("secure_auth"),
	},
	&definition{
		Name:             "secure_file_priv",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("empty", "secure_file_priv"),
		SetValue:         setDummyValueErr("secure_file_priv"),
	},
	&definition{
		Name:             "server_id",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "server_id"),
		SetValue:         setDummyValue("server_id"),
	},
	&definition{
		Name:             "server_id_bits",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(32, "server_id_bits"),
		SetValue:         setDummyValueErr("server_id_bits"),
	},
	&definition{
		Name:             "server_uuid",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "server_uuid"),
		SetValue:         setDummyValueErr("server_uuid"),
	},
	&definition{
		Name:             "session_track_gtids",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("OFF", "session_track_gtids"),
		SetValue:         setDummyValue("session_track_gtids"),
	},
	&definition{
		Name:             "session_track_schema",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "session_track_schema"),
		SetValue:         setDummyValue("session_track_schema"),
	},
	&definition{
		Name:             "session_track_state_change",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "session_track_state_change"),
		SetValue:         setDummyValue("session_track_state_change"),
	},
	&definition{
		Name:             "session_track_system_variables",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("time_zone, autocommit, character_set_client, character_set_results, character_set_connection", "session_track_system_variables"),
		SetValue:         setDummyValue("session_track_system_variables"),
	},
	&definition{
		Name:             "sha256_password_auto_generate_rsa_keys",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "sha256_password_auto_generate_rsa_keys"),
		SetValue:         setDummyValueErr("sha256_password_auto_generate_rsa_keys"),
	},
	&definition{
		Name:             "sha256_password_private_key_path",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("private_key.pem", "sha256_password_private_key_path"),
		SetValue:         setDummyValueErr("sha256_password_private_key_path"),
	},
	&definition{
		Name:             "sha256_password_proxy_users",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "sha256_password_proxy_users"),
		SetValue:         setDummyValue("sha256_password_proxy_users"),
	},
	&definition{
		Name:             "sha256_password_public_key_path",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("public_key.pem", "sha256_password_public_key_path"),
		SetValue:         setDummyValueErr("sha256_password_public_key_path"),
	},
	&definition{
		Name:             "shared_memory",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "shared_memory"),
		SetValue:         setDummyValueErr("shared_memory"),
	},
	&definition{
		Name:             "shared_memory_base_name",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("MYSQL", "shared_memory_base_name"),
		SetValue:         setDummyValueErr("shared_memory_base_name"),
	},
	&definition{
		Name:             "show_compatibility_56",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "show_compatibility_56"),
		SetValue:         setDummyValue("show_compatibility_56"),
	},
	&definition{
		Name:             "show_old_temporals",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "show_old_temporals"),
		SetValue:         setDummyValue("show_old_temporals"),
	},
	&definition{
		Name:             "simplified_binlog_gtid_recovery",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "simplified_binlog_gtid_recovery"),
		SetValue:         setDummyValueErr("simplified_binlog_gtid_recovery"),
	},
	&definition{
		Name:             "skip_external_locking",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "skip_external_locking"),
		SetValue:         setDummyValueErr("skip_external_locking"),
	},
	&definition{
		Name:             "skip_name_resolve",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "skip_name_resolve"),
		SetValue:         setDummyValueErr("skip_name_resolve"),
	},
	&definition{
		Name:             "skip_networking",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "skip_networking"),
		SetValue:         setDummyValueErr("skip_networking"),
	},
	&definition{
		Name:             "skip_show_database",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLNone,
		GetValue:         getDummyValue(nil, "skip_show_database"),
		SetValue:         setDummyValueErr("skip_show_database"),
	},
	&definition{
		Name:             "slave_allow_batching",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "slave_allow_batching"),
		SetValue:         setDummyValue("slave_allow_batching"),
	},
	&definition{
		Name:             "slave_checkpoint_group",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(512, "slave_checkpoint_group"),
		SetValue:         setDummyValue("slave_checkpoint_group"),
	},
	&definition{
		Name:             "slave_checkpoint_period",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(300, "slave_checkpoint_period"),
		SetValue:         setDummyValue("slave_checkpoint_period"),
	},
	&definition{
		Name:             "slave_compressed_protocol",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "slave_compressed_protocol"),
		SetValue:         setDummyValue("slave_compressed_protocol"),
	},
	&definition{
		Name:             "slave_exec_mode",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("STRICT", "slave_exec_mode"),
		SetValue:         setDummyValue("slave_exec_mode"),
	},
	&definition{
		Name:             "slave_load_tmpdir",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("/tmp", "slave_load_tmpdir"),
		SetValue:         setDummyValueErr("slave_load_tmpdir"),
	},
	&definition{
		Name:             "slave_max_allowed_packet",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1073741824, "slave_max_allowed_packet"),
		SetValue:         setDummyValue("slave_max_allowed_packet"),
	},
	&definition{
		Name:             "slave_net_timeout",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(3600, "slave_net_timeout"),
		SetValue:         setDummyValue("slave_net_timeout"),
	},
	&definition{
		Name:             "slave_parallel_type",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("DATABASE", "slave_parallel_type"),
		SetValue:         setDummyValue("slave_parallel_type"),
	},
	&definition{
		Name:             "slave_parallel_workers",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "slave_parallel_workers"),
		SetValue:         setDummyValue("slave_parallel_workers"),
	},
	&definition{
		Name:             "slave_pending_jobs_size_max",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "slave_pending_jobs_size_max"),
		SetValue:         setDummyValue("slave_pending_jobs_size_max"),
	},
	&definition{
		Name:             "slave_preserve_commit_order",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "slave_preserve_commit_order"),
		SetValue:         setDummyValue("slave_preserve_commit_order"),
	},
	&definition{
		Name:             "slave_rows_search_algorithms",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("TABLE_SCAN,INDEX_SCAN", "slave_rows_search_algorithms"),
		SetValue:         setDummyValue("slave_rows_search_algorithms"),
	},
	&definition{
		Name:             "slave_skip_errors",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("OFF", "slave_skip_errors"),
		SetValue:         setDummyValueErr("slave_skip_errors"),
	},
	&definition{
		Name:             "slave_sql_verify_checksum",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "slave_sql_verify_checksum"),
		SetValue:         setDummyValue("slave_sql_verify_checksum"),
	},
	&definition{
		Name:             "slave_transaction_retries",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(10, "slave_transaction_retries"),
		SetValue:         setDummyValue("slave_transaction_retries"),
	},
	&definition{
		Name:             "slave_type_conversions",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "slave_type_conversions"),
		SetValue:         setDummyValueErr("slave_type_conversions"),
	},
	&definition{
		Name:             "slow_launch_time",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(2, "slow_launch_time"),
		SetValue:         setDummyValue("slow_launch_time"),
	},
	&definition{
		Name:             "slow_query_log",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "slow_query_log"),
		SetValue:         setDummyValue("slow_query_log"),
	},
	&definition{
		Name:             "slow_query_log_file",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("host_name-slow.log", "slow_query_log_file"),
		SetValue:         setDummyValue("slow_query_log_file"),
	},
	&definition{
		Name:             "socket",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("/tmp/mysql.sock", "socket"),
		SetValue:         setDummyValueErr("socket"),
	},
	&definition{
		Name:             "sort_buffer_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(262144, "sort_buffer_size"),
		SetValue:         setDummyValue("sort_buffer_size"),
	},
	&definition{
		Name:             "sql_big_selects",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "sql_big_selects"),
		SetValue:         setDummyValue("sql_big_selects"),
	},
	&definition{
		Name:             "sql_buffer_result",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "sql_buffer_result"),
		SetValue:         setDummyValue("sql_buffer_result"),
	},
	&definition{
		Name:             "sql_log_bin",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "sql_log_bin"),
		SetValue:         setDummyValue("sql_log_bin"),
	},
	&definition{
		Name:             "sql_log_off",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "sql_log_off"),
		SetValue:         setDummyValue("sql_log_off"),
	},
	&definition{
		Name:             "sql_mode",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("NO_ENGINE_SUBSTITUTION", "sql_mode"),
		SetValue:         setDummyValue("sql_mode"),
	},
	&definition{
		Name:             "sql_notes",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "sql_notes"),
		SetValue:         setDummyValue("sql_notes"),
	},
	&definition{
		Name:             "sql_quote_show_create",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "sql_quote_show_create"),
		SetValue:         setDummyValue("sql_quote_show_create"),
	},
	&definition{
		Name:             "sql_safe_updates",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "sql_safe_updates"),
		SetValue:         setDummyValue("sql_safe_updates"),
	},
	&definition{
		Name:             "sql_select_limit",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "sql_select_limit"),
		SetValue:         setDummyValue("sql_select_limit"),
	},
	&definition{
		Name:             "sql_slave_skip_counter",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "sql_slave_skip_counter"),
		SetValue:         setDummyValue("sql_slave_skip_counter"),
	},
	&definition{
		Name:             "sql_warnings",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "sql_warnings"),
		SetValue:         setDummyValue("sql_warnings"),
	},
	&definition{
		Name:             "ssl_ca",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "ssl_ca"),
		SetValue:         setDummyValueErr("ssl_ca"),
	},
	&definition{
		Name:             "ssl_capath",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "ssl_capath"),
		SetValue:         setDummyValueErr("ssl_capath"),
	},
	&definition{
		Name:             "ssl_cert",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "ssl_cert"),
		SetValue:         setDummyValueErr("ssl_cert"),
	},
	&definition{
		Name:             "ssl_cipher",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "ssl_cipher"),
		SetValue:         setDummyValueErr("ssl_cipher"),
	},
	&definition{
		Name:             "ssl_crl",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "ssl_crl"),
		SetValue:         setDummyValueErr("ssl_crl"),
	},
	&definition{
		Name:             "ssl_crlpath",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "ssl_crlpath"),
		SetValue:         setDummyValueErr("ssl_crlpath"),
	},
	&definition{
		Name:             "ssl_key",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "ssl_key"),
		SetValue:         setDummyValueErr("ssl_key"),
	},
	&definition{
		Name:             "storage_engine",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("InnoDB", "storage_engine"),
		SetValue:         setDummyValue("storage_engine"),
	},
	&definition{
		Name:             "stored_program_cache",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(256, "stored_program_cache"),
		SetValue:         setDummyValue("stored_program_cache"),
	},
	&definition{
		Name:             "super_read_only",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "super_read_only"),
		SetValue:         setDummyValue("super_read_only"),
	},
	&definition{
		Name:             "sync_binlog",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "sync_binlog"),
		SetValue:         setDummyValue("sync_binlog"),
	},
	&definition{
		Name:             "sync_frm",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "sync_frm"),
		SetValue:         setDummyValue("sync_frm"),
	},
	&definition{
		Name:             "sync_master_info",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(10000, "sync_master_info"),
		SetValue:         setDummyValue("sync_master_info"),
	},
	&definition{
		Name:             "sync_relay_log",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(10000, "sync_relay_log"),
		SetValue:         setDummyValue("sync_relay_log"),
	},
	&definition{
		Name:             "sync_relay_log_info",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(10000, "sync_relay_log_info"),
		SetValue:         setDummyValue("sync_relay_log_info"),
	},
	&definition{
		Name:             "system_time_zone",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "system_time_zone"),
		SetValue:         setDummyValueErr("system_time_zone"),
	},
	&definition{
		Name:             "table_definition_cache",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "table_definition_cache"),
		SetValue:         setDummyValue("table_definition_cache"),
	},
	&definition{
		Name:             "table_open_cache",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(2000, "table_open_cache"),
		SetValue:         setDummyValue("table_open_cache"),
	},
	&definition{
		Name:             "table_open_cache_instances",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "table_open_cache_instances"),
		SetValue:         setDummyValueErr("table_open_cache_instances"),
	},
	&definition{
		Name:             "thread_cache_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "thread_cache_size"),
		SetValue:         setDummyValue("thread_cache_size"),
	},
	&definition{
		Name:             "thread_concurrency",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(10, "thread_concurrency"),
		SetValue:         setDummyValueErr("thread_concurrency"),
	},
	&definition{
		Name:             "thread_handling",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("one-thread-per-connection", "thread_handling"),
		SetValue:         setDummyValueErr("thread_handling"),
	},
	&definition{
		Name:             "thread_pool_algorithm",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "thread_pool_algorithm"),
		SetValue:         setDummyValueErr("thread_pool_algorithm"),
	},
	&definition{
		Name:             "thread_pool_high_priority_connection",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "thread_pool_high_priority_connection"),
		SetValue:         setDummyValue("thread_pool_high_priority_connection"),
	},
	&definition{
		Name:             "thread_pool_max_unused_threads",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "thread_pool_max_unused_threads"),
		SetValue:         setDummyValue("thread_pool_max_unused_threads"),
	},
	&definition{
		Name:             "thread_pool_prio_kickup_timer",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1000, "thread_pool_prio_kickup_timer"),
		SetValue:         setDummyValue("thread_pool_prio_kickup_timer"),
	},
	&definition{
		Name:             "thread_pool_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(16, "thread_pool_size"),
		SetValue:         setDummyValueErr("thread_pool_size"),
	},
	&definition{
		Name:             "thread_pool_stall_limit",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(6, "thread_pool_stall_limit"),
		SetValue:         setDummyValue("thread_pool_stall_limit"),
	},
	&definition{
		Name:             "thread_stack",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(196608, "thread_stack"),
		SetValue:         setDummyValueErr("thread_stack"),
	},
	&definition{
		Name:             "time_zone",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "time_zone"),
		SetValue:         setDummyValue("time_zone"),
	},
	&definition{
		Name:             "timed_mutexes",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "timed_mutexes"),
		SetValue:         setDummyValue("timed_mutexes"),
	},
	&definition{
		Name:             "timestamp",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLNumeric,
		GetValue:         getDummyValue(0, "timestamp"),
		SetValue:         setDummyValue("timestamp"),
	},
	&definition{
		Name:             "tls_version",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("TLSv1,TLSv1.1,TLSv1.2", "tls_version"),
		SetValue:         setDummyValueErr("tls_version"),
	},
	&definition{
		Name:             "tmp_table_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(16777216, "tmp_table_size"),
		SetValue:         setDummyValue("tmp_table_size"),
	},
	&definition{
		Name:             "tmpdir",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "tmpdir"),
		SetValue:         setDummyValueErr("tmpdir"),
	},
	&definition{
		Name:             "transaction_alloc_block_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(8192, "transaction_alloc_block_size"),
		SetValue:         setDummyValue("transaction_alloc_block_size"),
	},
	&definition{
		Name:             "transaction_allow_batching",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "transaction_allow_batching"),
		SetValue:         setDummyValue("transaction_allow_batching"),
	},
	&definition{
		Name:             "transaction_prealloc_size",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(4096, "transaction_prealloc_size"),
		SetValue:         setDummyValue("transaction_prealloc_size"),
	},
	&definition{
		Name:             "transaction_write_set_extraction",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("OFF", "transaction_write_set_extraction"),
		SetValue:         setDummyValue("transaction_write_set_extraction"),
	},
	&definition{
		Name:             "tx_isolation",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("REPEATABLE-READ", "tx_isolation"),
		SetValue:         setDummyValue("tx_isolation"),
	},
	&definition{
		Name:             "tx_read_only",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "tx_read_only"),
		SetValue:         setDummyValue("tx_read_only"),
	},
	&definition{
		Name:             "unique_checks",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "unique_checks"),
		SetValue:         setDummyValue("unique_checks"),
	},
	&definition{
		Name:             "updatable_views_with_limit",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "updatable_views_with_limit"),
		SetValue:         setDummyValue("updatable_views_with_limit"),
	},
	&definition{
		Name:             "validate_password_check_user_name",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(false, "validate_password_check_user_name"),
		SetValue:         setDummyValue("validate_password_check_user_name"),
	},
	&definition{
		Name:             "validate_password_dictionary_file",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "validate_password_dictionary_file"),
		SetValue:         setDummyValueErr("validate_password_dictionary_file"),
	},
	&definition{
		Name:             "validate_password_length",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(8, "validate_password_length"),
		SetValue:         setDummyValue("validate_password_length"),
	},
	&definition{
		Name:             "validate_password_mixed_case_count",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "validate_password_mixed_case_count"),
		SetValue:         setDummyValue("validate_password_mixed_case_count"),
	},
	&definition{
		Name:             "validate_password_number_count",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "validate_password_number_count"),
		SetValue:         setDummyValue("validate_password_number_count"),
	},
	&definition{
		Name:             "validate_password_policy",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("1", "validate_password_policy"),
		SetValue:         setDummyValue("validate_password_policy"),
	},
	&definition{
		Name:             "validate_password_special_char_count",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(1, "validate_password_special_char_count"),
		SetValue:         setDummyValue("validate_password_special_char_count"),
	},
	&definition{
		Name:             "validate_user_plugins",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLBoolean,
		GetValue:         getDummyValue(true, "validate_user_plugins"),
		SetValue:         setDummyValueErr("validate_user_plugins"),
	},
	&definition{
		Name:             "version_compile_machine",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "version_compile_machine"),
		SetValue:         setDummyValueErr("version_compile_machine"),
	},
	&definition{
		Name:             "version_compile_os",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("", "version_compile_os"),
		SetValue:         setDummyValueErr("version_compile_os"),
	},
	&definition{
		Name:             "version_tokens_session",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLVarchar,
		GetValue:         getDummyValue("NULL", "version_tokens_session"),
		SetValue:         setDummyValue("version_tokens_session"),
	},
	&definition{
		Name:             "version_tokens_session_number",
		Kind:             SystemKind,
		AllowedSetScopes: GlobalScope | SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "version_tokens_session_number"),
		SetValue:         setDummyValueErr("version_tokens_session_number"),
	},
	&definition{
		Name:             "warning_count",
		Kind:             SystemKind,
		AllowedSetScopes: SessionScope,
		SQLType:          schema.SQLInt64,
		GetValue:         getDummyValue(0, "warning_count"),
		SetValue:         setDummyValueErr("warning_count"),
	},
}

func getDummyValue(v interface{}, name string) func(*Container) interface{} {
	return func(c *Container) interface{} {
		log.Warnf(log.DebugHigh, `the system variable "%s" is unimplemented. returning default value, %v`, name, v)
		return v
	}
}

func setDummyValue(name string) func(*Container, interface{}) error {
	return func(c *Container, v interface{}) error {
		log.Warnf(log.DebugHigh, `the system variable "%s" is unimplemented. setting it will have no effect.`, name)
		return nil
	}
}

func setDummyValueErr(name string) func(*Container, interface{}) error {
	return func(c *Container, v interface{}) error {
		return mysqlerrors.Defaultf(mysqlerrors.ER_VARIABLE_IS_READONLY, "system", name)
	}
}
