#
# Data
#
data:
- inline: 
    db: "test"
    collection: "join_1"
    docs:
    - { _id: 0, a: 1, b: ~ }
    - { _id: 1, a: 2, b: 1 }
    - { _id: 2, a: 3 }
- inline: 
    db: "test"
    collection: "join_2"
    docs:
    - { _id: 0, c: 10, d: ~ }
    - { _id: 1, c: 11, d: 1 }
    - { _id: 20, c: 30 }
- inline: 
    db: "test"
    collection: "join_3"
    docs:
    - { _id: 0, a: 4, c: 10, d: ~ }
    - { _id: 1, a: 3, c: 11, d: 1 }
    - { _id: 2, a: 14, c: 30 }
    - { _id: 3, c: 30 }
- inline: 
    db: "test"
    collection: "join_4"
    docs:
    - { _id: 0, a: 3, b: 5, c: 10, d: ~ }
    - { _id: 1, a: 2, b: 6, c: 11, d: 1 }
    - { _id: 20, c: 30 }
- inline: 
    db: "test"
    collection: "join_5"
    docs:
    - { _id: 0, b: 5, c: 10, e: 3}
    - { _id: 1, b: 8, c: 11, e: 5}
    - { _id: 20, c: 30 }

#
# Schema
#
schema:
- db: test
  tables:
  - table: foo
    collection: "join_1"
    columns:
    - Name: _id
      MongoType: int
      SqlName: id
      SqlType: int
    - Name: a
      MongoType: int
      SqlName: a
      SqlType: int
    - Name: b
      MongoType: int
      SqlName: b
      SqlType: int
  - table: bar
    collection: "join_2"
    columns:
    - Name: _id
      MongoType: int
      SqlName: id
      SqlType: int
    - Name: c
      MongoType: int
      SqlName: c
      SqlType: int
    - Name: d
      MongoType: int
      SqlName: d
      SqlType: int
  - table: baz
    collection: "join_3"
    columns:
    - Name: _id
      MongoType: int
      SqlName: id
      SqlType: int
    - Name: a
      MongoType: int
      SqlName: a
      SqlType: int
    - Name: c
      MongoType: int
      SqlName: c
      SqlType: int
    - Name: d
      MongoType: int
      SqlName: d
      SqlType: int
  - table: foobar
    collection: "join_4"
    columns:
    - Name: _id
      MongoType: int
      SqlName: id
      SqlType: int
    - Name: a
      MongoType: int
      SqlName: a
      SqlType: int
    - Name: b
      MongoType: int
      SqlName: b
      SqlType: int
    - Name: c
      MongoType: int
      SqlName: c
      SqlType: int
    - Name: d
      MongoType: int
      SqlName: d
      SqlType: int
  - table: barbaz
    collection: "join_5"
    columns:
    - Name: _id
      MongoType: int
      SqlName: id
      SqlType: int
    - Name: b
      MongoType: int
      SqlName: b
      SqlType: int
    - Name: c
      MongoType: int
      SqlName: c
      SqlType: int
    - Name: e
      MongoType: int
      SqlName: e
      SqlType: int

#
# Tests
#
testcases:

# Cross Joins
- sql: "select * from test.foo, test.bar"
  description: "global star"
  expected_names: ["id", "a", "b", "id", "c", "d"]
  expected_types: [int, int, int, int, int, int]
  expected: 
  - [0, 1, ~, 0, 10, ~]
  - [0, 1, ~, 1, 11, 1]
  - [0, 1, ~, 20, 30, ~]
  - [1, 2, 1, 0, 10, ~]
  - [1, 2, 1, 1, 11, 1]
  - [1, 2, 1, 20, 30, ~]
  - [2, 3, ~, 0, 10, ~]
  - [2, 3, ~, 1, 11, 1]
  - [2, 3, ~, 20, 30, ~]
- sql: "select foo.*, bar.* from test.foo, test.bar"
  description: "qualified star"
  expected_names: ["id", "a", "b", "id", "c", "d"]
  expected_types: [int, int, int, int, int, int]
  expected: 
  - [0, 1, ~, 0, 10, ~]
  - [0, 1, ~, 1, 11, 1]
  - [0, 1, ~, 20, 30, ~]
  - [1, 2, 1, 0, 10, ~]
  - [1, 2, 1, 1, 11, 1]
  - [1, 2, 1, 20, 30, ~]
  - [2, 3, ~, 0, 10, ~]
  - [2, 3, ~, 1, 11, 1]
  - [2, 3, ~, 20, 30, ~]
- sql: "select f.*, b.* from test.foo f, test.bar b"
  description: "aliased qualified star"
  expected_names: ["id", "a", "b", "id", "c", "d"]
  expected_types: [int, int, int, int, int, int]
  expected: 
  - [0, 1, ~, 0, 10, ~]
  - [0, 1, ~, 1, 11, 1]
  - [0, 1, ~, 20, 30, ~]
  - [1, 2, 1, 0, 10, ~]
  - [1, 2, 1, 1, 11, 1]
  - [1, 2, 1, 20, 30, ~]
  - [2, 3, ~, 0, 10, ~]
  - [2, 3, ~, 1, 11, 1]
  - [2, 3, ~, 20, 30, ~]
- sql: "select f.*, b.* from test.foo f, (select * from test.bar) b"
  description: "aliased qualified star with subquery"
  expected_names: ["id", "a", "b", "id", "c", "d"]
  expected_types: [int, int, int, int, int, int]
  expected: 
  - [0, 1, ~, 0, 10, ~]
  - [0, 1, ~, 1, 11, 1]
  - [0, 1, ~, 20, 30, ~]
  - [1, 2, 1, 0, 10, ~]
  - [1, 2, 1, 1, 11, 1]
  - [1, 2, 1, 20, 30, ~]
  - [2, 3, ~, 0, 10, ~]
  - [2, 3, ~, 1, 11, 1]
  - [2, 3, ~, 20, 30, ~]

# Implicit Inner Joins
- sql: "select a, c from test.foo, test.bar where foo.id = bar.id"
  description: "implicit inner join"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [1, 10]
  - [2, 11]
- sql: "select a, c from test.foo, test.bar where foo.id = bar.id AND foo.a > 1"
  description: "implicit inner join with additional criteria"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [2, 11]
- sql: "select a, c from test.foo, test.bar where foo.id = bar.id AND foo.a = 1214"
  description: "implicit inner join with no results"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: []
- sql: "select a, c from test.foo, (select * from test.bar) bar where foo.id = bar.id"
  description: "implicit inner join with subquery"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [1, 10]
  - [2, 11]

# Inner Joins
- sql: "select a, c from test.foo inner join test.bar on foo.id = bar.id"
  description: "inner join"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [1, 10]
  - [2, 11]
- sql: "select a, c from test.foo inner join test.bar on foo.id = bar.id AND foo.a > 1"
  description: "inner join with additional criteria"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [2, 11]
- sql: "select a, c from test.foo inner join test.bar on foo.a > 1 AND foo.id = bar.id"
  description: "inner join with additional criteria (reversed)"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [2, 11]
- sql: "select a, c from test.foo inner join test.bar on foo.id = bar.id AND foo.a = 1214"
  description: "inner join with no results"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: []
- sql: "select a, c from test.foo inner join (select * from test.bar) bar on foo.id = bar.id"
  description: "inner join with subquery"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [1, 10]
  - [2, 11]
- sql: "select a, c from test.foo inner join test.bar on foo.b = bar.d"
  description: "inner join with null on the left"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [2, 11] 
- sql: "select foo.a, bar.c, baz.d from test.foo inner join test.bar on foo.id = bar.id inner join test.baz on bar.id = baz.id"
  description: "inner join with three tables"
  expected_names: ["a", "c", "d"]
  expected_types: [int, int, int]
  expected: 
  - [1, 10, ~]
  - [2, 11, 1]
- sql: "select foo.a, bar.c, baz.d, foobar.b from test.foo inner join test.bar on foo.id = bar.id inner join test.baz on bar.id = baz.id inner join test.foobar on baz.id = foobar.id"
  description: "inner join with four tables"
  expected_names: ["a", "c", "d", "b"]
  expected_types: [int, int, int, int]
  expected: 
  - [1, 10, ~, 5]
  - [2, 11, 1, 6]
- sql: "select foo.a, bar.c, baz.d, foobar.b, barbaz.e from test.foo inner join test.bar on foo.id = bar.id inner join test.baz on bar.id = baz.id inner join test.foobar on baz.id = foobar.id inner join test.barbaz on foobar.id = barbaz.id"
  description: "inner join with five tables"
  expected_names: ["a", "c", "d", "b", "e"]
  expected_types: [int, int, int, int, int]
  expected: 
  - [1, 10, ~, 5, 3]
  - [2, 11, 1, 6, 5]
- sql: "select foo.a, bar.c, baz.d from test.foo inner join test.bar on foo.id = bar.id inner join test.baz on bar.id = baz.id AND foo.a > 1"
  description: "inner join with three tables with additional criteria"
  expected_names: ["a", "c", "d"]
  expected_types: [int, int, int]
  expected: 
  - [2, 11, 1]
- sql: "select foo.a, bar.c, baz.d from test.foo inner join test.bar on foo.a > 1 AND foo.id = bar.id inner join test.baz on bar.id = baz.id"
  description: "inner join with three tables with additional criteria (reversed)"
  expected_names: ["a", "c", "d"]
  expected_types: [int, int, int]
  expected: 
  - [2, 11, 1]
- sql: "select foo.a, bar.c, baz.d from test.foo inner join (select * from test.bar) bar on foo.id = bar.id inner join test.baz on bar.id = baz.id"
  description: "inner join with subquery and three tables"
  expected_names: ["a", "c", "d"]
  expected_types: [int, int, int]
  expected: 
  - [1, 10, ~]
  - [2, 11, 1]
- sql: "select foo.a, bar.c, baz.d from test.foo inner join test.bar on foo.b = bar.d inner join test.baz on bar.d = baz.d"
  description: "inner join with null on the left and three tables"
  expected_names: ["a", "c", "d"]
  expected_types: [int, int, int]
  expected: 
  - [2, 11, 1] 

# Left Outer Joins
- sql: "select a, c from test.foo left outer join test.bar on foo.id = bar.id"
  description: "left outer join"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [1, 10]
  - [2, 11]
  - [3, ~]
- sql: "select a, c from test.foo left outer join test.bar on foo.id = bar.id AND foo.a > 1"
  description: "left outer join with additional criteria"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [1, ~]
  - [2, 11]
  - [3, ~]
- sql: "select a, c from test.foo left outer join test.bar on foo.a > 1 AND foo.id = bar.id"
  description: "left outer join with additional criteria (reversed)"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [1, ~]
  - [2, 11]
  - [3, ~]
- sql: "select a, c from test.foo left outer join test.bar on foo.id = bar.id AND foo.a = 1214"
  description: "left outer join with no results"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [1, ~]
  - [2, ~]
  - [3, ~]
- sql: "select a, c from test.foo left outer join (select * from test.bar) bar on foo.id = bar.id"
  description: "left outer join with subquery"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [1, 10]
  - [2, 11]
  - [3, ~]
- sql: "select a, c from test.foo left outer join test.bar on foo.b = bar.d"
  description: "left outer join with null on the left"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [1, ~]
  - [2, 11]
  - [3, ~] 
- sql: "select foo.a, bar.c, baz.d from test.foo left outer join test.bar on foo.id = bar.id left outer join test.baz on bar.id = baz.id"
  description: "left outer join with three tables"
  expected_names: ["a", "c", "d"]
  expected_types: [int, int, int]
  expected: 
  - [1, 10, ~]
  - [2, 11, 1]
  - [3, ~, ~]
- sql: "select foo.a, bar.c, baz.d, foobar.b from test.foo left outer join test.bar on foo.id = bar.id left outer join test.baz on bar.id = baz.id left outer join test.foobar on baz.id = foobar.id"
  description: "left outer join with four tables"
  expected_names: ["a", "c", "d", "b"]
  expected_types: [int, int, int, int]
  expected: 
  - [1, 10, ~, 5]
  - [2, 11, 1, 6]
  - [3, ~, ~, ~]
- sql: "select foo.a, bar.c, baz.d, foobar.b, barbaz.e from test.foo left outer join test.bar on foo.id = bar.id left outer join test.baz on bar.id = baz.id left outer join test.foobar on baz.id = foobar.id left outer join test.barbaz on foobar.id = barbaz.id"
  description: "left outer join with five tables"
  expected_names: ["a", "c", "d", "b", "e"]
  expected_types: [int, int, int, int, int]
  expected: 
  - [1, 10, ~, 5, 3]
  - [2, 11, 1, 6, 5]
  - [3, ~, ~, ~, ~]
- sql: "select foo.a, bar.c, baz.d from test.foo left outer join test.bar on foo.id = bar.id left outer join test.baz on bar.id = baz.id AND foo.a > 1"
  description: "left outer join with three tables with additional criteria"
  expected_names: ["a", "c", "d"]
  expected_types: [int, int, int]
  expected: 
  - [1, 10, ~]
  - [2, 11, 1]
  - [3, ~, ~]
- sql: "select foo.a, bar.c, baz.d from test.foo left outer join test.bar on foo.a > 1 AND foo.id = bar.id left outer join test.baz on bar.id = baz.id"
  description: "left outer join with three tables with additional criteria (reversed)"
  expected_names: ["a", "c", "d"]
  expected_types: [int, int, int]
  expected: 
  - [1, ~, ~]
  - [2, 11, 1]
  - [3, ~, ~]
- sql: "select foo.a, bar.c, baz.d from test.foo left outer join (select * from test.bar) bar on foo.id = bar.id left outer join test.baz on bar.id = baz.id"
  description: "left outer join with subquery and three tables"
  expected_names: ["a", "c", "d"]
  expected_types: [int, int, int]
  expected: 
  - [1, 10, ~]
  - [2, 11, 1]
  - [3, ~, ~]
- sql: "select foo.a, bar.c, baz.d from test.foo left outer join test.bar on foo.b = bar.d left outer join test.baz on bar.d = baz.d"
  description: "left outer join with null on the left and three tables"
  expected_names: ["a", "c", "d"]
  expected_types: [int, int, int]
  expected: 
  - [1, ~, ~] 
  - [2, 11, 1]
  - [3, ~, ~]

# Right Outer Joins
- sql: "select a, c from test.foo right outer join test.bar on foo.id = bar.id"
  description: "right outer join"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [1, 10]
  - [2, 11]
  - [~, 30]
- sql: "select a, c from test.foo right outer join test.bar on foo.id = bar.id AND foo.a > 1"
  description: "right outer join with additional criteria"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [~, 10]
  - [2, 11]
  - [~, 30]
- sql: "select a, c from test.foo right outer join test.bar on foo.a > 1 AND foo.id = bar.id"
  description: "right outer join with additional criteria (reversed)"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [~, 10]
  - [2, 11]
  - [~, 30]
- sql: "select a, c from test.foo right outer join test.bar on foo.id = bar.id AND foo.a = 1214"
  description: "right outer join with no results"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [~, 10]
  - [~, 11]
  - [~, 30]
- sql: "select a, c from test.foo right outer join (select * from test.bar) bar on foo.id = bar.id"
  description: "right outer join"
  expected_names: ["a", "c"]
  expected_types: [int, int]
  expected: 
  - [1, 10]
  - [2, 11]
  - [~, 30]
- sql: "select foo.a, bar.c, baz.d from test.foo right outer join test.bar on foo.id = bar.id right outer join test.baz on bar.id = baz.id"
  description: "right outer join with three tables"
  expected_names: ["a", "c", "d"]
  expected_types: [int, int, int]
  expected: 
  - [1, 10, ~]
  - [2, 11, 1]
  - [~, ~, ~]
  - [~, ~, ~]
- sql: "select foo.a, bar.c, baz.d, foobar.b from test.foo right outer join test.bar on foo.id = bar.id right outer join test.baz on bar.id = baz.id right outer join test.foobar on baz.id = foobar.id"
  description: "right outer join with four tables"
  expected_names: ["a", "c", "d", "b"]
  expected_types: [int, int, int, int]
  expected: 
  - [1, 10, ~, 5]
  - [2, 11, 1, 6]
  - [~, ~, ~, ~]
- sql: "select foo.a, bar.c, baz.d, foobar.b, barbaz.e from test.foo left outer join test.bar on foo.id = bar.id left outer join test.baz on bar.id = baz.id left outer join test.foobar on baz.id = foobar.id left outer join test.barbaz on foobar.id = barbaz.id"
  description: "right outer join with five tables"
  expected_names: ["a", "c", "d", "b", "e"]
  expected_types: [int, int, int, int, int]
  expected: 
  - [1, 10, ~, 5, 3]
  - [2, 11, 1, 6, 5]
  - [3, ~, ~, ~, ~]
- sql: "select foo.a, bar.c, baz.d from test.foo right outer join test.bar on foo.id = bar.id right outer join test.baz on bar.id = baz.id AND foo.a > 1"
  description: "right outer join with three tables with additional criteria"
  expected_names: ["a", "c", "d"]
  expected_types: [int, int, int]
  expected: 
  - [~, ~, ~]
  - [2, 11, 1]
  - [~, ~, ~]
  - [~, ~, ~]
- sql: "select foo.a, bar.c, baz.d from test.foo right outer join test.bar on foo.a > 1 AND foo.id = bar.id right outer join test.baz on bar.id = baz.id"
  description: "left outer join with three tables with additional criteria (reversed)"
  expected_names: ["a", "c", "d"]
  expected_types: [int, int, int]
  expected: 
  - [~, 10, ~]
  - [2, 11, 1]
  - [~, ~, ~]
  - [~, ~, ~]
- sql: "select foo.a, bar.c, baz.d from test.foo right outer join (select * from test.bar) bar on foo.id = bar.id right outer join test.baz on bar.id = baz.id"
  description: "right outer join with subquery and three tables"
  expected_names: ["a", "c", "d"]
  expected_types: [int, int, int]
  expected: 
  - [1, 10, ~]
  - [2, 11, 1]
  - [~, ~, ~]
  - [~, ~, ~]
- sql: "select foo.a, bar.c, baz.d from test.foo left outer join test.bar on foo.b = bar.d left outer join test.baz on bar.d = baz.d"
  description: "right outer join with null on the right and three tables"
  expected_names: ["a", "c", "d"]
  expected_types: [int, int, int]
  expected: 
  - [1, ~, ~] 
  - [2, 11, 1]
  - [3, ~, ~]
